---
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |2-

      [
          {
              "apiVersion": "ocs.openshift.io/v1",
              "kind": "StorageCluster",
              "metadata": {
                  "name": "example-storagecluster",
                  "namespace": "openshift-storage"
              },
              "spec": {
                  "manageNodes": false,
                  "monPVCTemplate": {
                      "spec": {
                          "accessModes": [
                              "ReadWriteOnce"
                          ],
                          "resources": {
                              "requests": {
                                  "storage": "10Gi"
                              }
                          },
                          "storageClassName": "gp2"
                      }
                  },
                  "storageDeviceSets": [
                      {
                          "count": 3,
                          "dataPVCTemplate": {
                              "spec": {
                                  "accessModes": [
                                      "ReadWriteOnce"
                                  ],
                                  "resources": {
                                      "requests": {
                                          "storage": "1Ti"
                                      }
                                  },
                                  "storageClassName": "gp2",
                                  "volumeMode": "Block"
                              }
                          },
                          "name": "example-deviceset",
                          "placement": {},
                          "portable": true,
                          "resources": {}
                      }
                  ]
              }
          }
      ]
    capabilities: Full Lifecycle
    categories: Storage
    containerImage: quay.io/multi-arch/ocs4-ocs-rhel8-operator:4.3
    createdAt: "2020-06-03 18:40:03"
    description: Red Hat OpenShift Container Storage provides hyperconverged storage
      for applications within an OpenShift cluster.
    external.features.ocs.openshift.io/export-script: |-
      JycnCkNvcHlyaWdodCAyMDIwIFRoZSBSb29rIEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQu
      CgpMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxp
      Y2Vuc2UiKTsKeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3
      aXRoIHRoZSBMaWNlbnNlLgpZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQK
      CglodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKClVubGVzcyByZXF1
      aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUK
      ZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElT
      IiBCQVNJUywKV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVp
      dGhlciBleHByZXNzIG9yIGltcGxpZWQuClNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmlj
      IGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKbGltaXRhdGlvbnMgdW5kZXIgdGhl
      IExpY2Vuc2UuCicnJwoKaW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgYXJncGFyc2UKaW1w
      b3J0IHVuaXR0ZXN0CmltcG9ydCByZQpmcm9tIG9zIGltcG9ydCBsaW5lc2VwIGFzIExJTkVTRVAK
      CiMgYmFja3dhcmQgY29tcGF0aWJpbGl0eSB3aXRoIDIueAp0cnk6CiAgICBNb2R1bGVOb3RGb3Vu
      ZEVycm9yCmV4Y2VwdDoKICAgIE1vZHVsZU5vdEZvdW5kRXJyb3IgPSBJbXBvcnRFcnJvcgoKdHJ5
      OgogICAgaW1wb3J0IHJhZG9zCmV4Y2VwdCBNb2R1bGVOb3RGb3VuZEVycm9yIGFzIG5vTW9kRXJy
      OgogICAgcHJpbnQoIkVycm9yOiAlc1xuRXhpdGluZyB0aGUgc2NyaXB0Li4uIiAlIG5vTW9kRXJy
      KQogICAgc3lzLmV4aXQoMSkKCnRyeToKICAgICMgZm9yIDIuNy54CiAgICBmcm9tIFN0cmluZ0lP
      IGltcG9ydCBTdHJpbmdJTwpleGNlcHQgTW9kdWxlTm90Rm91bmRFcnJvcjoKICAgICMgZm9yIDMu
      eAogICAgZnJvbSBpbyBpbXBvcnQgU3RyaW5nSU8KCgpjbGFzcyBFeGVjdXRpb25GYWlsdXJlRXhj
      ZXB0aW9uKEV4Y2VwdGlvbik6CiAgICBwYXNzCgoKY2xhc3MgUmFkb3NKU09OOgogICAgRVhURVJO
      QUxfVVNFUl9OQU1FID0gImNsaWVudC5oZWFsdGhjaGVja2VyIgogICAgRU1QVFlfT1VUUFVUX0xJ
      U1QgPSAiRW1wdHkgb3V0cHV0IGxpc3QiCgogICAgQGNsYXNzbWV0aG9kCiAgICBkZWYgZ2VuX2Fy
      Z19wYXJzZXIoY2xzLCBhcmdzX3RvX3BhcnNlPU5vbmUpOgogICAgICAgIGFyZ1AgPSBhcmdwYXJz
      ZS5Bcmd1bWVudFBhcnNlcigpCiAgICAgICAgYXJnUC5hZGRfYXJndW1lbnQoIi0tdmVyYm9zZSIs
      ICItdiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aW9uPSdzdG9yZV90cnVlJywgZGVm
      YXVsdD1GYWxzZSkKICAgICAgICBhcmdQLmFkZF9hcmd1bWVudCgiLS1jZXBoLWNvbmYiLCAiLWMi
      LAogICAgICAgICAgICAgICAgICAgICAgICAgIGhlbHA9IlByb3ZpZGUgYSBjZXBoIGNvbmYgZmls
      ZS4iLCB0eXBlPXN0cikKICAgICAgICBhcmdQLmFkZF9hcmd1bWVudCgiLS1ydW4tYXMtdXNlciIs
      ICItdSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0iUHJvdmlkZXMgYSB1c2VyIG5h
      bWUgdG8gY2hlY2sgdGhlIGNsdXN0ZXIncyBoZWFsdGggc3RhdHVzLCBtdXN0IGJlIHByZWZpeGVk
      IGJ5ICdjbGllbnQuJyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdD1jbHMuRVhU
      RVJOQUxfVVNFUl9OQU1FLCB0eXBlPXN0cikKICAgICAgICBhcmdQLmFkZF9hcmd1bWVudCgiLS1m
      b3JtYXQiLCAiLXQiLCBjaG9pY2VzPVsianNvbiIsICJiYXNoIl0sCiAgICAgICAgICAgICAgICAg
      ICAgICAgICAgZGVmYXVsdD0nanNvbicsIGhlbHA9IlByb3ZpZGVzIHRoZSBvdXRwdXQgZm9ybWF0
      IChqc29uIHwgYmFzaCkiKQogICAgICAgIGFyZ1AuYWRkX2FyZ3VtZW50KCItLWNsdXN0ZXItbmFt
      ZSIsIGRlZmF1bHQ9Im9wZW5zaGlmdC1zdG9yYWdlIiwKICAgICAgICAgICAgICAgICAgICAgICAg
      ICBoZWxwPSJDZXBoIGNsdXN0ZXIgbmFtZSIpCiAgICAgICAgYXJnUC5hZGRfYXJndW1lbnQoIi0t
      b3V0cHV0IiwgIi1vIiwgZGVmYXVsdD0iIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBoZWxw
      PSJPdXRwdXQgd2lsbCBiZSBzdG9yZWQgaW50byB0aGUgcHJvdmlkZWQgZmlsZSIpCiAgICAgICAg
      YXJnUC5hZGRfYXJndW1lbnQoIi0tY2VwaGZzLWZpbGVzeXN0ZW0tbmFtZSIsIGRlZmF1bHQ9IiIs
      CiAgICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0iUHJvdmlkZXMgdGhlIG5hbWUgb2YgdGhl
      IENlcGggZmlsZXN5c3RlbSIpCiAgICAgICAgYXJnUC5hZGRfYXJndW1lbnQoIi0tY2VwaGZzLWRh
      dGEtcG9vbC1uYW1lIiwgZGVmYXVsdD0iIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBoZWxw
      PSJQcm92aWRlcyB0aGUgbmFtZSBvZiB0aGUgY2VwaGZzIGRhdGEgcG9vbCIpCiAgICAgICAgYXJn
      UC5hZGRfYXJndW1lbnQoIi0tcmJkLWRhdGEtcG9vbC1uYW1lIiwgZGVmYXVsdD0iIiwgcmVxdWly
      ZWQ9VHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICBoZWxwPSJQcm92aWRlcyB0aGUgbmFt
      ZSBvZiB0aGUgUkJEIGRhdGFwb29sIikKICAgICAgICBhcmdQLmFkZF9hcmd1bWVudCgiLS1uYW1l
      c3BhY2UiLCBkZWZhdWx0PSIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGhlbHA9Ik5hbWVz
      cGFjZSB3aGVyZSBDZXBoQ2x1c3RlciBpcyBydW5uaW5nIikKICAgICAgICBhcmdQLmFkZF9hcmd1
      bWVudCgiLS1yZ3ctcG9vbC1wcmVmaXgiLCBkZWZhdWx0PSJkZWZhdWx0IiwKICAgICAgICAgICAg
      ICAgICAgICAgICAgICBoZWxwPSJSR1cgUG9vbCBwcmVmaXgiKQogICAgICAgIGFyZ1AuYWRkX2Fy
      Z3VtZW50KCItLXJndy1lbmRwb2ludCIsIGRlZmF1bHQ9IiIsIHJlcXVpcmVkPVRydWUsCiAgICAg
      ICAgICAgICAgICAgICAgICAgICAgaGVscD0iUmFkb3MgR2F0ZVdheSBlbmRwb2ludCAoaW4gPElQ
      Pjo8UE9SVD4gZm9ybWF0KSIpCiAgICAgICAgaWYgYXJnc190b19wYXJzZToKICAgICAgICAgICAg
      YXNzZXJ0IHR5cGUoYXJnc190b19wYXJzZSkgPT0gbGlzdCwgXAogICAgICAgICAgICAgICAgIkFy
      Z3VtZW50IHRvICdnZW5fYXJnX3BhcnNlcicgc2hvdWxkIGJlIGEgbGlzdCIKICAgICAgICBlbHNl
      OgogICAgICAgICAgICBhcmdzX3RvX3BhcnNlID0gc3lzLmFyZ3ZbMTpdCiAgICAgICAgcmV0dXJu
      IGFyZ1AucGFyc2VfYXJncyhhcmdzX3RvX3BhcnNlKQoKICAgIGRlZiBfaW52YWxpZF9lbmRwb2lu
      dChzZWxmLCBlbmRwb2ludF9zdHIpOgogICAgICAgIHRyeToKICAgICAgICAgICAgaXB2NCwgcG9y
      dCA9IGVuZHBvaW50X3N0ci5zcGxpdCgnOicpCiAgICAgICAgZXhjZXB0IFZhbHVlRXJyb3I6CiAg
      ICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAg
      ICAiTm90IGEgcHJvcGVyIGVuZHBvaW50OiB7fSwgPElQPjo8UE9SVD4sIGZvcm1hdCBpcyBleHBl
      Y3RlZCIuZm9ybWF0KGVuZHBvaW50X3N0cikpCiAgICAgICAgaXBQYXJ0cyA9IGlwdjQuc3BsaXQo
      Jy4nKQogICAgICAgIGlmIGxlbihpcFBhcnRzKSAhPSA0OgogICAgICAgICAgICByYWlzZSBFeGVj
      dXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgIk5vdCBhIHZhbGlkIElQIGFk
      ZHJlc3M6IHt9Ii5mb3JtYXQoaXB2NCkpCiAgICAgICAgZm9yIGVhY2hQYXJ0IGluIGlwUGFydHM6
      CiAgICAgICAgICAgIGlmIG5vdCBlYWNoUGFydC5pc2RpZ2l0KCk6CiAgICAgICAgICAgICAgICBy
      YWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgICAgICJJUCBh
      ZGRyZXNzIHBhcnRzIHNob3VsZCBiZSBudW1iZXJzOiB7fSIuZm9ybWF0KGlwdjQpKQogICAgICAg
      ICAgICBpbnRQYXJ0ID0gaW50KGVhY2hQYXJ0KQogICAgICAgICAgICBpZiBpbnRQYXJ0IDwgMSBv
      ciBpbnRQYXJ0ID4gMjU0OgogICAgICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4
      Y2VwdGlvbigKICAgICAgICAgICAgICAgICAgICAiT3V0IG9mIHJhbmdlIElQIGFkZHJlc3Nlczog
      e30iLmZvcm1hdChpcHY0KSkKICAgICAgICBpZiBub3QgcG9ydC5pc2RpZ2l0KCk6CiAgICAgICAg
      ICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oIlBvcnQgbm90IHZhbGlkOiB7fSIu
      Zm9ybWF0KHBvcnQpKQogICAgICAgIGludFBvcnQgPSBpbnQocG9ydCkKICAgICAgICBpZiBpbnRQ
      b3J0IDwgMSBvciBpbnRQb3J0ID4gMioqMTYtMToKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9u
      RmFpbHVyZUV4Y2VwdGlvbigKICAgICAgICAgICAgICAgICJPdXQgb2YgcmFuZ2UgcG9ydCBudW1i
      ZXI6IHt9Ii5mb3JtYXQocG9ydCkpCiAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIF9faW5p
      dF9fKHNlbGYsIGFyZ19saXN0PU5vbmUpOgogICAgICAgIHNlbGYub3V0X21hcCA9IHt9CiAgICAg
      ICAgc2VsZi5fZXhjbHVkZWRfa2V5cyA9IHNldCgpCiAgICAgICAgc2VsZi5fYXJnX3BhcnNlciA9
      IHNlbGYuZ2VuX2FyZ19wYXJzZXIoYXJnc190b19wYXJzZT1hcmdfbGlzdCkKICAgICAgICBzZWxm
      Lm91dHB1dF9maWxlID0gc2VsZi5fYXJnX3BhcnNlci5vdXRwdXQKICAgICAgICBzZWxmLmNlcGhf
      Y29uZiA9IHNlbGYuX2FyZ19wYXJzZXIuY2VwaF9jb25mCiAgICAgICAgc2VsZi5ydW5fYXNfdXNl
      ciA9IHNlbGYuX2FyZ19wYXJzZXIucnVuX2FzX3VzZXIKICAgICAgICBpZiBub3Qgc2VsZi5ydW5f
      YXNfdXNlcjoKICAgICAgICAgICAgc2VsZi5ydW5fYXNfdXNlciA9IHNlbGYuRVhURVJOQUxfVVNF
      Ul9OQU1FCiAgICAgICAgaWYgc2VsZi5jZXBoX2NvbmY6CiAgICAgICAgICAgIHNlbGYuY2x1c3Rl
      ciA9IHJhZG9zLlJhZG9zKGNvbmZmaWxlPXNlbGYuY2VwaF9jb25mKQogICAgICAgIGVsc2U6CiAg
      ICAgICAgICAgIHNlbGYuY2x1c3RlciA9IHJhZG9zLlJhZG9zKCkKICAgICAgICAgICAgc2VsZi5j
      bHVzdGVyLmNvbmZfcmVhZF9maWxlKCkKICAgICAgICBzZWxmLmNsdXN0ZXIuY29ubmVjdCgpCgog
      ICAgZGVmIHNodXRkb3duKHNlbGYpOgogICAgICAgIGlmIHNlbGYuY2x1c3Rlci5zdGF0ZSA9PSAi
      Y29ubmVjdGVkIjoKICAgICAgICAgICAgc2VsZi5jbHVzdGVyLnNodXRkb3duKCkKCiAgICBkZWYg
      Z2V0X2ZzaWQoc2VsZik6CiAgICAgICAgcmV0dXJuIHN0cihzZWxmLmNsdXN0ZXIuZ2V0X2ZzaWQo
      KSkKCiAgICBkZWYgX2NvbW1vbl9jbWRfanNvbl9nZW4oc2VsZiwgY21kX2pzb24pOgogICAgICAg
      IGNtZCA9IGpzb24uZHVtcHMoY21kX2pzb24sIHNvcnRfa2V5cz1UcnVlKQogICAgICAgIHJldF92
      YWwsIGNtZF9vdXQsIGVycl9tc2cgPSBzZWxmLmNsdXN0ZXIubW9uX2NvbW1hbmQoY21kLCBiJycp
      CiAgICAgICAgaWYgc2VsZi5fYXJnX3BhcnNlci52ZXJib3NlOgogICAgICAgICAgICBwcmludCgi
      Q29tbWFuZCBJbnB1dDoge30iLmZvcm1hdChjbWQpKQogICAgICAgICAgICBwcmludCgiUmV0dXJu
      IFZhbDoge31cbkNvbW1hbmQgT3V0cHV0OiB7fVxuRXJyb3IgTWVzc2FnZToge31cbi0tLS0tLS0t
      LS1cbiIuZm9ybWF0KAogICAgICAgICAgICAgICAgICByZXRfdmFsLCBjbWRfb3V0LCBlcnJfbXNn
      KSkKICAgICAgICBqc29uX291dCA9IHt9CiAgICAgICAgaWYgcmV0X3ZhbCA9PSAwOgogICAgICAg
      ICAgICBqc29uX291dCA9IGpzb24ubG9hZHMoY21kX291dCkKICAgICAgICByZXR1cm4gcmV0X3Zh
      bCwganNvbl9vdXQsIGVycl9tc2cKCiAgICBkZWYgZ2V0X2NlcGhfZXh0ZXJuYWxfbW9uX2RhdGEo
      c2VsZik6CiAgICAgICAgY21kX2pzb24gPSB7InByZWZpeCI6ICJxdW9ydW1fc3RhdHVzIiwgImZv
      cm1hdCI6ICJqc29uIn0KICAgICAgICByZXRfdmFsLCBqc29uX291dCwgZXJyX21zZyA9IHNlbGYu
      X2NvbW1vbl9jbWRfanNvbl9nZW4oY21kX2pzb24pCiAgICAgICAgIyBpZiB0aGVyZSBpcyBhbiB1
      bnN1Y2Nlc3NmdWwgYXR0ZW1wdCwKICAgICAgICBpZiByZXRfdmFsICE9IDAgb3IgbGVuKGpzb25f
      b3V0KSA9PSAwOgogICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAog
      ICAgICAgICAgICAgICAgIidxdW9ydW1fc3RhdHVzJyBjb21tYW5kIGZhaWxlZC5cbiIgKwogICAg
      ICAgICAgICAgICAgIkVycm9yOiB7fSIuZm9ybWF0KGVycl9tc2cgaWYgcmV0X3ZhbCAhPSAwIGVs
      c2Ugc2VsZi5FTVBUWV9PVVRQVVRfTElTVCkpCiAgICAgICAgcV9sZWFkZXJfbmFtZSA9IGpzb25f
      b3V0WydxdW9ydW1fbGVhZGVyX25hbWUnXQogICAgICAgIHFfbGVhZGVyX2RldGFpbHMgPSB7fQog
      ICAgICAgIHFfbGVhZGVyX21hdGNoaW5nX2xpc3QgPSBbbCBmb3IgbCBpbiBqc29uX291dFsnbW9u
      bWFwJ11bJ21vbnMnXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgbFsnbmFt
      ZSddID09IHFfbGVhZGVyX25hbWVdCiAgICAgICAgaWYgbGVuKHFfbGVhZGVyX21hdGNoaW5nX2xp
      c3QpID09IDA6CiAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oIk5v
      IG1hdGNoaW5nICdtb24nIGRldGFpbHMgZm91bmQiKQogICAgICAgIHFfbGVhZGVyX2RldGFpbHMg
      PSBxX2xlYWRlcl9tYXRjaGluZ19saXN0WzBdCiAgICAgICAgaXBfcG9ydCA9IHN0cihxX2xlYWRl
      cl9kZXRhaWxzWydwdWJsaWNfYWRkciddLnNwbGl0KCcvJylbMF0pCiAgICAgICAgcmV0dXJuICJ7
      fT17fSIuZm9ybWF0KHN0cihxX2xlYWRlcl9uYW1lKSwgaXBfcG9ydCkKCiAgICBkZWYgY3JlYXRl
      X2NlcGhDU0lLZXlyaW5nX2NlcGhGU1Byb3Zpc2lvbmVyKHNlbGYpOgogICAgICAgICcnJwogICAg
      ICAgIGNvbW1hbmQ6IGNlcGggYXV0aCBnZXQtb3ItY3JlYXRlIGNsaWVudC5jc2ktY2VwaGZzLXBy
      b3Zpc2lvbmVyIG1vbiAnYWxsb3cgcicgbWdyICdhbGxvdyBydycgb3NkICdhbGxvdyBydyB0YWcg
      Y2VwaGZzIG1ldGFkYXRhPSonCiAgICAgICAgJycnCiAgICAgICAgY21kX2pzb24gPSB7InByZWZp
      eCI6ICJhdXRoIGdldC1vci1jcmVhdGUiLAogICAgICAgICAgICAgICAgICAgICJlbnRpdHkiOiAi
      Y2xpZW50LmNzaS1jZXBoZnMtcHJvdmlzaW9uZXIiLAogICAgICAgICAgICAgICAgICAgICJjYXBz
      IjogWyJtb24iLCAiYWxsb3cgciIsICJtZ3IiLCAiYWxsb3cgcnciLAogICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgICJvc2QiLCAiYWxsb3cgcncgdGFnIGNlcGhmcyBtZXRhZGF0YT0qIl0sCiAg
      ICAgICAgICAgICAgICAgICAgImZvcm1hdCI6ICJqc29uIn0KICAgICAgICByZXRfdmFsLCBqc29u
      X291dCwgZXJyX21zZyA9IHNlbGYuX2NvbW1vbl9jbWRfanNvbl9nZW4oY21kX2pzb24pCiAgICAg
      ICAgIyBpZiB0aGVyZSBpcyBhbiB1bnN1Y2Nlc3NmdWwgYXR0ZW1wdCwKICAgICAgICBpZiByZXRf
      dmFsICE9IDAgb3IgbGVuKGpzb25fb3V0KSA9PSAwOgogICAgICAgICAgICByYWlzZSBFeGVjdXRp
      b25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgIidhdXRoIGdldC1vci1jcmVhdGUg
      Y2xpZW50LmNzaS1jZXBoZnMtcHJvdmlzaW9uZXInIGNvbW1hbmQgZmFpbGVkLlxuIiArCiAgICAg
      ICAgICAgICAgICAiRXJyb3I6IHt9Ii5mb3JtYXQoZXJyX21zZyBpZiByZXRfdmFsICE9IDAgZWxz
      ZSBzZWxmLkVNUFRZX09VVFBVVF9MSVNUKSkKICAgICAgICByZXR1cm4gc3RyKGpzb25fb3V0WzBd
      WydrZXknXSkKCiAgICBkZWYgY3JlYXRlX2NlcGhDU0lLZXlyaW5nX2NlcGhGU05vZGUoc2VsZik6
      CiAgICAgICAgY21kX2pzb24gPSB7InByZWZpeCI6ICJhdXRoIGdldC1vci1jcmVhdGUiLAogICAg
      ICAgICAgICAgICAgICAgICJlbnRpdHkiOiAiY2xpZW50LmNzaS1jZXBoZnMtbm9kZSIsCiAgICAg
      ICAgICAgICAgICAgICAgImNhcHMiOiBbIm1vbiIsICJhbGxvdyByIiwKICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgICAibWdyIiwgImFsbG93IHJ3IiwKICAgICAgICAgICAgICAgICAgICAgICAg
      ICAgICAib3NkIiwgImFsbG93IHJ3IHRhZyBjZXBoZnMgKj0qIiwKICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICAibWRzIiwgImFsbG93IHJ3Il0sCiAgICAgICAgICAgICAgICAgICAgImZvcm1h
      dCI6ICJqc29uIn0KICAgICAgICByZXRfdmFsLCBqc29uX291dCwgZXJyX21zZyA9IHNlbGYuX2Nv
      bW1vbl9jbWRfanNvbl9nZW4oY21kX2pzb24pCiAgICAgICAgIyBpZiB0aGVyZSBpcyBhbiB1bnN1
      Y2Nlc3NmdWwgYXR0ZW1wdCwKICAgICAgICBpZiByZXRfdmFsICE9IDAgb3IgbGVuKGpzb25fb3V0
      KSA9PSAwOgogICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAg
      ICAgICAgICAgICAgIidhdXRoIGdldC1vci1jcmVhdGUgY2xpZW50LmNzaS1jZXBoZnMtbm9kZScg
      Y29tbWFuZCBmYWlsZWQuXG4iICsKICAgICAgICAgICAgICAgICJFcnJvcjoge30iLmZvcm1hdChl
      cnJfbXNnIGlmIHJldF92YWwgIT0gMCBlbHNlIHNlbGYuRU1QVFlfT1VUUFVUX0xJU1QpKQogICAg
      ICAgIHJldHVybiBzdHIoanNvbl9vdXRbMF1bJ2tleSddKQoKICAgIGRlZiBjcmVhdGVfY2VwaENT
      SUtleXJpbmdfUkJEUHJvdmlzaW9uZXIoc2VsZik6CiAgICAgICAgY21kX2pzb24gPSB7InByZWZp
      eCI6ICJhdXRoIGdldC1vci1jcmVhdGUiLAogICAgICAgICAgICAgICAgICAgICJlbnRpdHkiOiAi
      Y2xpZW50LmNzaS1yYmQtcHJvdmlzaW9uZXIiLAogICAgICAgICAgICAgICAgICAgICJjYXBzIjog
      WyJtb24iLCAicHJvZmlsZSByYmQiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJtZ3Ii
      LCAiYWxsb3cgcnciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJvc2QiLCAicHJvZmls
      ZSByYmQiXSwKICAgICAgICAgICAgICAgICAgICAiZm9ybWF0IjogImpzb24ifQogICAgICAgIHJl
      dF92YWwsIGpzb25fb3V0LCBlcnJfbXNnID0gc2VsZi5fY29tbW9uX2NtZF9qc29uX2dlbihjbWRf
      anNvbikKICAgICAgICAjIGlmIHRoZXJlIGlzIGFuIHVuc3VjY2Vzc2Z1bCBhdHRlbXB0LAogICAg
      ICAgIGlmIHJldF92YWwgIT0gMCBvciBsZW4oanNvbl9vdXQpID09IDA6CiAgICAgICAgICAgIHJh
      aXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAiJ2F1dGggZ2V0
      LW9yLWNyZWF0ZSBjbGllbnQuY3NpLXJiZC1wcm92aXNpb25lcicgY29tbWFuZCBmYWlsZWQuXG4i
      ICsKICAgICAgICAgICAgICAgICJFcnJvcjoge30iLmZvcm1hdChlcnJfbXNnIGlmIHJldF92YWwg
      IT0gMCBlbHNlIHNlbGYuRU1QVFlfT1VUUFVUX0xJU1QpKQogICAgICAgIHJldHVybiBzdHIoanNv
      bl9vdXRbMF1bJ2tleSddKQoKICAgIGRlZiBnZXRfY2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxzKHNl
      bGYpOgogICAgICAgIGNtZF9qc29uID0geyJwcmVmaXgiOiAiZnMgbHMiLCAiZm9ybWF0IjogImpz
      b24ifQogICAgICAgIHJldF92YWwsIGpzb25fb3V0LCBlcnJfbXNnID0gc2VsZi5fY29tbW9uX2Nt
      ZF9qc29uX2dlbihjbWRfanNvbikKICAgICAgICAjIGlmIHRoZXJlIGlzIGFuIHVuc3VjY2Vzc2Z1
      bCBhdHRlbXB0LAogICAgICAgIGlmIHJldF92YWwgIT0gMCBvciBsZW4oanNvbl9vdXQpID09IDA6
      CiAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAg
      ICAgICAiJ2ZzIGxzJyBjb21tYW5kIGZhaWxlZC5cbkVycm9yOiB7fSIuZm9ybWF0KAogICAgICAg
      ICAgICAgICAgICAgIGVycl9tc2cgaWYgcmV0X3ZhbCAhPSAwIGVsc2UgIk5vIGZpbGVzeXN0ZW0g
      ZGV0ZWN0ZWQuIikpCiAgICAgICAgIyBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgZmlsZXN5c3RlbXMg
      cHJlc2VudCwgYW5kCiAgICAgICAgIyBubyBzcGVjaWZpYyBmaWxlc3lzdGVtIG5hbWUgYW5kIGRh
      dGEtcG9vbCBuYW1lcyBhcmUgcHJvdmlkZWQsCiAgICAgICAgIyB0aGVuIHJhaXNlIGFuIGV4Y2Vw
      dGlvbgogICAgICAgIGlmIGxlbihqc29uX291dCkgPiAxIGFuZCBub3Qgc2VsZi5fYXJnX3BhcnNl
      ci5jZXBoZnNfZmlsZXN5c3RlbV9uYW1lOgogICAgICAgICAgICAjIGlmIHRoZSBhcmd1bWVudHMg
      YXJlIG5vdCBwcm92aWRlZCwgZ2VuZXJhdGUgYW4gZXJyb3IgbWVzc2FnZQogICAgICAgICAgICBy
      YWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgIk1vcmUgdGhh
      biBPTkUgZmlsZXN5c3RlbXMgZGV0ZWN0ZWQuXG4iICsKICAgICAgICAgICAgICAgICJ7fVxuXG4i
      LmZvcm1hdChqc29uX291dCkgKwogICAgICAgICAgICAgICAgIlBsZWFzZSBtYW51YWxseSBwcm92
      aWRlIHRoZSBkZXRhaWxzIGZvciAiICsKICAgICAgICAgICAgICAgICInLS1jZXBoZnMtZmlsZXN5
      c3RlbS1uYW1lJyIpCiAgICAgICAgbWF0Y2hpbmdfanNvbl9vdXQgPSB7fQogICAgICAgICMgaWYg
      Jy0tY2VwaGZzLWZpbGVzeXN0ZW0tbmFtZScgYXJndW1lbnQgaXMgcHJvdmlkZWQsCiAgICAgICAg
      IyBjaGVjayB3aGV0aGVyIHRoZSBwcm92aWRlZCBmaWxlc3lzdGVtLW5hbWUgZXhpc3RzIG9yIG5v
      dAogICAgICAgIGlmIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2ZpbGVzeXN0ZW1fbmFtZToKICAg
      ICAgICAgICAgIyBnZXQgdGhlIG1hdGNoaW5nIGxpc3QKICAgICAgICAgICAgbWF0Y2hpbmdfanNv
      bl9vdXRfbGlzdCA9IFttYXRjaGVkIGZvciBtYXRjaGVkIGluIGpzb25fb3V0CiAgICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgc3RyKG1hdGNoZWRbJ25hbWUnXSkgPT0gc2Vs
      Zi5fYXJnX3BhcnNlci5jZXBoZnNfZmlsZXN5c3RlbV9uYW1lXQogICAgICAgICAgICAjIHVuYWJs
      ZSB0byBmaW5kIGEgbWF0Y2hpbmcgZnMtbmFtZSwgcmFpc2UgYW4gZXJyb3IKICAgICAgICAgICAg
      aWYgbGVuKG1hdGNoaW5nX2pzb25fb3V0X2xpc3QpID09IDA6CiAgICAgICAgICAgICAgICByYWlz
      ZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgICAgICgiRmlsZXN5
      c3RlbSBwcm92aWRlZCwgJ3t9JywgIiArCiAgICAgICAgICAgICAgICAgICAgICJpcyBub3QgZm91
      bmQgaW4gdGhlIGZzLWxpc3Q6ICd7fSciKS5mb3JtYXQoCiAgICAgICAgICAgICAgICAgICAgICAg
      IHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2ZpbGVzeXN0ZW1fbmFtZSwKICAgICAgICAgICAgICAg
      ICAgICAgICAgW3N0cih4WyduYW1lJ10pIGZvciB4IGluIGpzb25fb3V0XSkpCiAgICAgICAgICAg
      IG1hdGNoaW5nX2pzb25fb3V0ID0gbWF0Y2hpbmdfanNvbl9vdXRfbGlzdFswXQogICAgICAgIGVs
      c2U6CiAgICAgICAgICAgIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2ZpbGVzeXN0ZW1fbmFtZSA9
      IHN0cihqc29uX291dFswXVsnbmFtZSddKQogICAgICAgICAgICBtYXRjaGluZ19qc29uX291dCA9
      IGpzb25fb3V0WzBdCiAgICAgICAgaWYgdHlwZShtYXRjaGluZ19qc29uX291dFsnZGF0YV9wb29s
      cyddKSA9PSBsaXN0OgogICAgICAgICAgICBpZiBsZW4obWF0Y2hpbmdfanNvbl9vdXRbJ2RhdGFf
      cG9vbHMnXSkgPT0gMDoKICAgICAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNl
      cHRpb24oIk5vICdkYXRhX3Bvb2xzJyBmb3VuZC4iKQogICAgICAgICAgICAjIGlmIHRoZSB1c2Vy
      IGhhcyBhbHJlYWR5IHByb3ZpZGVkIGRhdGEtcG9vbC1uYW1lLAogICAgICAgICAgICAjIHRocm91
      Z2ggLS1jZXBoZnMtZGF0YS1wb29sLW5hbWUKICAgICAgICAgICAgaWYgc2VsZi5fYXJnX3BhcnNl
      ci5jZXBoZnNfZGF0YV9wb29sX25hbWU6CiAgICAgICAgICAgICAgICAjIGlmIHRoZSBwcm92aWRl
      ZCBuYW1lIGlzIG5vdCBtYXRjaGluZyB3aXRoIHRoZSBvbmUgaW4gdGhlIGxpc3QKICAgICAgICAg
      ICAgICAgIGlmIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2RhdGFfcG9vbF9uYW1lIG5vdCBpbiBt
      YXRjaGluZ19qc29uX291dFsnZGF0YV9wb29scyddOgogICAgICAgICAgICAgICAgICAgIHJhaXNl
      IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAgICAgICAgICgiUHJv
      dmlkZWQgJ2RhdGEtcG9vbC1uYW1lJzogJ3t9JywgIiArCiAgICAgICAgICAgICAgICAgICAgICAg
      ICAiZG9lc24ndCBtYXRjaCBmcm9tIHRoZSBkYXRhLXBvb2xzJyBsaXN0OiB7fSIpLmZvcm1hdCgK
      ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2RhdGFf
      cG9vbF9uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgW3N0cih4KSBmb3IgeCBpbiBt
      YXRjaGluZ19qc29uX291dFsnZGF0YV9wb29scyddXSkpCiAgICAgICAgICAgIGVsc2U6CiAgICAg
      ICAgICAgICAgICBzZWxmLl9hcmdfcGFyc2VyLmNlcGhmc19kYXRhX3Bvb2xfbmFtZSA9IHN0cigK
      ICAgICAgICAgICAgICAgICAgICBtYXRjaGluZ19qc29uX291dFsnZGF0YV9wb29scyddWzBdKQog
      ICAgICAgICAgICBpZiBsZW4obWF0Y2hpbmdfanNvbl9vdXRbJ2RhdGFfcG9vbHMnXSkgPiAxOgog
      ICAgICAgICAgICAgICAgcHJpbnQoIldBUk5JTkc6IE11bHRpcGxlIGRhdGEgcG9vbHMgZGV0ZWN0
      ZWQuXG4iICsKICAgICAgICAgICAgICAgICAgICAgICJ7fVxuIi5mb3JtYXQoW3N0cih4KSBmb3Ig
      eCBpbiBtYXRjaGluZ19qc29uX291dFsnZGF0YV9wb29scyddXSkgKwogICAgICAgICAgICAgICAg
      ICAgICAgIlVzaW5nIHRoZSBkYXRhLXBvb2w6IHt9XG4iLmZvcm1hdChzZWxmLl9hcmdfcGFyc2Vy
      LmNlcGhmc19kYXRhX3Bvb2xfbmFtZSkpCgogICAgZGVmIGNyZWF0ZV9jZXBoQ1NJS2V5cmluZ19S
      QkROb2RlKHNlbGYpOgogICAgICAgIGNtZF9qc29uID0geyJwcmVmaXgiOiAiYXV0aCBnZXQtb3It
      Y3JlYXRlIiwKICAgICAgICAgICAgICAgICAgICAiZW50aXR5IjogImNsaWVudC5jc2ktcmJkLW5v
      ZGUiLAogICAgICAgICAgICAgICAgICAgICJjYXBzIjogWyJtb24iLCAicHJvZmlsZSByYmQiLAog
      ICAgICAgICAgICAgICAgICAgICAgICAgICAgICJvc2QiLCAicHJvZmlsZSByYmQiXSwKICAgICAg
      ICAgICAgICAgICAgICAiZm9ybWF0IjogImpzb24ifQogICAgICAgIHJldF92YWwsIGpzb25fb3V0
      LCBlcnJfbXNnID0gc2VsZi5fY29tbW9uX2NtZF9qc29uX2dlbihjbWRfanNvbikKICAgICAgICAj
      IGlmIHRoZXJlIGlzIGFuIHVuc3VjY2Vzc2Z1bCBhdHRlbXB0LAogICAgICAgIGlmIHJldF92YWwg
      IT0gMCBvciBsZW4oanNvbl9vdXQpID09IDA6CiAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZh
      aWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAiJ2F1dGggZ2V0LW9yLWNyZWF0ZSBjbGll
      bnQuY3NpLXJiZC1ub2RlJyBjb21tYW5kIGZhaWxlZFxuIiArCiAgICAgICAgICAgICAgICAiRXJy
      b3I6IHt9Ii5mb3JtYXQoZXJyX21zZyBpZiByZXRfdmFsICE9IDAgZWxzZSBzZWxmLkVNUFRZX09V
      VFBVVF9MSVNUKSkKICAgICAgICByZXR1cm4gc3RyKGpzb25fb3V0WzBdWydrZXknXSkKCiAgICBk
      ZWYgY3JlYXRlX2NoZWNrZXJLZXkoc2VsZik6CiAgICAgICAgY21kX2pzb24gPSB7InByZWZpeCI6
      ICJhdXRoIGdldC1vci1jcmVhdGUiLAogICAgICAgICAgICAgICAgICAgICJlbnRpdHkiOiBzZWxm
      LnJ1bl9hc191c2VyLAogICAgICAgICAgICAgICAgICAgICJjYXBzIjogWyJtb24iLCAiYWxsb3cg
      ciwgYWxsb3cgY29tbWFuZCBxdW9ydW1fc3RhdHVzIiwKICAgICAgICAgICAgICAgICAgICAgICAg
      ICAgICAib3NkIiwgKCJhbGxvdyByd3ggcG9vbD17MH0ucmd3Lm1ldGEsICIgKwogICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgICAgImFsbG93IHIgcG9vbD0ucmd3LnJvb3QsICIgKwog
      ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImFsbG93IHJ3IHBvb2w9ezB9LnJn
      dy5jb250cm9sLCAiICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhbGxv
      dyB4IHBvb2w9ezB9LnJndy5idWNrZXRzLmluZGV4IikuZm9ybWF0KHNlbGYuX2FyZ19wYXJzZXIu
      cmd3X3Bvb2xfcHJlZml4KV0sCiAgICAgICAgICAgICAgICAgICAgImZvcm1hdCI6ICJqc29uIn0K
      ICAgICAgICByZXRfdmFsLCBqc29uX291dCwgZXJyX21zZyA9IHNlbGYuX2NvbW1vbl9jbWRfanNv
      bl9nZW4oY21kX2pzb24pCiAgICAgICAgIyBpZiB0aGVyZSBpcyBhbiB1bnN1Y2Nlc3NmdWwgYXR0
      ZW1wdCwKICAgICAgICBpZiByZXRfdmFsICE9IDAgb3IgbGVuKGpzb25fb3V0KSA9PSAwOgogICAg
      ICAgICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAg
      IidhdXRoIGdldC1vci1jcmVhdGUge30nIGNvbW1hbmQgZmFpbGVkXG4iLmZvcm1hdChzZWxmLnJ1
      bl9hc191c2VyKSArCiAgICAgICAgICAgICAgICAiRXJyb3I6IHt9Ii5mb3JtYXQoZXJyX21zZyBp
      ZiByZXRfdmFsICE9IDAgZWxzZSBzZWxmLkVNUFRZX09VVFBVVF9MSVNUKSkKICAgICAgICByZXR1
      cm4gc3RyKGpzb25fb3V0WzBdWydrZXknXSkKCiAgICBkZWYgX2dlbl9vdXRwdXRfbWFwKHNlbGYp
      OgogICAgICAgIGlmIHNlbGYub3V0X21hcDoKICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgc2Vs
      Zi5faW52YWxpZF9lbmRwb2ludChzZWxmLl9hcmdfcGFyc2VyLnJnd19lbmRwb2ludCkKICAgICAg
      ICBpZiBub3Qgc2VsZi5jbHVzdGVyLnBvb2xfZXhpc3RzKHNlbGYuX2FyZ19wYXJzZXIucmJkX2Rh
      dGFfcG9vbF9uYW1lKToKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlv
      bigKICAgICAgICAgICAgICAgICJUaGUgcHJvdmlkZWQgJ3JiZC1kYXRhLXBvb2wtbmFtZSc6IHt9
      LCBkb24ndCBleGlzdHMiLmZvcm1hdCgKICAgICAgICAgICAgICAgICAgICBzZWxmLl9hcmdfcGFy
      c2VyLnJiZF9kYXRhX3Bvb2xfbmFtZSkpCiAgICAgICAgc2VsZi5fZXhjbHVkZWRfa2V5cy5hZGQo
      J0NMVVNURVJfTkFNRScpCiAgICAgICAgc2VsZi5nZXRfY2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxz
      KCkKICAgICAgICBzZWxmLm91dF9tYXBbJ05BTUVTUEFDRSddID0gc2VsZi5fYXJnX3BhcnNlci5u
      YW1lc3BhY2UKICAgICAgICBzZWxmLm91dF9tYXBbJ0NMVVNURVJfTkFNRSddID0gc2VsZi5fYXJn
      X3BhcnNlci5jbHVzdGVyX25hbWUKICAgICAgICBzZWxmLm91dF9tYXBbJ1JPT0tfRVhURVJOQUxf
      RlNJRCddID0gc2VsZi5nZXRfZnNpZCgpCiAgICAgICAgc2VsZi5vdXRfbWFwWydST09LX0VYVEVS
      TkFMX1VTRVJOQU1FJ10gPSBzZWxmLnJ1bl9hc191c2VyCiAgICAgICAgc2VsZi5vdXRfbWFwWydS
      T09LX0VYVEVSTkFMX0NFUEhfTU9OX0RBVEEnXSA9IHNlbGYuZ2V0X2NlcGhfZXh0ZXJuYWxfbW9u
      X2RhdGEoKQogICAgICAgIHNlbGYub3V0X21hcFsnUk9PS19FWFRFUk5BTF9VU0VSX1NFQ1JFVCdd
      ID0gc2VsZi5jcmVhdGVfY2hlY2tlcktleSgpCiAgICAgICAgc2VsZi5vdXRfbWFwWydDU0lfUkJE
      X05PREVfU0VDUkVUX1NFQ1JFVCddID0gc2VsZi5jcmVhdGVfY2VwaENTSUtleXJpbmdfUkJETm9k
      ZSgpCiAgICAgICAgc2VsZi5vdXRfbWFwWydDU0lfUkJEX1BST1ZJU0lPTkVSX1NFQ1JFVCddID0g
      c2VsZi5jcmVhdGVfY2VwaENTSUtleXJpbmdfUkJEUHJvdmlzaW9uZXIoKQogICAgICAgIHNlbGYu
      b3V0X21hcFsnQ1NJX0NFUEhGU19OT0RFX1NFQ1JFVCddID0gc2VsZi5jcmVhdGVfY2VwaENTSUtl
      eXJpbmdfY2VwaEZTTm9kZSgpCiAgICAgICAgc2VsZi5vdXRfbWFwWydDU0lfQ0VQSEZTX1BST1ZJ
      U0lPTkVSX1NFQ1JFVCddID0gc2VsZi5jcmVhdGVfY2VwaENTSUtleXJpbmdfY2VwaEZTUHJvdmlz
      aW9uZXIoKQogICAgICAgIHNlbGYub3V0X21hcFsnUkdXX0VORFBPSU5UJ10gPSBzZWxmLl9hcmdf
      cGFyc2VyLnJnd19lbmRwb2ludAogICAgICAgIHNlbGYub3V0X21hcFsnQ0VQSEZTX1BPT0xfTkFN
      RSddID0gc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZGF0YV9wb29sX25hbWUKICAgICAgICBzZWxm
      Lm91dF9tYXBbJ0NFUEhGU19GU19OQU1FJ10gPSBzZWxmLl9hcmdfcGFyc2VyLmNlcGhmc19maWxl
      c3lzdGVtX25hbWUKICAgICAgICBzZWxmLm91dF9tYXBbJ1JCRF9QT09MX05BTUUnXSA9IHNlbGYu
      X2FyZ19wYXJzZXIucmJkX2RhdGFfcG9vbF9uYW1lCiAgICAgICAgc2VsZi5vdXRfbWFwWydSR1df
      UE9PTF9QUkVGSVgnXSA9IHNlbGYuX2FyZ19wYXJzZXIucmd3X3Bvb2xfcHJlZml4CgogICAgZGVm
      IGdlbl9zaGVsbF9vdXQoc2VsZik6CiAgICAgICAgc2VsZi5fZ2VuX291dHB1dF9tYXAoKQogICAg
      ICAgIHNoT3V0SU8gPSBTdHJpbmdJTygpCiAgICAgICAgZm9yIGssIHYgaW4gc2VsZi5vdXRfbWFw
      Lml0ZW1zKCk6CiAgICAgICAgICAgIGlmIHYgYW5kIGsgbm90IGluIHNlbGYuX2V4Y2x1ZGVkX2tl
      eXM6CiAgICAgICAgICAgICAgICBzaE91dElPLndyaXRlKCdleHBvcnQge309e317fScuZm9ybWF0
      KGssIHYsIExJTkVTRVApKQogICAgICAgIHNoT3V0ID0gc2hPdXRJTy5nZXR2YWx1ZSgpCiAgICAg
      ICAgc2hPdXRJTy5jbG9zZSgpCiAgICAgICAgcmV0dXJuIHNoT3V0CgogICAgZGVmIGdlbl9qc29u
      X291dChzZWxmKToKICAgICAgICBzZWxmLl9nZW5fb3V0cHV0X21hcCgpCiAgICAgICAganNvbl9v
      dXQgPSBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjogInJvb2stY2VwaC1t
      b24tZW5kcG9pbnRzIiwKICAgICAgICAgICAgICAgICJraW5kIjogIkNvbmZpZ01hcCIsCiAgICAg
      ICAgICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgICAgICAgICAiZGF0YSI6IHNlbGYub3V0
      X21hcFsnUk9PS19FWFRFUk5BTF9DRVBIX01PTl9EQVRBJ10sCiAgICAgICAgICAgICAgICAgICAg
      Im1heE1vbklkIjogIjAiLAogICAgICAgICAgICAgICAgICAgICJtYXBwaW5nIjogInt9IgogICAg
      ICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAg
      ICAibmFtZSI6ICJyb29rLWNlcGgtbW9uIiwKICAgICAgICAgICAgICAgICJraW5kIjogIlNlY3Jl
      dCIsCiAgICAgICAgICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgICAgICAgICAiYWRtaW4t
      c2VjcmV0IjogImFkbWluLXNlY3JldCIsCiAgICAgICAgICAgICAgICAgICAgImNsdXN0ZXItbmFt
      ZSI6IHNlbGYub3V0X21hcFsnQ0xVU1RFUl9OQU1FJ10sCiAgICAgICAgICAgICAgICAgICAgImZz
      aWQiOiBzZWxmLm91dF9tYXBbJ1JPT0tfRVhURVJOQUxfRlNJRCddLAogICAgICAgICAgICAgICAg
      ICAgICJtb24tc2VjcmV0IjogIm1vbi1zZWNyZXQiCiAgICAgICAgICAgICAgICB9LAogICAgICAg
      ICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJyb29rLWNlcGgt
      b3BlcmF0b3ItY3JlZHMiLAogICAgICAgICAgICAgICAgImtpbmQiOiAiU2VjcmV0IiwKICAgICAg
      ICAgICAgICAgICJkYXRhIjogewogICAgICAgICAgICAgICAgICAgICJ1c2VySUQiOiBzZWxmLm91
      dF9tYXBbJ1JPT0tfRVhURVJOQUxfVVNFUk5BTUUnXSwKICAgICAgICAgICAgICAgICAgICAidXNl
      cktleSI6IHNlbGYub3V0X21hcFsnUk9PS19FWFRFUk5BTF9VU0VSX1NFQ1JFVCddCiAgICAgICAg
      ICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJu
      YW1lIjogInJvb2stY3NpLXJiZC1ub2RlIiwKICAgICAgICAgICAgICAgICJraW5kIjogIlNlY3Jl
      dCIsCiAgICAgICAgICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgICAgICAgICAidXNlcklE
      IjogJ2NzaS1yYmQtbm9kZScsCiAgICAgICAgICAgICAgICAgICAgInVzZXJLZXkiOiBzZWxmLm91
      dF9tYXBbJ0NTSV9SQkRfTk9ERV9TRUNSRVRfU0VDUkVUJ10KICAgICAgICAgICAgICAgIH0KICAg
      ICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAicm9vay1j
      c2ktcmJkLXByb3Zpc2lvbmVyIiwKICAgICAgICAgICAgICAgICJraW5kIjogIlNlY3JldCIsCiAg
      ICAgICAgICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgICAgICAgICAidXNlcklEIjogJ2Nz
      aS1yYmQtcHJvdmlzaW9uZXInLAogICAgICAgICAgICAgICAgICAgICJ1c2VyS2V5Ijogc2VsZi5v
      dXRfbWFwWydDU0lfUkJEX1BST1ZJU0lPTkVSX1NFQ1JFVCddCiAgICAgICAgICAgICAgICB9LAog
      ICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJyb29r
      LWNzaS1jZXBoZnMtbm9kZSIsCiAgICAgICAgICAgICAgICAia2luZCI6ICJTZWNyZXQiLAogICAg
      ICAgICAgICAgICAgImRhdGEiOiB7CiAgICAgICAgICAgICAgICAgICAgImFkbWluSUQiOiAnY3Np
      LWNlcGhmcy1ub2RlJywKICAgICAgICAgICAgICAgICAgICAiYWRtaW5LZXkiOiBzZWxmLm91dF9t
      YXBbJ0NTSV9DRVBIRlNfTk9ERV9TRUNSRVQnXQogICAgICAgICAgICAgICAgfQogICAgICAgICAg
      ICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJyb29rLWNzaS1jZXBo
      ZnMtcHJvdmlzaW9uZXIiLAogICAgICAgICAgICAgICAgImtpbmQiOiAiU2VjcmV0IiwKICAgICAg
      ICAgICAgICAgICJkYXRhIjogewogICAgICAgICAgICAgICAgICAgICJhZG1pbklEIjogJ2NzaS1j
      ZXBoZnMtcHJvdmlzaW9uZXInLAogICAgICAgICAgICAgICAgICAgICJhZG1pbktleSI6IHNlbGYu
      b3V0X21hcFsnQ1NJX0NFUEhGU19QUk9WSVNJT05FUl9TRUNSRVQnXQogICAgICAgICAgICAgICAg
      fSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAi
      Y2VwaC1yYmQiLAogICAgICAgICAgICAgICAgImtpbmQiOiAiU3RvcmFnZUNsYXNzIiwKICAgICAg
      ICAgICAgICAgICJkYXRhIjogewogICAgICAgICAgICAgICAgICAgICJwb29sIjogc2VsZi5vdXRf
      bWFwWydSQkRfUE9PTF9OQU1FJ10KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAg
      ICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAiY2VwaGZzIiwKICAgICAgICAgICAg
      ICAgICJraW5kIjogIlN0b3JhZ2VDbGFzcyIsCiAgICAgICAgICAgICAgICAiZGF0YSI6IHsKICAg
      ICAgICAgICAgICAgICAgICAiZnNOYW1lIjogc2VsZi5vdXRfbWFwWydDRVBIRlNfRlNfTkFNRSdd
      LAogICAgICAgICAgICAgICAgICAgICJwb29sIjogc2VsZi5vdXRfbWFwWydDRVBIRlNfUE9PTF9O
      QU1FJ10KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAg
      ICAgICAgICAgICAgIm5hbWUiOiAiY2VwaC1yZ3ciLAogICAgICAgICAgICAgICAgImtpbmQiOiAi
      U3RvcmFnZUNsYXNzIiwKICAgICAgICAgICAgICAgICJkYXRhIjogewogICAgICAgICAgICAgICAg
      ICAgICJlbmRwb2ludCI6IHNlbGYub3V0X21hcFsnUkdXX0VORFBPSU5UJ10KICAgICAgICAgICAg
      ICAgIH0KICAgICAgICAgICAgfQogICAgICAgIF0KICAgICAgICByZXR1cm4ganNvbi5kdW1wcyhq
      c29uX291dCkrTElORVNFUAoKICAgIGRlZiBtYWluKHNlbGYpOgogICAgICAgIGdlbmVyYXRlZF9v
      dXRwdXQgPSAnJwogICAgICAgIGlmIHNlbGYuX2FyZ19wYXJzZXIuZm9ybWF0ID09ICdqc29uJzoK
      ICAgICAgICAgICAgZ2VuZXJhdGVkX291dHB1dCA9IHNlbGYuZ2VuX2pzb25fb3V0KCkKICAgICAg
      ICBlbGlmIHNlbGYuX2FyZ19wYXJzZXIuZm9ybWF0ID09ICdiYXNoJzoKICAgICAgICAgICAgZ2Vu
      ZXJhdGVkX291dHB1dCA9IHNlbGYuZ2VuX3NoZWxsX291dCgpCiAgICAgICAgZWxzZToKICAgICAg
      ICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigiVW5zdXBwb3J0ZWQgZm9ybWF0
      OiB7fSIuZm9ybWF0KAogICAgICAgICAgICAgICAgc2VsZi5fYXJnX3BhcnNlci5mb3JtYXQpKQog
      ICAgICAgIHByaW50KCd7fScuZm9ybWF0KGdlbmVyYXRlZF9vdXRwdXQpKQogICAgICAgIGlmIHNl
      bGYub3V0cHV0X2ZpbGUgYW5kIGdlbmVyYXRlZF9vdXRwdXQ6CiAgICAgICAgICAgIGZPdXQgPSBv
      cGVuKHNlbGYub3V0cHV0X2ZpbGUsICd3JykKICAgICAgICAgICAgZk91dC53cml0ZShnZW5lcmF0
      ZWRfb3V0cHV0KQogICAgICAgICAgICBmT3V0LmNsb3NlKCkKCgojIyMjIyMjIyMjIyMjIyMjIyMj
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIE1BSU4g
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
      IyMjIyMjIyMjIyMjIwppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgcmpPYmogPSBSYWRv
      c0pTT04oKQogICAgdHJ5OgogICAgICAgIHJqT2JqLm1haW4oKQogICAgZXhjZXB0IEV4ZWN1dGlv
      bkZhaWx1cmVFeGNlcHRpb24gYXMgZXJyOgogICAgICAgIHByaW50KCJFeGNlY3V0aW9uIEZhaWxl
      ZDoge30iLmZvcm1hdChlcnIpKQogICAgZXhjZXB0IEtleUVycm9yIGFzIGtFcnI6CiAgICAgICAg
      cHJpbnQoIktleUVycm9yOiAlcyIsIGtFcnIpCiAgICBleGNlcHQgT1NFcnJvciBhcyBvc0VycjoK
      ICAgICAgICBwcmludCgiRXJyb3Igd2hpbGUgdHJ5aW5nIHRvIG91dHB1dCB0aGUgZGF0YToge30i
      LmZvcm1hdChvc0VycikpCiAgICBmaW5hbGx5OgogICAgICAgIHJqT2JqLnNodXRkb3duKCkKCgoj
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyMjIyMjIyMj
      IyMjIyMjIyMjIyMjIFRFU1QgIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMjIyMjIyMjIyMjIyMjIyMj
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIHRoaXMgaXMgbWFpbmx5IGZvciB0ZXN0
      aW5nIGFuZCBjb3VsZCBiZSB1c2VkIHdoZXJlICdyYWRvcycgaXMgbm90IGF2YWlsYWJsZQpjbGFz
      cyBEdW1teVJhZG9zKG9iamVjdCk6CiAgICBkZWYgX19pbml0X18oc2VsZik6CiAgICAgICAgc2Vs
      Zi5yZXR1cm5fdmFsID0gMAogICAgICAgIHNlbGYuZXJyX21lc3NhZ2UgPSAnJwogICAgICAgIHNl
      bGYuc3RhdGUgPSAnY29ubmVjdGVkJwogICAgICAgIHNlbGYuY21kX291dHB1dF9tYXAgPSB7fQog
      ICAgICAgIHNlbGYuY21kX25hbWVzID0ge30KICAgICAgICBzZWxmLl9pbml0X2NtZF9vdXRwdXRf
      bWFwKCkKCiAgICBkZWYgX2luaXRfY21kX291dHB1dF9tYXAoc2VsZik6CiAgICAgICAgc2VsZi5j
      bWRfbmFtZXNbJ2ZzIGxzJ10gPSAnJyd7ImZvcm1hdCI6ICJqc29uIiwgInByZWZpeCI6ICJmcyBs
      cyJ9JycnCiAgICAgICAgc2VsZi5jbWRfbmFtZXNbJ3F1b3J1bV9zdGF0dXMnXSA9ICcnJ3siZm9y
      bWF0IjogImpzb24iLCAicHJlZml4IjogInF1b3J1bV9zdGF0dXMifScnJwogICAgICAgICMgYWxs
      IHRoZSBjb21tYW5kcyBhbmQgdGhlaXIgb3V0cHV0CiAgICAgICAgc2VsZi5jbWRfb3V0cHV0X21h
      cFtzZWxmLmNtZF9uYW1lc1snZnMgbHMnXV0gPSBcCiAgICAgICAgICAgICcnJ1t7Im5hbWUiOiJt
      eWZzIiwibWV0YWRhdGFfcG9vbCI6Im15ZnMtbWV0YWRhdGEiLCJtZXRhZGF0YV9wb29sX2lkIjoy
      LCJkYXRhX3Bvb2xfaWRzIjpbM10sImRhdGFfcG9vbHMiOlsibXlmcy1kYXRhMCJdfV0nJycKICAg
      ICAgICBzZWxmLmNtZF9vdXRwdXRfbWFwW3NlbGYuY21kX25hbWVzWydxdW9ydW1fc3RhdHVzJ11d
      ID0gXAogICAgICAgICAgICAnJyd7ImVsZWN0aW9uX2Vwb2NoIjozLCJxdW9ydW0iOlswXSwicXVv
      cnVtX25hbWVzIjpbImEiXSwicXVvcnVtX2xlYWRlcl9uYW1lIjoiYSIsInF1b3J1bV9hZ2UiOjE0
      Mzg1LCJmZWF0dXJlcyI6eyJxdW9ydW1fY29uIjoiNDU0MDEzODI5MjgzNjY5NjA2MyIsInF1b3J1
      bV9tb24iOlsia3Jha2VuIiwibHVtaW5vdXMiLCJtaW1pYyIsIm9zZG1hcC1wcnVuZSIsIm5hdXRp
      bHVzIiwib2N0b3B1cyJdfSwibW9ubWFwIjp7ImVwb2NoIjoxLCJmc2lkIjoiYWY0ZTE2NzMtMGI3
      Mi00MDJkLTk5MGEtMjJkMjkxOWQwZjFjIiwibW9kaWZpZWQiOiIyMDIwLTA1LTA3VDAzOjM2OjM5
      LjkxODAzNVoiLCJjcmVhdGVkIjoiMjAyMC0wNS0wN1QwMzozNjozOS45MTgwMzVaIiwibWluX21v
      bl9yZWxlYXNlIjoxNSwibWluX21vbl9yZWxlYXNlX25hbWUiOiJvY3RvcHVzIiwiZmVhdHVyZXMi
      OnsicGVyc2lzdGVudCI6WyJrcmFrZW4iLCJsdW1pbm91cyIsIm1pbWljIiwib3NkbWFwLXBydW5l
      IiwibmF1dGlsdXMiLCJvY3RvcHVzIl0sIm9wdGlvbmFsIjpbXX0sIm1vbnMiOlt7InJhbmsiOjAs
      Im5hbWUiOiJhIiwicHVibGljX2FkZHJzIjp7ImFkZHJ2ZWMiOlt7InR5cGUiOiJ2MiIsImFkZHIi
      OiIxMC4xMTAuMjA1LjE3NDozMzAwIiwibm9uY2UiOjB9LHsidHlwZSI6InYxIiwiYWRkciI6IjEw
      LjExMC4yMDUuMTc0OjY3ODkiLCJub25jZSI6MH1dfSwiYWRkciI6IjEwLjExMC4yMDUuMTc0OjY3
      ODkvMCIsInB1YmxpY19hZGRyIjoiMTAuMTEwLjIwNS4xNzQ6Njc4OS8wIiwicHJpb3JpdHkiOjAs
      IndlaWdodCI6MH1dfX0nJycKICAgICAgICBzZWxmLmNtZF9vdXRwdXRfbWFwWycnJ3siY2FwcyI6
      IFsibW9uIiwgImFsbG93IHIsIGFsbG93IGNvbW1hbmQgcXVvcnVtX3N0YXR1cyIsICJvc2QiLCAi
      YWxsb3cgcnd4IHBvb2w9ZGVmYXVsdC5yZ3cubWV0YSwgYWxsb3cgciBwb29sPS5yZ3cucm9vdCwg
      YWxsb3cgcncgcG9vbD1kZWZhdWx0LnJndy5jb250cm9sLCBhbGxvdyB4IHBvb2w9ZGVmYXVsdC5y
      Z3cuYnVja2V0cy5pbmRleCJdLCAiZW50aXR5IjogImNsaWVudC5oZWFsdGhjaGVja2VyIiwgImZv
      cm1hdCI6ICJqc29uIiwgInByZWZpeCI6ICJhdXRoIGdldC1vci1jcmVhdGUifScnJ10gPSBcCiAg
      ICAgICAgICAgICcnJ1t7ImVudGl0eSI6ImNsaWVudC5oZWFsdGhjaGVja2VyIiwia2V5IjoiQVFE
      RmtiTmVmdDViRlJBQVRuZExOVVNFS3J1b3p4aVppM2xyZEE9PSIsImNhcHMiOnsibW9uIjoiYWxs
      b3cgciwgYWxsb3cgY29tbWFuZCBxdW9ydW1fc3RhdHVzIiwib3NkIjoiYWxsb3cgcnd4IHBvb2w9
      ZGVmYXVsdC5yZ3cubWV0YSwgYWxsb3cgciBwb29sPS5yZ3cucm9vdCwgYWxsb3cgcncgcG9vbD1k
      ZWZhdWx0LnJndy5jb250cm9sLCBhbGxvdyB4IHBvb2w9ZGVmYXVsdC5yZ3cuYnVja2V0cy5pbmRl
      eCJ9fV0nJycKICAgICAgICBzZWxmLmNtZF9vdXRwdXRfbWFwWycnJ3siY2FwcyI6IFsibW9uIiwg
      InByb2ZpbGUgcmJkIiwgIm9zZCIsICJwcm9maWxlIHJiZCJdLCAiZW50aXR5IjogImNsaWVudC5j
      c2ktcmJkLW5vZGUiLCAiZm9ybWF0IjogImpzb24iLCAicHJlZml4IjogImF1dGggZ2V0LW9yLWNy
      ZWF0ZSJ9JycnXSA9IFwKICAgICAgICAgICAgJycnW3siZW50aXR5IjoiY2xpZW50LmNzaS1yYmQt
      bm9kZSIsImtleSI6IkFRQk9nck5lSGJLMUF4QUF1YllCZVY4UzFVL0dQenE1U1ZlcTZnPT0iLCJj
      YXBzIjp7Im1vbiI6InByb2ZpbGUgcmJkIiwib3NkIjoicHJvZmlsZSByYmQifX1dJycnCiAgICAg
      ICAgc2VsZi5jbWRfb3V0cHV0X21hcFsnJyd7ImNhcHMiOiBbIm1vbiIsICJwcm9maWxlIHJiZCIs
      ICJtZ3IiLCAiYWxsb3cgcnciLCAib3NkIiwgInByb2ZpbGUgcmJkIl0sICJlbnRpdHkiOiAiY2xp
      ZW50LmNzaS1yYmQtcHJvdmlzaW9uZXIiLCAiZm9ybWF0IjogImpzb24iLCAicHJlZml4IjogImF1
      dGggZ2V0LW9yLWNyZWF0ZSJ9JycnXSA9IFwKICAgICAgICAgICAgJycnW3siZW50aXR5IjoiY2xp
      ZW50LmNzaS1yYmQtcHJvdmlzaW9uZXIiLCJrZXkiOiJBUUJOZ3JOZTFnZXlLeEFBOGVrVmlSZEUr
      aHNzNU93ZVlCa3dOZz09IiwiY2FwcyI6eyJtZ3IiOiJhbGxvdyBydyIsIm1vbiI6InByb2ZpbGUg
      cmJkIiwib3NkIjoicHJvZmlsZSByYmQifX1dJycnCiAgICAgICAgc2VsZi5jbWRfb3V0cHV0X21h
      cFsnJyd7ImNhcHMiOiBbIm1vbiIsICJhbGxvdyByIiwgIm1nciIsICJhbGxvdyBydyIsICJvc2Qi
      LCAiYWxsb3cgcncgdGFnIGNlcGhmcyAqPSoiLCAibWRzIiwgImFsbG93IHJ3Il0sICJlbnRpdHki
      OiAiY2xpZW50LmNzaS1jZXBoZnMtbm9kZSIsICJmb3JtYXQiOiAianNvbiIsICJwcmVmaXgiOiAi
      YXV0aCBnZXQtb3ItY3JlYXRlIn0nJyddID0gXAogICAgICAgICAgICAnJydbeyJlbnRpdHkiOiJj
      bGllbnQuY3NpLWNlcGhmcy1ub2RlIiwia2V5IjoiQVFCT2dyTmVFTnVuS3hBQVBDbWdFN1I2RzhE
      Y1huYUoxRjMycWc9PSIsImNhcHMiOnsibWRzIjoiYWxsb3cgcnciLCJtZ3IiOiJhbGxvdyBydyIs
      Im1vbiI6ImFsbG93IHIiLCJvc2QiOiJhbGxvdyBydyB0YWcgY2VwaGZzICo9KiJ9fV0nJycKICAg
      ICAgICBzZWxmLmNtZF9vdXRwdXRfbWFwWycnJ3siY2FwcyI6IFsibW9uIiwgImFsbG93IHIiLCAi
      bWdyIiwgImFsbG93IHJ3IiwgIm9zZCIsICJhbGxvdyBydyB0YWcgY2VwaGZzIG1ldGFkYXRhPSoi
      XSwgImVudGl0eSI6ICJjbGllbnQuY3NpLWNlcGhmcy1wcm92aXNpb25lciIsICJmb3JtYXQiOiAi
      anNvbiIsICJwcmVmaXgiOiAiYXV0aCBnZXQtb3ItY3JlYXRlIn0nJyddID0gXAogICAgICAgICAg
      ICAnJydbeyJlbnRpdHkiOiJjbGllbnQuY3NpLWNlcGhmcy1wcm92aXNpb25lciIsImtleSI6IkFR
      Qk9nck5lQUZnY0dCQUF2R3FLT0FEMEQzeHhtVlkwUjkxMmRnPT0iLCJjYXBzIjp7Im1nciI6ImFs
      bG93IHJ3IiwibW9uIjoiYWxsb3cgciIsIm9zZCI6ImFsbG93IHJ3IHRhZyBjZXBoZnMgbWV0YWRh
      dGE9KiJ9fV0nJycKCiAgICBkZWYgc2h1dGRvd24oc2VsZik6CiAgICAgICAgcGFzcwoKICAgIGRl
      ZiBnZXRfZnNpZChzZWxmKToKICAgICAgICByZXR1cm4gJ2FmNGUxNjczLTBiNzItNDAyZC05OTBh
      LTIyZDI5MTlkMGYxYycKCiAgICBkZWYgY29uZl9yZWFkX2ZpbGUoc2VsZik6CiAgICAgICAgcGFz
      cwoKICAgIGRlZiBjb25uZWN0KHNlbGYpOgogICAgICAgIHBhc3MKCiAgICBkZWYgbW9uX2NvbW1h
      bmQoc2VsZiwgY21kLCBvdXQpOgogICAgICAgIGpzb25fY21kID0ganNvbi5sb2FkcyhjbWQpCiAg
      ICAgICAganNvbl9jbWRfc3RyID0ganNvbi5kdW1wcyhqc29uX2NtZCwgc29ydF9rZXlzPVRydWUp
      CiAgICAgICAgY21kX291dHB1dCA9IHNlbGYuY21kX291dHB1dF9tYXBbanNvbl9jbWRfc3RyXQog
      ICAgICAgIHJldHVybiBzZWxmLnJldHVybl92YWwsIFwKICAgICAgICAgICAgY21kX291dHB1dCwg
      XAogICAgICAgICAgICAie30iLmZvcm1hdChzZWxmLmVycl9tZXNzYWdlKS5lbmNvZGUoJ3V0Zi04
      JykKCiAgICBAY2xhc3NtZXRob2QKICAgIGRlZiBSYWRvcyhjb25mZmlsZT1Ob25lKToKICAgICAg
      ICByZXR1cm4gRHVtbXlSYWRvcygpCgoKIyBpbm9yZGVyIHRvIHRlc3QgdGhlIHBhY2thZ2UsCiMg
      Y2QgPHNjcmlwdF9kaXJlY3Rvcnk+CiMgcHl0aG9uIC1tIHVuaXR0ZXN0IC0tdmVyYm9zZSA8c2Ny
      aXB0X25hbWVfd2l0aG91dF9kb3RfcHk+CmNsYXNzIFRlc3RSYWRvc0pTT04odW5pdHRlc3QuVGVz
      dENhc2UpOgogICAgZGVmIHNldFVwKHNlbGYpOgogICAgICAgIHByaW50KCJ7fSIuZm9ybWF0KCJJ
      IGFtIGluIHNldHVwIikpCiAgICAgICAgc2VsZi5yak9iaiA9IFJhZG9zSlNPTihbJy0tcmJkLWRh
      dGEtcG9vbC1uYW1lPWFiYycsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJy0tcmd3
      LWVuZHBvaW50PTEwLjEwLjIxMi4xMjI6OTAwMCcsICctLWZvcm1hdD1qc29uJ10pCiAgICAgICAg
      IyBmb3IgdGVzdGluZywgd2UgYXJlIHVzaW5nICdEdW1teVJhZG9zJyBvYmplY3QKICAgICAgICBz
      ZWxmLnJqT2JqLmNsdXN0ZXIgPSBEdW1teVJhZG9zLlJhZG9zKCkKCiAgICBkZWYgdGVhckRvd24o
      c2VsZik6CiAgICAgICAgcHJpbnQoInt9Ii5mb3JtYXQoIkkgYW0gdGVhcmluZyBkb3duIHRoZSBz
      ZXR1cCIpKQogICAgICAgIHNlbGYucmpPYmouc2h1dGRvd24oKQoKICAgIGRlZiB0ZXN0X21ldGhv
      ZF9tYWluX291dHB1dChzZWxmKToKICAgICAgICBwcmludCgiSlNPTiBPdXRwdXQiKQogICAgICAg
      IHNlbGYucmpPYmouX2FyZ19wYXJzZXIuZm9ybWF0ID0gImpzb24iCiAgICAgICAgc2VsZi5yak9i
      ai5tYWluKCkKICAgICAgICBwcmludCgiXG5cblNoZWxsIE91dHB1dCIpCiAgICAgICAgc2VsZi5y
      ak9iai5fYXJnX3BhcnNlci5mb3JtYXQgPSAiYmFzaCIKICAgICAgICBzZWxmLnJqT2JqLm1haW4o
      KQogICAgICAgIHByaW50KCJcblxuTm9uIGNvbXBhdGlibGUgb3V0cHV0ICgtLWFiY2QpIikKICAg
      ICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYucmpPYmouX2FyZ19wYXJzZXIuZm9ybWF0ID0gJ2Fi
      Y2QnCiAgICAgICAgICAgIHNlbGYucmpPYmoubWFpbigpCiAgICAgICAgICAgIHNlbGYuZmFpbCgi
      RnVuY3Rpb24gc2hvdWxkIGhhdmUgdGhyb3duIGFuIEV4Y2VwdGlvbiIpCiAgICAgICAgZXhjZXB0
      IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24gYXMgZXJyOgogICAgICAgICAgICBwcmludCgiRXhj
      ZXB0aW9uIHRocm93biBzdWNjZXNzZnVsbHk6IHt9Ii5mb3JtYXQoZXJyKSkKCiAgICBkZWYgdGVz
      dF9tZXRob2RfY3JlYXRlX2NlcGhDU0lLZXlyaW5nX2NlcGhGU1Byb3Zpc2lvbmVyKHNlbGYpOgog
      ICAgICAgIGNzaUtleXJpbmcgPSBzZWxmLnJqT2JqLmNyZWF0ZV9jZXBoQ1NJS2V5cmluZ19jZXBo
      RlNQcm92aXNpb25lcigpCiAgICAgICAgcHJpbnQoInt9Ii5mb3JtYXQoY3NpS2V5cmluZykpCgog
      ICAgZGVmIHRlc3Rfbm9uX3plcm9fcmV0dXJuX2FuZF9lcnJvcihzZWxmKToKICAgICAgICBzZWxm
      LnJqT2JqLmNsdXN0ZXIucmV0dXJuX3ZhbCA9IDEKICAgICAgICBzZWxmLnJqT2JqLmNsdXN0ZXIu
      ZXJyX21lc3NhZ2UgPSAiRHVtbXkgRXJyb3IiCiAgICAgICAgdHJ5OgogICAgICAgICAgICBzZWxm
      LnJqT2JqLmNyZWF0ZV9jaGVja2VyS2V5KCkKICAgICAgICAgICAgc2VsZi5mYWlsKCJGYWlsZWQg
      dG8gcmFpc2UgYW4gZXhjZXB0aW9uLCAnRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiciKQogICAg
      ICAgIGV4Y2VwdCBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uIGFzIGVycjoKICAgICAgICAgICAg
      cHJpbnQoIlN1Y2Nlc3NmdWxseSB0aHJvd24gZXJyb3IuXG5FcnJvcjoge30iLmZvcm1hdChlcnIp
      KQoKICAgIGRlZiB0ZXN0X211bHRpX2ZpbGVzeXN0ZW1fc2NlbmFyaW8oc2VsZik6CiAgICAgICAg
      Y21kX2tleSA9IHNlbGYucmpPYmouY2x1c3Rlci5jbWRfbmFtZXNbJ2ZzIGxzJ10KICAgICAgICBj
      bWRfb3V0ID0gc2VsZi5yak9iai5jbHVzdGVyLmNtZF9vdXRwdXRfbWFwW2NtZF9rZXldCiAgICAg
      ICAgY21kX2pzb25fb3V0ID0ganNvbi5sb2FkcyhjbWRfb3V0KQogICAgICAgIHNlY29uZF9mc19k
      ZXRhaWxzID0gZGljdChjbWRfanNvbl9vdXRbMF0pCiAgICAgICAgc2Vjb25kX2ZzX2RldGFpbHNb
      J25hbWUnXSArPSAnLTInCiAgICAgICAgY21kX2pzb25fb3V0LmFwcGVuZChzZWNvbmRfZnNfZGV0
      YWlscykKICAgICAgICBzZWxmLnJqT2JqLmNsdXN0ZXIuY21kX291dHB1dF9tYXBbY21kX2tleV0g
      PSBqc29uLmR1bXBzKGNtZF9qc29uX291dCkKICAgICAgICAjIG11bHRpcGxlIGZpbGVzeXN0ZW0g
      cHJlc2VudCwKICAgICAgICAjIGJ1dCBubyBzcGVjaWZpYyAnLS1jZXBoZnMtZmlsZXN5c3RlbS1u
      YW1lJyBhcmd1bWVudCBwcm92aWRlZAogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5yak9i
      ai5nZXRfY2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxzKCkKICAgICAgICAgICAgc2VsZi5mYWlsKCJB
      biBFeGNlcHRpb24gd2FzIGV4cGVjdGVkIHRvIGJlIHRocm93biIpCiAgICAgICAgZXhjZXB0IEV4
      ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24gYXMgZXJyOgogICAgICAgICAgICBwcmludCgiU3VjY2Vz
      c2Z1bGx5IHRocm93biBlcnJvcjoge30iLmZvcm1hdChlcnIpKQogICAgICAgICMgcGFzcyBhbiBl
      eGlzdGluZyBmaWxlc3lzdGVtIG5hbWUKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYucmpP
      YmouX2FyZ19wYXJzZXIuY2VwaGZzX2ZpbGVzeXN0ZW1fbmFtZSA9IHNlY29uZF9mc19kZXRhaWxz
      WyduYW1lJ10KICAgICAgICAgICAgc2VsZi5yak9iai5nZXRfY2VwaGZzX2RhdGFfcG9vbF9kZXRh
      aWxzKCkKICAgICAgICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAg
      ICAgICAgICAgIHNlbGYuZmFpbCgiU2hvdWxkIG5vdCBoYXZlIHRocm93biBlcnJvcjoge30iLmZv
      cm1hdChlcnIpKQogICAgICAgICMgcGFzcyBhIG5vbi1leGlzdGluZyBmaWxlc3lzdGVtIG5hbWUK
      ICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYucmpPYmouX2FyZ19wYXJzZXIuY2VwaGZzX2Zp
      bGVzeXN0ZW1fbmFtZSArPSAiLW5vbi1leGlzdGluZy1mcy1uYW1lIgogICAgICAgICAgICBzZWxm
      LnJqT2JqLmdldF9jZXBoZnNfZGF0YV9wb29sX2RldGFpbHMoKQogICAgICAgICAgICBzZWxmLmZh
      aWwoIkFuIEV4Y2VwdGlvbiB3YXMgZXhwZWN0ZWQgdG8gYmUgdGhyb3duIikKICAgICAgICBleGNl
      cHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAgICAgIHByaW50KCJT
      dWNjZXNzZnVsbHkgdGhyb3duIGVycm9yOiB7fSIuZm9ybWF0KGVycikpCiAgICAgICAgIyBlbXB0
      eSBmaWxlLXN5c3RlbSBhcnJheQogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5yak9iai5j
      bHVzdGVyLmNtZF9vdXRwdXRfbWFwW2NtZF9rZXldID0ganNvbi5kdW1wcyhbXSkKICAgICAgICAg
      ICAgc2VsZi5yak9iai5nZXRfY2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxzKCkKICAgICAgICAgICAg
      c2VsZi5mYWlsKCJBbiBFeGNlcHRpb24gd2FzIGV4cGVjdGVkIHRvIGJlIHRocm93biIpCiAgICAg
      ICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24gYXMgZXJyOgogICAgICAgICAgICBw
      cmludCgiU3VjY2Vzc2Z1bGx5IHRocm93biBlcnJvcjoge30iLmZvcm1hdChlcnIpKQoKICAgIGRl
      ZiB0ZXN0X211bHRpX2RhdGFfcG9vbF9zY2VuYXJpbyhzZWxmKToKICAgICAgICBjbWRfa2V5ID0g
      c2VsZi5yak9iai5jbHVzdGVyLmNtZF9uYW1lc1snZnMgbHMnXQogICAgICAgIGNtZF9vdXQgPSBz
      ZWxmLnJqT2JqLmNsdXN0ZXIuY21kX291dHB1dF9tYXBbY21kX2tleV0KICAgICAgICBjbWRfanNv
      bl9vdXQgPSBqc29uLmxvYWRzKGNtZF9vdXQpCiAgICAgICAgZmlyc3RfZnNfZGV0YWlscyA9IGNt
      ZF9qc29uX291dFswXQogICAgICAgIG5ld19kYXRhX3Bvb2xfbmFtZSA9ICdteWZzLWRhdGExJwog
      ICAgICAgIGZpcnN0X2ZzX2RldGFpbHNbJ2RhdGFfcG9vbHMnXS5hcHBlbmQobmV3X2RhdGFfcG9v
      bF9uYW1lKQogICAgICAgIHByaW50KCJNb2RpZmllZCBKU09OIENtZCBPdXQ6IHt9Ii5mb3JtYXQo
      Y21kX2pzb25fb3V0KSkKICAgICAgICBzZWxmLnJqT2JqLl9hcmdfcGFyc2VyLmNlcGhmc19kYXRh
      X3Bvb2xfbmFtZSA9IG5ld19kYXRhX3Bvb2xfbmFtZQogICAgICAgIHNlbGYucmpPYmouY2x1c3Rl
      ci5jbWRfb3V0cHV0X21hcFtjbWRfa2V5XSA9IGpzb24uZHVtcHMoY21kX2pzb25fb3V0KQogICAg
      ICAgIHNlbGYucmpPYmouZ2V0X2NlcGhmc19kYXRhX3Bvb2xfZGV0YWlscygpCiAgICAgICAgIyB1
      c2UgYSBub24tZXhpc3RpbmcgZGF0YS1wb29sLW5hbWUKICAgICAgICBiYWRfZGF0YV9wb29sX25h
      bWUgPSAnbXlmcy1kYXRhMycKICAgICAgICBzZWxmLnJqT2JqLl9hcmdfcGFyc2VyLmNlcGhmc19k
      YXRhX3Bvb2xfbmFtZSA9IGJhZF9kYXRhX3Bvb2xfbmFtZQogICAgICAgIHRyeToKICAgICAgICAg
      ICAgc2VsZi5yak9iai5nZXRfY2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxzKCkKICAgICAgICAgICAg
      c2VsZi5mYWlsKCJBbiBFeGNlcHRpb24gd2FzIGV4cGVjdGVkIHRvIGJlIHRocm93biIpCiAgICAg
      ICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24gYXMgZXJyOgogICAgICAgICAgICBw
      cmludCgiU3VjY2Vzc2Z1bGx5IHRocm93biBlcnJvcjoge30iLmZvcm1hdChlcnIpKQogICAgICAg
      ICMgZW1wdHkgZGF0YS1wb29sIHNjZW5hcmlvCiAgICAgICAgZmlyc3RfZnNfZGV0YWlsc1snZGF0
      YV9wb29scyddID0gW10KICAgICAgICBzZWxmLnJqT2JqLmNsdXN0ZXIuY21kX291dHB1dF9tYXBb
      Y21kX2tleV0gPSBqc29uLmR1bXBzKGNtZF9qc29uX291dCkKICAgICAgICB0cnk6CiAgICAgICAg
      ICAgIHNlbGYucmpPYmouZ2V0X2NlcGhmc19kYXRhX3Bvb2xfZGV0YWlscygpCiAgICAgICAgICAg
      IHNlbGYuZmFpbCgiQW4gRXhjZXB0aW9uIHdhcyBleHBlY3RlZCB0byBiZSB0aHJvd24iKQogICAg
      ICAgIGV4Y2VwdCBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uIGFzIGVycjoKICAgICAgICAgICAg
      cHJpbnQoIlN1Y2Nlc3NmdWxseSB0aHJvd24gZXJyb3I6IHt9Ii5mb3JtYXQoZXJyKSkKCiAgICBk
      ZWYgdGVzdF92YWxpZF9yZ3dfZW5kcG9pbnQoc2VsZik6CiAgICAgICAgc2VsZi5yak9iai5faW52
      YWxpZF9lbmRwb2ludCgiMTAuMTAuMjEyLjEzMzo4MDAwIikKICAgICAgICAjIGludmFsaWQgcG9y
      dAogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5yak9iai5faW52YWxpZF9lbmRwb2ludCgi
      MTAuMTAuMjEyLjEzMzoyMzgwMDAiKQogICAgICAgICAgICBzZWxmLmZhaWwoIkFuIEV4Y2VwdGlv
      biB3YXMgZXhwZWN0ZWQgdG8gYmUgdGhyb3duIikKICAgICAgICBleGNlcHQgRXhlY3V0aW9uRmFp
      bHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAgICAgIHByaW50KCJTdWNjZXNzZnVsbHkgdGhy
      b3duIGVycm9yOiB7fSIuZm9ybWF0KGVycikpCiAgICAgICAgIyBvdXQgb2YgcmFuZ2UgSVAKICAg
      ICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYucmpPYmouX2ludmFsaWRfZW5kcG9pbnQoIjEwLjEw
      MzMuMjEyLjEzMzo4MDAwIikKICAgICAgICAgICAgc2VsZi5mYWlsKCJBbiBFeGNlcHRpb24gd2Fz
      IGV4cGVjdGVkIHRvIGJlIHRocm93biIpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVF
      eGNlcHRpb24gYXMgZXJyOgogICAgICAgICAgICBwcmludCgiU3VjY2Vzc2Z1bGx5IHRocm93biBl
      cnJvcjoge30iLmZvcm1hdChlcnIpKQogICAgICAgICMgbWFsIGZvcm1hdHRlZCBJUAogICAgICAg
      IHRyeToKICAgICAgICAgICAgc2VsZi5yak9iai5faW52YWxpZF9lbmRwb2ludCgiMTAuMTAzLi4y
      MTIuMTMzOjgwMDAiKQogICAgICAgICAgICBzZWxmLmZhaWwoIkFuIEV4Y2VwdGlvbiB3YXMgZXhw
      ZWN0ZWQgdG8gYmUgdGhyb3duIikKICAgICAgICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2Vw
      dGlvbiBhcyBlcnI6CiAgICAgICAgICAgIHByaW50KCJTdWNjZXNzZnVsbHkgdGhyb3duIGVycm9y
      OiB7fSIuZm9ybWF0KGVycikpCiAgICAgICAgdHJ5OgogICAgICAgICAgICBzZWxmLnJqT2JqLl9p
      bnZhbGlkX2VuZHBvaW50KCIxMC4xMDMuMjEyLjEzMzo6ODAwMCIpCiAgICAgICAgICAgIHNlbGYu
      ZmFpbCgiQW4gRXhjZXB0aW9uIHdhcyBleHBlY3RlZCB0byBiZSB0aHJvd24iKQogICAgICAgIGV4
      Y2VwdCBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uIGFzIGVycjoKICAgICAgICAgICAgcHJpbnQo
      IlN1Y2Nlc3NmdWxseSB0aHJvd24gZXJyb3I6IHt9Ii5mb3JtYXQoZXJyKSkKICAgICAgICB0cnk6
      CiAgICAgICAgICAgIHNlbGYucmpPYmouX2ludmFsaWRfZW5kcG9pbnQoIjEwLjEwLjEwMy4yMTIu
      MTMzOjgwMDAiKQogICAgICAgICAgICBzZWxmLmZhaWwoIkFuIEV4Y2VwdGlvbiB3YXMgZXhwZWN0
      ZWQgdG8gYmUgdGhyb3duIikKICAgICAgICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlv
      biBhcyBlcnI6CiAgICAgICAgICAgIHByaW50KCJTdWNjZXNzZnVsbHkgdGhyb3duIGVycm9yOiB7
      fSIuZm9ybWF0KGVycikpCg==
    external.features.ocs.openshift.io/validation: '{"secrets":["rook-ceph-operator-creds",
      "rook-csi-rbd-node", "rook-csi-rbd-provisioner", "rook-csi-cephfs-node", "rook-csi-cephfs-provisioner"],
      "configMaps": ["rook-ceph-mon-endpoints", "rook-ceph-mon"], "storageClasses":
      ["ceph-rgw", "ceph-rbd", "cephfs"]}'
    features.ocs.openshift.io/enabled: '["external"]'
    olm.skipRange: '>=0.0.1 <4.5.0'
    operatorframework.io/cluster-monitoring: "true"
    operatorframework.io/suggested-namespace: openshift-storage
    operators.operatorframework.io/internal-objects: '["cephclusters.ceph.rook.io",
      "cephblockpools.ceph.rook.io", "cephobjectstores.ceph.rook.io", "cephobjectstoreusers.ceph.rook.io",
      "cephnfses.ceph.rook.io","cephclients.ceph.rook.io", "noobaas.noobaa.io", "objectbuckets.objectbucket.io","objectbucketclaims.objectbucket.io","ocsinitializations.ocs.openshift.io",
      "storageclusterinitializations.ocs.openshift.io"]'
    repository: https://github.com/openshift/ocs-operator
    support: Red Hat
  name: ocs-operator.v4.3.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: OCS Initialization represents the initial data to be created when
        the OCS operator is installed.
      displayName: OCS Initialization
      kind: OCSInitialization
      name: ocsinitializations.ocs.openshift.io
      version: v1
    - description: StorageCluster Initialization represents a set of tasks the OCS
        operator wants to implement for every StorageCluster it encounters.
      displayName: StorageCluster Initialization
      kind: StorageClusterInitialization
      name: storageclusterinitializations.ocs.openshift.io
      version: v1
    - description: Storage Cluster represents a OpenShift Container Storage Cluster
        including Ceph Cluster, NooBaa and all the storage and compute resources required.
      displayName: Storage Cluster
      kind: StorageCluster
      name: storageclusters.ocs.openshift.io
      resources:
      - kind: CephCluster
        name: cephclusters.ceph.rook.io
        version: v1
      - kind: NooBaa
        name: noobaas.noobaa.io
        version: v1alpha1
      version: v1
    - description: Represents a Ceph cluster.
      displayName: Ceph Cluster
      kind: CephCluster
      name: cephclusters.ceph.rook.io
      version: v1
    - description: Represents a Ceph Block Pool.
      displayName: Ceph Block Pool
      kind: CephBlockPool
      name: cephblockpools.ceph.rook.io
      version: v1
    - description: Represents a Ceph Object Store.
      displayName: Ceph Object Store
      kind: CephObjectStore
      name: cephobjectstores.ceph.rook.io
      specDescriptors:
      - description: Coding Chunks
        displayName: Coding Chunks
        path: dataPool.erasureCoded.codingChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Data Chunks
        displayName: Data Chunks
        path: dataPool.erasureCoded.dataChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: failureDomain
        displayName: failureDomain
        path: dataPool.failureDomain
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Size
        displayName: Size
        path: dataPool.replicated.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Annotations
        displayName: Annotations
        path: gateway.annotations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:annotations
      - description: Instances
        displayName: Instances
        path: gateway.instances
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Resources
        displayName: Resources
        path: gateway.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: placement
        displayName: placement
        path: gateway.placement
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:placement
      - description: securePort
        displayName: securePort
        path: gateway.securePort
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:securePort
      - description: sslCertificateRef
        displayName: sslCertificateRef
        path: gateway.sslCertificateRef
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:sslCertificateRef
      - description: Type
        displayName: Type
        path: gateway.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Coding Chunks
        displayName: Coding Chunks
        path: metadataPool.erasureCoded.codingChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Data Chunks
        displayName: Data Chunks
        path: metadataPool.erasureCoded.dataChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: failureDomain
        displayName: failureDomain
        path: metadataPool.failureDomain
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Size
        displayName: Size
        path: metadataPool.replicated.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      version: v1
    - description: Represents a Ceph Object Store User.
      displayName: Ceph Object Store User
      kind: CephObjectStoreUser
      name: cephobjectstoreusers.ceph.rook.io
      version: v1
    - description: Represents a cluster of Ceph NFS ganesha gateways.
      displayName: Ceph NFS
      kind: CephNFS
      name: cephnfses.ceph.rook.io
      version: v1
    - description: Represents a Ceph User.
      displayName: Ceph Client
      kind: CephClient
      name: cephclients.ceph.rook.io
      version: v1
    - description: Represents a Ceph Filesystem.
      displayName: Ceph Filesystem
      kind: CephFilesystem
      name: cephfilesystems.ceph.rook.io
      version: v1
    - description: A NooBaa system - Create this to start
      displayName: NooBaa
      kind: NooBaa
      name: noobaas.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: DBImage (optional) overrides the default image for the db container.
        displayName: DB Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Image (optional) overrides the default image for the server container.
        displayName: Image
        path: dbImage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: CoreResources (optional) overrides the default resource requirements
          for the server container.
        displayName: Core Resources
        path: coreResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: DBResources (optional) overrides the default resource requirements
          for the db container.
        displayName: DB Resources
        path: dbResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: 'DBVolumeResources (optional) overrides the default PVC resource
          requirements for the database volume. For the time being this field is immutable
          and can only be set on system creation. This is because volume size updates
          are only supported for increasing the size, and only if the storage class
          specifies `allowVolumeExpansion: true`, +immutable.'
        displayName: Image
        path: dbVolumeResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: DBStorageClass (optional) overrides the default cluster StorageClass
          for the database volume. For the time being this field is immutable and
          can only be set on system creation. This affects where the system stores
          its database which contains system config, buckets, objects meta-data and
          mapping file parts to storage locations. +immutable.
        displayName: DB StorageClass
        path: dbStorageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: PVPoolDefaultStorageClass (optional) overrides the default cluster
          StorageClass for the pv-pool volumes. This affects where the system stores
          data chunks (encrypted). Updates to this field will only affect new pv-pools,
          but updates to existing pools are not supported by the operator.
        displayName: PV Pool DefaultStorageClass
        path: pvPoolDefaultStorageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: ImagePullSecret (optional) sets a pull secret for the system
          image.
        displayName: Image Pull Secret
        path: imagePullSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      version: v1alpha1
    - description: Storage target spec such as aws-s3, s3-compatible, ibm-cos, PV's
        and more. Used in BacketClass to construct data placement policies.
      displayName: Backing Store
      kind: BackingStore
      name: backingstores.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: Region is the AWS region.
        displayName: Region
        path: awsS3.region
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The
          secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: awsS3.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SSLDisabled allows to disable SSL and use plain http.
        displayName: SSL Disabled
        path: awsS3.sslDisabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: awsS3.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: |2-
           Secret refers to a secret that provides the credentials. The secret should define AccountName and AccountKey as provided
          by Azure Blob.
        displayName: Secret
        path: azureBlob.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:azureBlob
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: TargetBlobContainer is the name of the target Azure Blob container.
        displayName: Target Blob Container
        path: azureBlob.targetBlobContainer
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:azureBlob
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: |-
          Secret refers to a secret that provides the credentials. The secret should define GoogleServiceAccountPrivateKeyJson containing
          the entire json string as provided by Google.
        displayName: Secret
        path: googleCloudStorage.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:googleCloudStorage
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: googleCloudStorage.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:googleCloudStorage
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: NumVolumes is the number of volumes to allocate.
        displayName: Num Volumes
        path: pvPool.numVolumes
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:pvPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: VolumeResources represents the minimum resources each volume
          should have.
        displayName: Resources
        path: pvPool.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:pvPool
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: StorageClass is the name of the storage class to use for the
          PV's.
        displayName: Storage Class
        path: pvPool.storageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:pvPool
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Endpoint is the S3 compatible endpoint: http(s)://host:port.'
        displayName: End Point
        path: s3Compatible.endpoint
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The
          secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: s3Compatible.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SignatureVersion specifies the client signature version to use
          when signing requests.
        displayName: Signature Version
        path: s3Compatible.signatureVersion
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: s3Compatible.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Endpoint is the IBM COS endpoint: http(s)://host:port.'
        displayName: End Point
        path: IBMCos.endpoint
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The
          secret should define IBM_COS_ACCESS_KEY_ID and IBM_COS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: IBMCos.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SignatureVersion specifies the client signature version to use
          when signing requests.
        displayName: Signature Version
        path: IBMCos.signatureVersion
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: TargetBucket is the name of the target IBM COS bucket.
        displayName: Target Bucket
        path: IBMCos.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: Storage policy spec  tiering, mirroring, spreading. Combines BackingStores.
        Referenced by ObjectBucketClaims.
      displayName: Bucket Class
      kind: BucketClass
      name: bucketclasses.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: BackingStores is an unordered list of backing store names. The
          meaning of the list depends on the placement.
        displayName: Backing Stores
        path: placementPolicy.tiers[0].backingStores[0]
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:placementPolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Placement specifies the type of placement for the tier If empty
          it should have a single backing store.
        displayName: Placement
        path: placementPolicy.tiers[0].placement
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:placementPolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    required:
    - description: Claim a bucket just like claiming a PV. Automate you app bucket
        provisioning by creating OBC with your app deployment. A secret and configmap
        (name=claim) will be created with access details for the app pods.
      displayName: Object Bucket Claim
      kind: ObjectBucketClaim
      name: objectbucketclaims.objectbucket.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      version: v1alpha1
    - description: Used under-the-hood. Created per ObjectBucketClaim and keeps provisioning
        information.
      displayName: Object Bucket
      kind: ObjectBucket
      name: objectbuckets.objectbucket.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      version: v1alpha1
  description: |2

    **Red Hat OpenShift Container Storage** deploys three operators.

    ### OpenShift Container Storage operator

    The OpenShift Container Storage operator is the primary operator for OpenShift Container Storage. It serves to facilitate the other operators in OpenShift Container Storage by performing administrative tasks outside their scope as well as watching and configuring their CustomResources.

    ### Rook

    [Rook][1] deploys and manages Ceph on OpenShift, which provides block and file storage.

    ### NooBaa operator

    The NooBaa operator deploys and manages the [NooBaa][2] Multi-Cloud Gateway on OpenShift, which provides object storage.

    # Core Capabilities

    * **Self-managing service:** No matter which supported storage technologies you choose, OpenShift Container Storage ensures that resources can be deployed and managed automatically.

    * **Hyper-scale or hyper-converged:** With OpenShift Container Storage you can either build dedicated storage clusters or hyper-converged clusters where your apps run alongside storage.

    * **File, Block, and Object provided by OpenShift Container Storage:** OpenShift Container Storage integrates Ceph with multiple storage presentations including object storage (compatible with S3), block storage, and POSIX-compliant shared file system.

    * **Your data, protected:** OpenShift Container Storage efficiently distributes and replicates your data across your cluster to minimize the risk of data loss. With snapshots, cloning, and versioning, no more losing sleep over your data.

    * **Elastic storage in your datacenter:** Scale is now possible in your datacenter. Get started with a few terabytes, and easily scale up.

    * **Simplified data management:** Easily create hybrid and multi-cloud data storage for your workloads, using a single namespace.

    [1]: https://rook.io
    [2]: https://noobaa.io
  displayName: OpenShift Container Storage
  icon:
  - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxOTIgMTQ1Ij48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2UwMDt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPlJlZEhhdC1Mb2dvLUhhdC1Db2xvcjwvdGl0bGU+PHBhdGggZD0iTTE1Ny43Nyw2Mi42MWExNCwxNCwwLDAsMSwuMzEsMy40MmMwLDE0Ljg4LTE4LjEsMTcuNDYtMzAuNjEsMTcuNDZDNzguODMsODMuNDksNDIuNTMsNTMuMjYsNDIuNTMsNDRhNi40Myw2LjQzLDAsMCwxLC4yMi0xLjk0bC0zLjY2LDkuMDZhMTguNDUsMTguNDUsMCwwLDAtMS41MSw3LjMzYzAsMTguMTEsNDEsNDUuNDgsODcuNzQsNDUuNDgsMjAuNjksMCwzNi40My03Ljc2LDM2LjQzLTIxLjc3LDAtMS4wOCwwLTEuOTQtMS43My0xMC4xM1oiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMjcuNDcsODMuNDljMTIuNTEsMCwzMC42MS0yLjU4LDMwLjYxLTE3LjQ2YTE0LDE0LDAsMCwwLS4zMS0zLjQybC03LjQ1LTMyLjM2Yy0xLjcyLTcuMTItMy4yMy0xMC4zNS0xNS43My0xNi42QzEyNC44OSw4LjY5LDEwMy43Ni41LDk3LjUxLjUsOTEuNjkuNSw5MCw4LDgzLjA2LDhjLTYuNjgsMC0xMS42NC01LjYtMTcuODktNS42LTYsMC05LjkxLDQuMDktMTIuOTMsMTIuNSwwLDAtOC40MSwyMy43Mi05LjQ5LDI3LjE2QTYuNDMsNi40MywwLDAsMCw0Mi41Myw0NGMwLDkuMjIsMzYuMywzOS40NSw4NC45NCwzOS40NU0xNjAsNzIuMDdjMS43Myw4LjE5LDEuNzMsOS4wNSwxLjczLDEwLjEzLDAsMTQtMTUuNzQsMjEuNzctMzYuNDMsMjEuNzdDNzguNTQsMTA0LDM3LjU4LDc2LjYsMzcuNTgsNTguNDlhMTguNDUsMTguNDUsMCwwLDEsMS41MS03LjMzQzIyLjI3LDUyLC41LDU1LC41LDc0LjIyYzAsMzEuNDgsNzQuNTksNzAuMjgsMTMzLjY1LDcwLjI4LDQ1LjI4LDAsNTYuNy0yMC40OCw1Ni43LTM2LjY1LDAtMTIuNzItMTEtMjcuMTYtMzAuODMtMzUuNzgiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - nodes
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - list
          - watch
          - create
        - apiGroups:
          - ocs.openshift.io
          resources:
          - '*'
          - storageclusters
          - ocsinitialization
          - storageclusterinitializations
          verbs:
          - '*'
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephclusters
          - cephblockpools
          - cephfilesystems
          - cephobjectstores
          - cephobjectstoreusers
          verbs:
          - '*'
        - apiGroups:
          - noobaa.io
          resources:
          - noobaas
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - get
          - create
          - update
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - get
          - create
          - update
        - apiGroups:
          - template.openshift.io
          resources:
          - templates
          verbs:
          - '*'
        serviceAccountName: ocs-operator
      - rules: []
        serviceAccountName: rook-ceph-cluster-mgmt
      - rules:
        - apiGroups:
          - ""
          - apps
          - extensions
          resources:
          - secrets
          - pods
          - pods/log
          - services
          - configmaps
          - deployments
          - daemonsets
          verbs:
          - get
          - list
          - watch
          - patch
          - create
          - update
          - delete
        serviceAccountName: rook-ceph-system
      - rules: []
        serviceAccountName: rook-ceph-global
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - nodes
          - nodes/proxy
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          - persistentvolumes
          - persistentvolumeclaims
          - endpoints
          verbs:
          - get
          - list
          - watch
          - patch
          - create
          - update
          - delete
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ceph.rook.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - rook.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - policy
          - apps
          - extensions
          resources:
          - poddisruptionbudgets
          - deployments
          - replicasets
          verbs:
          - '*'
        - apiGroups:
          - healthchecking.openshift.io
          resources:
          - machinedisruptionbudgets
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - machine.openshift.io
          resources:
          - machines
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - storage.k8s.io
          resources:
          - csidrivers
          verbs:
          - create
        serviceAccountName: rook-ceph-system
      - rules: []
        serviceAccountName: rook-ceph-mgr-cluster
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - nodes
          - nodes/proxy
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
          - list
          - get
          - watch
        serviceAccountName: rook-ceph-mgr
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          verbs:
          - '*'
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - objectbucket.io
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
        serviceAccountName: rook-ceph-osd
      - rules: []
        serviceAccountName: rook-ceph-mgr-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        serviceAccountName: rook-ceph-mgr
      - rules: []
        serviceAccountName: cephfs-csi-nodeplugin
      - rules:
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
        serviceAccountName: rook-csi-cephfs-plugin-sa
      - rules: []
        serviceAccountName: cephfs-external-provisioner-runner
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - list
          - watch
          - create
          - update
          - patch
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims/status
          verbs:
          - update
          - patch
        serviceAccountName: rook-csi-cephfs-provisioner-sa
      - rules: []
        serviceAccountName: rbd-csi-nodeplugin
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
        serviceAccountName: rook-csi-rbd-plugin-sa
      - rules: []
        serviceAccountName: rbd-external-provisioner-runner
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - list
          - watch
          - create
          - update
          - patch
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshots
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotcontents
          verbs:
          - create
          - get
          - list
          - watch
          - update
          - delete
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - list
          - watch
          - delete
          - get
          - update
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshots/status
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims/status
          verbs:
          - update
          - patch
        serviceAccountName: rook-csi-rbd-provisioner-sa
      - rules:
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - use
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - noobaa.io
          resources:
          - '*'
          - noobaas
          - backingstores
          - bucketclasses
          - noobaas/finalizers
          - backingstores/finalizers
          - bucketclasses/finalizers
          verbs:
          - '*'
        - apiGroups:
          - objectbucket.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          - persistentvolumes
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
          - create
          - update
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: noobaa
      deployments:
      - name: ocs-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: ocs-operator
          strategy:
            type: Recreate
          template:
            metadata:
              labels:
                name: ocs-operator
            spec:
              containers:
              - command:
                - ocs-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: ocs-operator
                - name: ROOK_CEPH_IMAGE
                  value: quay.io/multi-arch/ocs4-rook-ceph-rhel8-operator:latest 
                - name: CEPH_IMAGE
                  value: quay.io/multi-arch/rhceph-rhceph-4-rhel8:latest
                - name: NOOBAA_CORE_IMAGE
                  value: quay.io/multi-arch/ocs4-mcg-core-rhel8:4.3
                - name: NOOBAA_DB_IMAGE
                  value: hub.docker.com/ibmcom/mongodb:3.6.0-ppc64le
                image: quay.io/multi-arch/ocs4-ocs-rhel8-operator:4.3
                imagePullPolicy: Always
                name: ocs-operator
                ports:
                - containerPort: 60000
                  name: metrics
                readinessProbe:
                  exec:
                    command:
                    - stat
                    - /tmp/operator-sdk-ready
                  failureThreshold: 1
                  initialDelaySeconds: 4
                  periodSeconds: 10
                resources: {}
              serviceAccountName: ocs-operator
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
      - name: rook-ceph-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: rook-ceph-operator
          strategy: {}
          template:
            metadata:
              labels:
                app: rook-ceph-operator
            spec:
              containers:
              - args:
                - ceph
                - operator
                env:
                - name: ROOK_CURRENT_NAMESPACE_ONLY
                  value: "true"
                - name: ROOK_ALLOW_MULTIPLE_FILESYSTEMS
                  value: "false"
                - name: ROOK_LOG_LEVEL
                  value: INFO
                - name: ROOK_CEPH_STATUS_CHECK_INTERVAL
                  value: 60s
                - name: ROOK_MON_HEALTHCHECK_INTERVAL
                  value: 45s
                - name: ROOK_MON_OUT_TIMEOUT
                  value: 600s
                - name: ROOK_DISCOVER_DEVICES_INTERVAL
                  value: 60m
                - name: ROOK_HOSTPATH_REQUIRES_PRIVILEGED
                  value: "true"
                - name: ROOK_ENABLE_SELINUX_RELABELING
                  value: "true"
                - name: ROOK_ENABLE_FSGROUP
                  value: "true"
                - name: ROOK_ENABLE_FLEX_DRIVER
                  value: "false"
                - name: ROOK_ENABLE_DISCOVERY_DAEMON
                  value: "false"
                - name: ROOK_ENABLE_MACHINE_DISRUPTION_BUDGET
                  value: "false"
                - name: ROOK_DISABLE_DEVICE_HOTPLUG
                  value: "true"
                - name: ROOK_CSI_ALLOW_UNSUPPORTED_VERSION
                  value: "true"
                - name: CSI_PROVISIONER_NODE_AFFINITY
                  value: cluster.ocs.openshift.io/openshift-storage=
                - name: CSI_PROVISIONER_TOLERATIONS
                  value: |2-

                    - key: node.ocs.openshift.io/storage
                      operator: Equal
                      value: "true"
                      effect: NoSchedule
                - name: CSI_PLUGIN_TOLERATIONS
                  value: |2-

                    - key: node.ocs.openshift.io/storage
                      operator: Equal
                      value: "true"
                      effect: NoSchedule
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CSI_ENABLE_SNAPSHOTTER
                  value: "false"
                - name: ROOK_OBC_WATCH_OPERATOR_NAMESPACE
                  value: "true"
                image: quay.io/multi-arch/ocs4-rook-ceph-rhel8-operator:latest 
                name: rook-ceph-operator
                resources: {}
                volumeMounts:
                - mountPath: /var/lib/rook
                  name: rook-config
                - mountPath: /etc/ceph
                  name: default-config-dir
              serviceAccountName: rook-ceph-system
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
              volumes:
              - emptyDir: {}
                name: rook-config
              - emptyDir: {}
                name: default-config-dir
      - name: noobaa-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              noobaa-operator: deployment
          strategy: {}
          template:
            metadata:
              labels:
                app: noobaa
                noobaa-operator: deployment
            spec:
              containers:
              - env:
                - name: OPERATOR_NAME
                  value: noobaa-operator
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: NOOBAA_CORE_IMAGE
                  value: quay.io/multi-arch/ocs4-mcg-core-rhel8:4.3
                - name: NOOBAA_DB_IMAGE
                  value: hub.docker.com/ibmcom/mongodb:3.6.0-ppc64le
                image: quay.io/multi-arch/ocs4-mcg-rhel8-operator:4.3
                name: noobaa-operator
                resources:
                  limits:
                    cpu: 250m
                    memory: 512Mi
              serviceAccountName: noobaa
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - services
          - endpoints
          - pods
          verbs:
          - get
          - list
          - watch
        serviceAccountName: noobaa-metrics
      - rules:
        - apiGroups:
          - ""
          resources:
          - services
          - endpoints
          - pods
          verbs:
          - get
          - list
          - watch
        serviceAccountName: rook-ceph-metrics
      - rules:
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: rook-ceph-monitor
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - configmaps
          - services
          verbs:
          - get
          - list
          - watch
          - patch
          - create
          - update
          - delete
        - apiGroups:
          - apps
          - extensions
          resources:
          - daemonsets
          - statefulsets
          - deployments
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - k8s.cni.cncf.io
          resources:
          - network-attachment-definitions
          verbs:
          - get
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephclusters
          - cephclusters/finalizers
          verbs:
          - get
          - list
          - create
          - update
          - delete
        serviceAccountName: rook-ceph-osd
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - pods/log
          verbs:
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ceph.rook.io
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: rook-ceph-mgr
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - create
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        serviceAccountName: rook-csi-cephfs-provisioner-sa
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        serviceAccountName: rook-csi-rbd-provisioner-sa
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        serviceAccountName: rook-ceph-cmd-reporter
      - rules:
        - apiGroups:
          - noobaa.io
          resources:
          - '*'
          - noobaas
          - backingstores
          - bucketclasses
          - noobaas/finalizers
          - backingstores/finalizers
          - bucketclasses/finalizers
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          - prometheusrules
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services/finalizers
          verbs:
          - update
        - apiGroups:
          - apps
          resourceNames:
          - noobaa-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - cloudcredential.openshift.io
          resources:
          - credentialsrequests
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephobjectstores
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephobjectstoreusers
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - get
          - create
          - update
          - patch
          - list
          - watch
        serviceAccountName: noobaa
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - storage
  - rook
  - ceph
  - noobaa
  - block storage
  - shared filesystem
  - object storage
  links:
  - name: Source Code
    url: https://github.com/openshift/ocs-operator
  maintainers:
  - email: support@redhat.com
    name: Red Hat Support
  maturity: alpha
  provider:
    name: Red Hat, Inc
  relatedImages:
  - image: quay.io/multi-arch/ocs4-rook-ceph-rhel8-operator:latest
    name: rook-container
  - image: quay.io/multi-arch/rhceph-rhceph-4-rhel8:latest
    name: ceph-container
  - image: quay.io/multi-arch/ocs4-mcg-rhel8-operator:4.3
    name: noobaa-operator
  - image: quay.io/multi-arch/ocs4-mcg-core-rhel8:4.3
    name: noobaa-core
  - image: hub.docker.com/ibmcom/mongodb:3.6.0-ppc64le
    name: noobaa-db
  version: 4.3.0
