---
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |2-

      [
          {
              "apiVersion": "ocs.openshift.io/v1",
              "kind": "StorageCluster",
              "metadata": {
                  "name": "example-storagecluster",
                  "namespace": "openshift-storage"
              },
              "spec": {
                  "manageNodes": false,
                  "monPVCTemplate": {
                      "spec": {
                          "accessModes": [
                              "ReadWriteOnce"
                          ],
                          "resources": {
                              "requests": {
                                  "storage": "10Gi"
                              }
                          },
                          "storageClassName": "gp2"
                      }
                  },
                  "storageDeviceSets": [
                      {
                          "count": 3,
                          "dataPVCTemplate": {
                              "spec": {
                                  "accessModes": [
                                      "ReadWriteOnce"
                                  ],
                                  "resources": {
                                      "requests": {
                                          "storage": "1Ti"
                                      }
                                  },
                                  "storageClassName": "gp2",
                                  "volumeMode": "Block"
                              }
                          },
                          "name": "example-deviceset",
                          "placement": {},
                          "portable": true,
                          "resources": {}
                      }
                  ]
              }
          }
      ]
    capabilities: Full Lifecycle
    categories: Storage
    containerImage: quay.io/ocs-dev/ocs-operator:4.6.0
    description: Red Hat OpenShift Container Storage provides hyperconverged storage
      for applications within an OpenShift cluster.
    external.features.ocs.openshift.io/export-script: |-
      JycnCkNvcHlyaWdodCAyMDIwIFRoZSBSb29rIEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQu
      CgpMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxp
      Y2Vuc2UiKTsKeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3
      aXRoIHRoZSBMaWNlbnNlLgpZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQK
      CglodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKClVubGVzcyByZXF1
      aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmUK
      ZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElT
      IiBCQVNJUywKV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVp
      dGhlciBleHByZXNzIG9yIGltcGxpZWQuClNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmlj
      IGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmQKbGltaXRhdGlvbnMgdW5kZXIgdGhl
      IExpY2Vuc2UuCicnJwoKaW1wb3J0IHN5cwppbXBvcnQganNvbgppbXBvcnQgYXJncGFyc2UKaW1w
      b3J0IHVuaXR0ZXN0CmltcG9ydCByZQppbXBvcnQgcmVxdWVzdHMKZnJvbSBvcyBpbXBvcnQgbGlu
      ZXNlcCBhcyBMSU5FU0VQCgojIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkgd2l0aCAyLngKdHJ5Ogog
      ICAgTW9kdWxlTm90Rm91bmRFcnJvcgpleGNlcHQ6CiAgICBNb2R1bGVOb3RGb3VuZEVycm9yID0g
      SW1wb3J0RXJyb3IKCnRyeToKICAgIGltcG9ydCByYWRvcwpleGNlcHQgTW9kdWxlTm90Rm91bmRF
      cnJvciBhcyBub01vZEVycjoKICAgIHByaW50KCJFcnJvcjogJXNcbkV4aXRpbmcgdGhlIHNjcmlw
      dC4uLiIgJSBub01vZEVycikKICAgIHN5cy5leGl0KDEpCgp0cnk6CiAgICAjIGZvciAyLjcueAog
      ICAgZnJvbSBTdHJpbmdJTyBpbXBvcnQgU3RyaW5nSU8KZXhjZXB0IE1vZHVsZU5vdEZvdW5kRXJy
      b3I6CiAgICAjIGZvciAzLngKICAgIGZyb20gaW8gaW1wb3J0IFN0cmluZ0lPCgoKY2xhc3MgRXhl
      Y3V0aW9uRmFpbHVyZUV4Y2VwdGlvbihFeGNlcHRpb24pOgogICAgcGFzcwoKCmNsYXNzIFJhZG9z
      SlNPTjoKICAgIEVYVEVSTkFMX1VTRVJfTkFNRSA9ICJjbGllbnQuaGVhbHRoY2hlY2tlciIKICAg
      IEVNUFRZX09VVFBVVF9MSVNUID0gIkVtcHR5IG91dHB1dCBsaXN0IgoKICAgIEBjbGFzc21ldGhv
      ZAogICAgZGVmIGdlbl9hcmdfcGFyc2VyKGNscywgYXJnc190b19wYXJzZT1Ob25lKToKICAgICAg
      ICBhcmdQID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoKQogICAgICAgIGFyZ1AuYWRkX2FyZ3Vt
      ZW50KCItLXZlcmJvc2UiLCAiLXYiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbj0n
      c3RvcmVfdHJ1ZScsIGRlZmF1bHQ9RmFsc2UpCiAgICAgICAgYXJnUC5hZGRfYXJndW1lbnQoIi0t
      Y2VwaC1jb25mIiwgIi1jIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBoZWxwPSJQcm92aWRl
      IGEgY2VwaCBjb25mIGZpbGUuIiwgdHlwZT1zdHIpCiAgICAgICAgYXJnUC5hZGRfYXJndW1lbnQo
      Ii0tcnVuLWFzLXVzZXIiLCAiLXUiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGhlbHA9IlBy
      b3ZpZGVzIGEgdXNlciBuYW1lIHRvIGNoZWNrIHRoZSBjbHVzdGVyJ3MgaGVhbHRoIHN0YXR1cywg
      bXVzdCBiZSBwcmVmaXhlZCBieSAnY2xpZW50LiciLAogICAgICAgICAgICAgICAgICAgICAgICAg
      IGRlZmF1bHQ9Y2xzLkVYVEVSTkFMX1VTRVJfTkFNRSwgdHlwZT1zdHIpCiAgICAgICAgYXJnUC5h
      ZGRfYXJndW1lbnQoIi0tZm9ybWF0IiwgIi10IiwgY2hvaWNlcz1bImpzb24iLCAiYmFzaCJdLAog
      ICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ9J2pzb24nLCBoZWxwPSJQcm92aWRlcyB0
      aGUgb3V0cHV0IGZvcm1hdCAoanNvbiB8IGJhc2gpIikKICAgICAgICBhcmdQLmFkZF9hcmd1bWVu
      dCgiLS1jbHVzdGVyLW5hbWUiLCBkZWZhdWx0PSJvcGVuc2hpZnQtc3RvcmFnZSIsCiAgICAgICAg
      ICAgICAgICAgICAgICAgICAgaGVscD0iQ2VwaCBjbHVzdGVyIG5hbWUiKQogICAgICAgIGFyZ1Au
      YWRkX2FyZ3VtZW50KCItLW91dHB1dCIsICItbyIsIGRlZmF1bHQ9IiIsCiAgICAgICAgICAgICAg
      ICAgICAgICAgICAgaGVscD0iT3V0cHV0IHdpbGwgYmUgc3RvcmVkIGludG8gdGhlIHByb3ZpZGVk
      IGZpbGUiKQogICAgICAgIGFyZ1AuYWRkX2FyZ3VtZW50KCItLWNlcGhmcy1maWxlc3lzdGVtLW5h
      bWUiLCBkZWZhdWx0PSIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGhlbHA9IlByb3ZpZGVz
      IHRoZSBuYW1lIG9mIHRoZSBDZXBoIGZpbGVzeXN0ZW0iKQogICAgICAgIGFyZ1AuYWRkX2FyZ3Vt
      ZW50KCItLWNlcGhmcy1kYXRhLXBvb2wtbmFtZSIsIGRlZmF1bHQ9IiIsCiAgICAgICAgICAgICAg
      ICAgICAgICAgICAgaGVscD0iUHJvdmlkZXMgdGhlIG5hbWUgb2YgdGhlIGNlcGhmcyBkYXRhIHBv
      b2wiKQogICAgICAgIGFyZ1AuYWRkX2FyZ3VtZW50KCItLXJiZC1kYXRhLXBvb2wtbmFtZSIsIGRl
      ZmF1bHQ9IiIsIHJlcXVpcmVkPVRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0i
      UHJvdmlkZXMgdGhlIG5hbWUgb2YgdGhlIFJCRCBkYXRhcG9vbCIpCiAgICAgICAgYXJnUC5hZGRf
      YXJndW1lbnQoIi0tbmFtZXNwYWNlIiwgZGVmYXVsdD0iIiwKICAgICAgICAgICAgICAgICAgICAg
      ICAgICBoZWxwPSJOYW1lc3BhY2Ugd2hlcmUgQ2VwaENsdXN0ZXIgaXMgcnVubmluZyIpCiAgICAg
      ICAgYXJnUC5hZGRfYXJndW1lbnQoIi0tcmd3LXBvb2wtcHJlZml4IiwgZGVmYXVsdD0iZGVmYXVs
      dCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0iUkdXIFBvb2wgcHJlZml4IikKICAg
      ICAgICBhcmdQLmFkZF9hcmd1bWVudCgiLS1yZ3ctZW5kcG9pbnQiLCBkZWZhdWx0PSIiLCByZXF1
      aXJlZD1GYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICBoZWxwPSJSYWRvcyBHYXRlV2F5
      IGVuZHBvaW50IChpbiA8SVA+OjxQT1JUPiBmb3JtYXQpIikKICAgICAgICBhcmdQLmFkZF9hcmd1
      bWVudCgiLS1tb25pdG9yaW5nLWVuZHBvaW50IiwgZGVmYXVsdD0iIiwgcmVxdWlyZWQ9RmFsc2Us
      CiAgICAgICAgICAgICAgICAgICAgICAgICAgaGVscD0iQ2VwaCBNYW5hZ2VyIHByb21ldGhldXMg
      ZXhwb3J0ZXIgZW5kcG9pbnRzIGNvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIDxJUD4gZW50cmllcyIp
      CiAgICAgICAgYXJnUC5hZGRfYXJndW1lbnQoIi0tbW9uaXRvcmluZy1lbmRwb2ludC1wb3J0Iiwg
      ZGVmYXVsdD0iOTI4MyIsIHJlcXVpcmVkPUZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICAg
      IGhlbHA9IkNlcGggTWFuYWdlciBwcm9tZXRoZXVzIGV4cG9ydGVyIHBvcnQiKQogICAgICAgIGlm
      IGFyZ3NfdG9fcGFyc2U6CiAgICAgICAgICAgIGFzc2VydCB0eXBlKGFyZ3NfdG9fcGFyc2UpID09
      IGxpc3QsIFwKICAgICAgICAgICAgICAgICJBcmd1bWVudCB0byAnZ2VuX2FyZ19wYXJzZXInIHNo
      b3VsZCBiZSBhIGxpc3QiCiAgICAgICAgZWxzZToKICAgICAgICAgICAgYXJnc190b19wYXJzZSA9
      IHN5cy5hcmd2WzE6XQogICAgICAgIHJldHVybiBhcmdQLnBhcnNlX2FyZ3MoYXJnc190b19wYXJz
      ZSkKCiAgICBkZWYgX2ludmFsaWRfZW5kcG9pbnQoc2VsZiwgZW5kcG9pbnRfc3RyKToKICAgICAg
      ICB0cnk6CiAgICAgICAgICAgIGlwdjQsIHBvcnQgPSBlbmRwb2ludF9zdHIuc3BsaXQoJzonKQog
      ICAgICAgIGV4Y2VwdCBWYWx1ZUVycm9yOgogICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWls
      dXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgIk5vdCBhIHByb3BlciBlbmRwb2ludDoge30s
      IDxJUD46PFBPUlQ+LCBmb3JtYXQgaXMgZXhwZWN0ZWQiLmZvcm1hdChlbmRwb2ludF9zdHIpKQog
      ICAgICAgIGlwUGFydHMgPSBpcHY0LnNwbGl0KCcuJykKICAgICAgICBpZiBsZW4oaXBQYXJ0cykg
      IT0gNDoKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigKICAgICAg
      ICAgICAgICAgICJOb3QgYSB2YWxpZCBJUCBhZGRyZXNzOiB7fSIuZm9ybWF0KGlwdjQpKQogICAg
      ICAgIGZvciBlYWNoUGFydCBpbiBpcFBhcnRzOgogICAgICAgICAgICBpZiBub3QgZWFjaFBhcnQu
      aXNkaWdpdCgpOgogICAgICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlv
      bigKICAgICAgICAgICAgICAgICAgICAiSVAgYWRkcmVzcyBwYXJ0cyBzaG91bGQgYmUgbnVtYmVy
      czoge30iLmZvcm1hdChpcHY0KSkKICAgICAgICAgICAgaW50UGFydCA9IGludChlYWNoUGFydCkK
      ICAgICAgICAgICAgaWYgaW50UGFydCA8IDAgb3IgaW50UGFydCA+IDI1NDoKICAgICAgICAgICAg
      ICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAgICAg
      Ik91dCBvZiByYW5nZSBJUCBhZGRyZXNzZXM6IHt9Ii5mb3JtYXQoaXB2NCkpCiAgICAgICAgaWYg
      bm90IHBvcnQuaXNkaWdpdCgpOgogICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhj
      ZXB0aW9uKCJQb3J0IG5vdCB2YWxpZDoge30iLmZvcm1hdChwb3J0KSkKICAgICAgICBpbnRQb3J0
      ID0gaW50KHBvcnQpCiAgICAgICAgaWYgaW50UG9ydCA8IDEgb3IgaW50UG9ydCA+IDIqKjE2LTE6
      CiAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAg
      ICAgICAiT3V0IG9mIHJhbmdlIHBvcnQgbnVtYmVyOiB7fSIuZm9ybWF0KHBvcnQpKQogICAgICAg
      IHJldHVybiBGYWxzZQoKICAgIGRlZiBlbmRwb2ludF9kaWFsKHNlbGYsIGVuZHBvaW50X3N0cik6
      CiAgICAgICAgdHJ5OgogICAgICAgICAgICBlcCA9ICJodHRwOi8vIiArIGVuZHBvaW50X3N0cgog
      ICAgICAgICAgICByID0gcmVxdWVzdHMuaGVhZChlcCkKICAgICAgICAgICAgcmMgPSByLnN0YXR1
      c19jb2RlCiAgICAgICAgICAgIGlmIHJjICE9IDIwMDoKICAgICAgICAgICAgICAgIHJhaXNlIEV4
      ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAgICAgIndyb25nIHJldHVy
      biBjb2RlIHt9IG9uIHJndyBlbmRwb2ludCBodHRwIGhlYWRlciByZXF1ZXN0Ii5mb3JtYXQocmMp
      KQogICAgICAgIGV4Y2VwdCByZXF1ZXN0cy5Db25uZWN0aW9uRXJyb3I6CiAgICAgICAgICAgIHJh
      aXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAiZmFpbGVkIHRv
      IGNvbm5lY3QgdG8gcmd3IGVuZHBvaW50IHt9Ii5mb3JtYXQoZXApKQoKICAgIGRlZiBfX2luaXRf
      XyhzZWxmLCBhcmdfbGlzdD1Ob25lKToKICAgICAgICBzZWxmLm91dF9tYXAgPSB7fQogICAgICAg
      IHNlbGYuX2V4Y2x1ZGVkX2tleXMgPSBzZXQoKQogICAgICAgIHNlbGYuX2FyZ19wYXJzZXIgPSBz
      ZWxmLmdlbl9hcmdfcGFyc2VyKGFyZ3NfdG9fcGFyc2U9YXJnX2xpc3QpCiAgICAgICAgc2VsZi5v
      dXRwdXRfZmlsZSA9IHNlbGYuX2FyZ19wYXJzZXIub3V0cHV0CiAgICAgICAgc2VsZi5jZXBoX2Nv
      bmYgPSBzZWxmLl9hcmdfcGFyc2VyLmNlcGhfY29uZgogICAgICAgIHNlbGYucnVuX2FzX3VzZXIg
      PSBzZWxmLl9hcmdfcGFyc2VyLnJ1bl9hc191c2VyCiAgICAgICAgaWYgbm90IHNlbGYucnVuX2Fz
      X3VzZXI6CiAgICAgICAgICAgIHNlbGYucnVuX2FzX3VzZXIgPSBzZWxmLkVYVEVSTkFMX1VTRVJf
      TkFNRQogICAgICAgIGlmIHNlbGYuY2VwaF9jb25mOgogICAgICAgICAgICBzZWxmLmNsdXN0ZXIg
      PSByYWRvcy5SYWRvcyhjb25mZmlsZT1zZWxmLmNlcGhfY29uZikKICAgICAgICBlbHNlOgogICAg
      ICAgICAgICBzZWxmLmNsdXN0ZXIgPSByYWRvcy5SYWRvcygpCiAgICAgICAgICAgIHNlbGYuY2x1
      c3Rlci5jb25mX3JlYWRfZmlsZSgpCiAgICAgICAgc2VsZi5jbHVzdGVyLmNvbm5lY3QoKQoKICAg
      IGRlZiBzaHV0ZG93bihzZWxmKToKICAgICAgICBpZiBzZWxmLmNsdXN0ZXIuc3RhdGUgPT0gImNv
      bm5lY3RlZCI6CiAgICAgICAgICAgIHNlbGYuY2x1c3Rlci5zaHV0ZG93bigpCgogICAgZGVmIGdl
      dF9mc2lkKHNlbGYpOgogICAgICAgIHJldHVybiBzdHIoc2VsZi5jbHVzdGVyLmdldF9mc2lkKCkp
      CgogICAgZGVmIF9jb21tb25fY21kX2pzb25fZ2VuKHNlbGYsIGNtZF9qc29uKToKICAgICAgICBj
      bWQgPSBqc29uLmR1bXBzKGNtZF9qc29uLCBzb3J0X2tleXM9VHJ1ZSkKICAgICAgICByZXRfdmFs
      LCBjbWRfb3V0LCBlcnJfbXNnID0gc2VsZi5jbHVzdGVyLm1vbl9jb21tYW5kKGNtZCwgYicnKQog
      ICAgICAgIGlmIHNlbGYuX2FyZ19wYXJzZXIudmVyYm9zZToKICAgICAgICAgICAgcHJpbnQoIkNv
      bW1hbmQgSW5wdXQ6IHt9Ii5mb3JtYXQoY21kKSkKICAgICAgICAgICAgcHJpbnQoIlJldHVybiBW
      YWw6IHt9XG5Db21tYW5kIE91dHB1dDoge31cbkVycm9yIE1lc3NhZ2U6IHt9XG4tLS0tLS0tLS0t
      XG4iLmZvcm1hdCgKICAgICAgICAgICAgICAgICAgcmV0X3ZhbCwgY21kX291dCwgZXJyX21zZykp
      CiAgICAgICAganNvbl9vdXQgPSB7fQogICAgICAgIGlmIHJldF92YWwgPT0gMDoKICAgICAgICAg
      ICAganNvbl9vdXQgPSBqc29uLmxvYWRzKGNtZF9vdXQpCiAgICAgICAgcmV0dXJuIHJldF92YWws
      IGpzb25fb3V0LCBlcnJfbXNnCgogICAgZGVmIGdldF9jZXBoX2V4dGVybmFsX21vbl9kYXRhKHNl
      bGYpOgogICAgICAgIGNtZF9qc29uID0geyJwcmVmaXgiOiAicXVvcnVtX3N0YXR1cyIsICJmb3Jt
      YXQiOiAianNvbiJ9CiAgICAgICAgcmV0X3ZhbCwganNvbl9vdXQsIGVycl9tc2cgPSBzZWxmLl9j
      b21tb25fY21kX2pzb25fZ2VuKGNtZF9qc29uKQogICAgICAgICMgaWYgdGhlcmUgaXMgYW4gdW5z
      dWNjZXNzZnVsIGF0dGVtcHQsCiAgICAgICAgaWYgcmV0X3ZhbCAhPSAwIG9yIGxlbihqc29uX291
      dCkgPT0gMDoKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigKICAg
      ICAgICAgICAgICAgICIncXVvcnVtX3N0YXR1cycgY29tbWFuZCBmYWlsZWQuXG4iICsKICAgICAg
      ICAgICAgICAgICJFcnJvcjoge30iLmZvcm1hdChlcnJfbXNnIGlmIHJldF92YWwgIT0gMCBlbHNl
      IHNlbGYuRU1QVFlfT1VUUFVUX0xJU1QpKQogICAgICAgIHFfbGVhZGVyX25hbWUgPSBqc29uX291
      dFsncXVvcnVtX2xlYWRlcl9uYW1lJ10KICAgICAgICBxX2xlYWRlcl9kZXRhaWxzID0ge30KICAg
      ICAgICBxX2xlYWRlcl9tYXRjaGluZ19saXN0ID0gW2wgZm9yIGwgaW4ganNvbl9vdXRbJ21vbm1h
      cCddWydtb25zJ10KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIGxbJ25hbWUn
      XSA9PSBxX2xlYWRlcl9uYW1lXQogICAgICAgIGlmIGxlbihxX2xlYWRlcl9tYXRjaGluZ19saXN0
      KSA9PSAwOgogICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKCJObyBt
      YXRjaGluZyAnbW9uJyBkZXRhaWxzIGZvdW5kIikKICAgICAgICBxX2xlYWRlcl9kZXRhaWxzID0g
      cV9sZWFkZXJfbWF0Y2hpbmdfbGlzdFswXQogICAgICAgIGlwX3BvcnQgPSBzdHIocV9sZWFkZXJf
      ZGV0YWlsc1sncHVibGljX2FkZHInXS5zcGxpdCgnLycpWzBdKQogICAgICAgIHJldHVybiAie309
      e30iLmZvcm1hdChzdHIocV9sZWFkZXJfbmFtZSksIGlwX3BvcnQpCgogICAgZGVmIGdldF9hY3Rp
      dmVfY2VwaF9tZ3Ioc2VsZik6CiAgICAgICAgaWYgc2VsZi5fYXJnX3BhcnNlci5tb25pdG9yaW5n
      X2VuZHBvaW50OgogICAgICAgICAgICByZXR1cm4gc2VsZi5fYXJnX3BhcnNlci5tb25pdG9yaW5n
      X2VuZHBvaW50Kyc6JytzZWxmLl9hcmdfcGFyc2VyLm1vbml0b3JpbmdfZW5kcG9pbnRfcG9ydAog
      ICAgICAgIGVsc2U6CiAgICAgICAgICAgIGNtZF9qc29uID0geyJwcmVmaXgiOiAibWdyIHNlcnZp
      Y2VzIiwgImZvcm1hdCI6ICJqc29uIn0KICAgICAgICAgICAgcmV0X3ZhbCwganNvbl9vdXQsIGVy
      cl9tc2cgPSBzZWxmLl9jb21tb25fY21kX2pzb25fZ2VuKGNtZF9qc29uKQogICAgICAgICAgICAj
      IGlmIHRoZXJlIGlzIGFuIHVuc3VjY2Vzc2Z1bCBhdHRlbXB0LAogICAgICAgICAgICBpZiByZXRf
      dmFsICE9IDAgb3IgbGVuKGpzb25fb3V0KSA9PSAwOgogICAgICAgICAgICAgICAgcmFpc2UgRXhl
      Y3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigKICAgICAgICAgICAgICAgICAgICAiJ21nciBzZXJ2aWNl
      cycgY29tbWFuZCBmYWlsZWQuXG4iICsKICAgICAgICAgICAgICAgICAgICAiRXJyb3I6IHt9Ii5m
      b3JtYXQoZXJyX21zZyBpZiByZXRfdmFsICE9IDAgZWxzZSBzZWxmLkVNUFRZX09VVFBVVF9MSVNU
      KSkKICAgICAgICAgICAgbW9uaXRvcmluZ19lbmRwb2ludCA9IGpzb25fb3V0LmdldCgncHJvbWV0
      aGV1cycpCiAgICAgICAgICAgIGlmIG5vdCBtb25pdG9yaW5nX2VuZHBvaW50OgogICAgICAgICAg
      ICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigKICAgICAgICAgICAgICAgICAg
      ICAiJ3Byb21ldGhldXMnIHNlcnZpY2Ugbm90IGZvdW5kLCBpcyB0aGUgZXhwb3J0ZXIgZW5hYmxl
      ZD8nLlxuIikKCiAgICAgICAgICAgIG1vbml0b3JpbmdfZW5kcG9pbnQgPSBtb25pdG9yaW5nX2Vu
      ZHBvaW50LnJlcGxhY2UoImh0dHA6Ly8iLCAiIikKICAgICAgICAgICAgbW9uaXRvcmluZ19lbmRw
      b2ludCA9IG1vbml0b3JpbmdfZW5kcG9pbnQucmVwbGFjZSgiLyIsICIiKQogICAgICAgICAgICBy
      ZXR1cm4gbW9uaXRvcmluZ19lbmRwb2ludAoKICAgIGRlZiBjcmVhdGVfY2VwaENTSUtleXJpbmdf
      Y2VwaEZTUHJvdmlzaW9uZXIoc2VsZik6CiAgICAgICAgJycnCiAgICAgICAgY29tbWFuZDogY2Vw
      aCBhdXRoIGdldC1vci1jcmVhdGUgY2xpZW50LmNzaS1jZXBoZnMtcHJvdmlzaW9uZXIgbW9uICdh
      bGxvdyByJyBtZ3IgJ2FsbG93IHJ3JyBvc2QgJ2FsbG93IHJ3IHRhZyBjZXBoZnMgbWV0YWRhdGE9
      KicKICAgICAgICAnJycKICAgICAgICBjbWRfanNvbiA9IHsicHJlZml4IjogImF1dGggZ2V0LW9y
      LWNyZWF0ZSIsCiAgICAgICAgICAgICAgICAgICAgImVudGl0eSI6ICJjbGllbnQuY3NpLWNlcGhm
      cy1wcm92aXNpb25lciIsCiAgICAgICAgICAgICAgICAgICAgImNhcHMiOiBbIm1vbiIsICJhbGxv
      dyByIiwgIm1nciIsICJhbGxvdyBydyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm9z
      ZCIsICJhbGxvdyBydyB0YWcgY2VwaGZzIG1ldGFkYXRhPSoiXSwKICAgICAgICAgICAgICAgICAg
      ICAiZm9ybWF0IjogImpzb24ifQogICAgICAgIHJldF92YWwsIGpzb25fb3V0LCBlcnJfbXNnID0g
      c2VsZi5fY29tbW9uX2NtZF9qc29uX2dlbihjbWRfanNvbikKICAgICAgICAjIGlmIHRoZXJlIGlz
      IGFuIHVuc3VjY2Vzc2Z1bCBhdHRlbXB0LAogICAgICAgIGlmIHJldF92YWwgIT0gMCBvciBsZW4o
      anNvbl9vdXQpID09IDA6CiAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRp
      b24oCiAgICAgICAgICAgICAgICAiJ2F1dGggZ2V0LW9yLWNyZWF0ZSBjbGllbnQuY3NpLWNlcGhm
      cy1wcm92aXNpb25lcicgY29tbWFuZCBmYWlsZWQuXG4iICsKICAgICAgICAgICAgICAgICJFcnJv
      cjoge30iLmZvcm1hdChlcnJfbXNnIGlmIHJldF92YWwgIT0gMCBlbHNlIHNlbGYuRU1QVFlfT1VU
      UFVUX0xJU1QpKQogICAgICAgIHJldHVybiBzdHIoanNvbl9vdXRbMF1bJ2tleSddKQoKICAgIGRl
      ZiBjcmVhdGVfY2VwaENTSUtleXJpbmdfY2VwaEZTTm9kZShzZWxmKToKICAgICAgICBjbWRfanNv
      biA9IHsicHJlZml4IjogImF1dGggZ2V0LW9yLWNyZWF0ZSIsCiAgICAgICAgICAgICAgICAgICAg
      ImVudGl0eSI6ICJjbGllbnQuY3NpLWNlcGhmcy1ub2RlIiwKICAgICAgICAgICAgICAgICAgICAi
      Y2FwcyI6IFsibW9uIiwgImFsbG93IHIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJt
      Z3IiLCAiYWxsb3cgcnciLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJvc2QiLCAiYWxs
      b3cgcncgdGFnIGNlcGhmcyAqPSoiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJtZHMi
      LCAiYWxsb3cgcnciXSwKICAgICAgICAgICAgICAgICAgICAiZm9ybWF0IjogImpzb24ifQogICAg
      ICAgIHJldF92YWwsIGpzb25fb3V0LCBlcnJfbXNnID0gc2VsZi5fY29tbW9uX2NtZF9qc29uX2dl
      bihjbWRfanNvbikKICAgICAgICAjIGlmIHRoZXJlIGlzIGFuIHVuc3VjY2Vzc2Z1bCBhdHRlbXB0
      LAogICAgICAgIGlmIHJldF92YWwgIT0gMCBvciBsZW4oanNvbl9vdXQpID09IDA6CiAgICAgICAg
      ICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAgICAgICAiJ2F1
      dGggZ2V0LW9yLWNyZWF0ZSBjbGllbnQuY3NpLWNlcGhmcy1ub2RlJyBjb21tYW5kIGZhaWxlZC5c
      biIgKwogICAgICAgICAgICAgICAgIkVycm9yOiB7fSIuZm9ybWF0KGVycl9tc2cgaWYgcmV0X3Zh
      bCAhPSAwIGVsc2Ugc2VsZi5FTVBUWV9PVVRQVVRfTElTVCkpCiAgICAgICAgcmV0dXJuIHN0cihq
      c29uX291dFswXVsna2V5J10pCgogICAgZGVmIGNyZWF0ZV9jZXBoQ1NJS2V5cmluZ19SQkRQcm92
      aXNpb25lcihzZWxmKToKICAgICAgICBjbWRfanNvbiA9IHsicHJlZml4IjogImF1dGggZ2V0LW9y
      LWNyZWF0ZSIsCiAgICAgICAgICAgICAgICAgICAgImVudGl0eSI6ICJjbGllbnQuY3NpLXJiZC1w
      cm92aXNpb25lciIsCiAgICAgICAgICAgICAgICAgICAgImNhcHMiOiBbIm1vbiIsICJwcm9maWxl
      IHJiZCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIm1nciIsICJhbGxvdyBydyIsCiAg
      ICAgICAgICAgICAgICAgICAgICAgICAgICAgIm9zZCIsICJwcm9maWxlIHJiZCJdLAogICAgICAg
      ICAgICAgICAgICAgICJmb3JtYXQiOiAianNvbiJ9CiAgICAgICAgcmV0X3ZhbCwganNvbl9vdXQs
      IGVycl9tc2cgPSBzZWxmLl9jb21tb25fY21kX2pzb25fZ2VuKGNtZF9qc29uKQogICAgICAgICMg
      aWYgdGhlcmUgaXMgYW4gdW5zdWNjZXNzZnVsIGF0dGVtcHQsCiAgICAgICAgaWYgcmV0X3ZhbCAh
      PSAwIG9yIGxlbihqc29uX291dCkgPT0gMDoKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFp
      bHVyZUV4Y2VwdGlvbigKICAgICAgICAgICAgICAgICInYXV0aCBnZXQtb3ItY3JlYXRlIGNsaWVu
      dC5jc2ktcmJkLXByb3Zpc2lvbmVyJyBjb21tYW5kIGZhaWxlZC5cbiIgKwogICAgICAgICAgICAg
      ICAgIkVycm9yOiB7fSIuZm9ybWF0KGVycl9tc2cgaWYgcmV0X3ZhbCAhPSAwIGVsc2Ugc2VsZi5F
      TVBUWV9PVVRQVVRfTElTVCkpCiAgICAgICAgcmV0dXJuIHN0cihqc29uX291dFswXVsna2V5J10p
      CgogICAgZGVmIGdldF9jZXBoZnNfZGF0YV9wb29sX2RldGFpbHMoc2VsZik6CiAgICAgICAgY21k
      X2pzb24gPSB7InByZWZpeCI6ICJmcyBscyIsICJmb3JtYXQiOiAianNvbiJ9CiAgICAgICAgcmV0
      X3ZhbCwganNvbl9vdXQsIGVycl9tc2cgPSBzZWxmLl9jb21tb25fY21kX2pzb25fZ2VuKGNtZF9q
      c29uKQogICAgICAgICMgaWYgdGhlcmUgaXMgYW4gdW5zdWNjZXNzZnVsIGF0dGVtcHQsIHJlcG9y
      dCBhbiBlcnJvcgogICAgICAgIGlmIHJldF92YWwgIT0gMDoKICAgICAgICAgICAgIyBpZiBmcyBh
      bmQgZGF0YV9wb29sIGFyZ3VtZW50cyBhcmUgbm90IHNldCwgc2lsZW50bHkgcmV0dXJuCiAgICAg
      ICAgICAgIGlmIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2ZpbGVzeXN0ZW1fbmFtZSA9PSAiIiBh
      bmQgc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZGF0YV9wb29sX25hbWUgPT0gIiI6CiAgICAgICAg
      ICAgICAgICByZXR1cm4KICAgICAgICAgICAgIyBpZiB1c2VyIGhhcyBwcm92aWRlZCBhbnkgb2Yg
      dGhlCiAgICAgICAgICAgICMgJy0tY2VwaGZzLWZpbGVzeXN0ZW0tbmFtZScgb3IgJy0tY2VwaGZz
      LWRhdGEtcG9vbC1uYW1lJyBhcmd1bWVudHMsCiAgICAgICAgICAgICMgcmFpc2UgYW4gZXhjZXB0
      aW9uIGFzIHdlIGFyZSB1bmFibGUgdG8gdmVyaWZ5IHRoZSBhcmdzCiAgICAgICAgICAgIHJhaXNl
      IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oIidmcyBscycgY2VwaCBjYWxsIGZhaWxlZCB3aXRo
      IGVycm9yOiB7fSIuZm9ybWF0KGVycl9tc2cpKQoKICAgICAgICBtYXRjaGluZ19qc29uX291dCA9
      IHt9CiAgICAgICAgIyBpZiAnLS1jZXBoZnMtZmlsZXN5c3RlbS1uYW1lJyBhcmd1bWVudCBpcyBw
      cm92aWRlZCwKICAgICAgICAjIGNoZWNrIHdoZXRoZXIgdGhlIHByb3ZpZGVkIGZpbGVzeXN0ZW0t
      bmFtZSBleGlzdHMgb3Igbm90CiAgICAgICAgaWYgc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZmls
      ZXN5c3RlbV9uYW1lOgogICAgICAgICAgICAjIGdldCB0aGUgbWF0Y2hpbmcgbGlzdAogICAgICAg
      ICAgICBtYXRjaGluZ19qc29uX291dF9saXN0ID0gW21hdGNoZWQgZm9yIG1hdGNoZWQgaW4ganNv
      bl9vdXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBzdHIobWF0Y2hl
      ZFsnbmFtZSddKSA9PSBzZWxmLl9hcmdfcGFyc2VyLmNlcGhmc19maWxlc3lzdGVtX25hbWVdCiAg
      ICAgICAgICAgICMgdW5hYmxlIHRvIGZpbmQgYSBtYXRjaGluZyBmcy1uYW1lLCByYWlzZSBhbiBl
      cnJvcgogICAgICAgICAgICBpZiBsZW4obWF0Y2hpbmdfanNvbl9vdXRfbGlzdCkgPT0gMDoKICAg
      ICAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oCiAgICAgICAgICAg
      ICAgICAgICAgKCJGaWxlc3lzdGVtIHByb3ZpZGVkLCAne30nLCAiICsKICAgICAgICAgICAgICAg
      ICAgICAgImlzIG5vdCBmb3VuZCBpbiB0aGUgZnMtbGlzdDogJ3t9JyIpLmZvcm1hdCgKICAgICAg
      ICAgICAgICAgICAgICAgICAgc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZmlsZXN5c3RlbV9uYW1l
      LAogICAgICAgICAgICAgICAgICAgICAgICBbc3RyKHhbJ25hbWUnXSkgZm9yIHggaW4ganNvbl9v
      dXRdKSkKICAgICAgICAgICAgbWF0Y2hpbmdfanNvbl9vdXQgPSBtYXRjaGluZ19qc29uX291dF9s
      aXN0WzBdCiAgICAgICAgIyBpZiBjZXBoZnMgZmlsZXN5c3RlbSBuYW1lIGlzIG5vdCBwcm92aWRl
      ZCwKICAgICAgICAjIHRyeSB0byBnZXQgYSBkZWZhdWx0IGZzIG5hbWUgYnkgZG9pbmcgdGhlIGZv
      bGxvd2luZwogICAgICAgIGVsc2U6CiAgICAgICAgICAgICMgYS4gY2hlY2sgaWYgdGhlcmUgaXMg
      b25seSBvbmUgZmlsZXN5c3RlbSBpcyBwcmVzZW50CiAgICAgICAgICAgIGlmIGxlbihqc29uX291
      dCkgPT0gMToKICAgICAgICAgICAgICAgIG1hdGNoaW5nX2pzb25fb3V0ID0ganNvbl9vdXRbMF0K
      ICAgICAgICAgICAgIyBiLiBvciBlbHNlLCBjaGVjayBpZiBkYXRhX3Bvb2wgbmFtZSBpcyBwcm92
      aWRlZAogICAgICAgICAgICBlbGlmIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2RhdGFfcG9vbF9u
      YW1lOgogICAgICAgICAgICAgICAgIyBhbmQgaWYgcHJlc2VudCwgY2hlY2sgd2hldGhlciB0aGVy
      ZSBleGlzdHMgYSBmcyB3aGljaCBoYXMgdGhlIGRhdGFfcG9vbAogICAgICAgICAgICAgICAgZm9y
      IGVhY2hKIGluIGpzb25fb3V0OgogICAgICAgICAgICAgICAgICAgIGlmIHNlbGYuX2FyZ19wYXJz
      ZXIuY2VwaGZzX2RhdGFfcG9vbF9uYW1lIGluIGVhY2hKWydkYXRhX3Bvb2xzJ106CiAgICAgICAg
      ICAgICAgICAgICAgICAgIG1hdGNoaW5nX2pzb25fb3V0ID0gZWFjaEoKICAgICAgICAgICAgICAg
      ICAgICAgICAgYnJlYWsKICAgICAgICAgICAgICAgICMgaWYgdGhlcmUgaXMgbm8gbWF0Y2hpbmcg
      ZnMgZXhpc3RzLCB0aGF0IG1lYW5zIHByb3ZpZGVkIGRhdGFfcG9vbCBuYW1lIGlzIGludmFsaWQK
      ICAgICAgICAgICAgICAgIGlmIG5vdCBtYXRjaGluZ19qc29uX291dDoKICAgICAgICAgICAgICAg
      ICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgIlByb3ZpZGVkIGRhdGFfcG9vbCBuYW1lLCB7fSwgZG9lcyBub3QgZXhpc3RzIi5m
      b3JtYXQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5fYXJnX3BhcnNlci5j
      ZXBoZnNfZGF0YV9wb29sX25hbWUpKQogICAgICAgICAgICAjIGMuIGlmIG5vdGhpbmcgaXMgc2V0
      IGFuZCBjb3VsZG4ndCBmaW5kIGEgZGVmYXVsdCwKICAgICAgICAgICAgZWxzZToKICAgICAgICAg
      ICAgICAgICMganVzdCByZXR1cm4gc2lsZW50bHkKICAgICAgICAgICAgICAgIHJldHVybgoKICAg
      ICAgICBpZiBtYXRjaGluZ19qc29uX291dDoKICAgICAgICAgICAgc2VsZi5fYXJnX3BhcnNlci5j
      ZXBoZnNfZmlsZXN5c3RlbV9uYW1lID0gc3RyKG1hdGNoaW5nX2pzb25fb3V0WyduYW1lJ10pCgog
      ICAgICAgIGlmIHR5cGUobWF0Y2hpbmdfanNvbl9vdXRbJ2RhdGFfcG9vbHMnXSkgPT0gbGlzdDoK
      ICAgICAgICAgICAgIyBpZiB0aGUgdXNlciBoYXMgYWxyZWFkeSBwcm92aWRlZCBkYXRhLXBvb2wt
      bmFtZSwKICAgICAgICAgICAgIyB0aHJvdWdoIC0tY2VwaGZzLWRhdGEtcG9vbC1uYW1lCiAgICAg
      ICAgICAgIGlmIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2RhdGFfcG9vbF9uYW1lOgogICAgICAg
      ICAgICAgICAgIyBpZiB0aGUgcHJvdmlkZWQgbmFtZSBpcyBub3QgbWF0Y2hpbmcgd2l0aCB0aGUg
      b25lIGluIHRoZSBsaXN0CiAgICAgICAgICAgICAgICBpZiBzZWxmLl9hcmdfcGFyc2VyLmNlcGhm
      c19kYXRhX3Bvb2xfbmFtZSBub3QgaW4gbWF0Y2hpbmdfanNvbl9vdXRbJ2RhdGFfcG9vbHMnXToK
      ICAgICAgICAgICAgICAgICAgICByYWlzZSBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uKAogICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgInt9OiAne30nLCB7fToge30iLmZvcm1hdCgKICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgICAiUHJvdmlkZWQgZGF0YS1wb29sLW5hbWUiLAogICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2RhdGFf
      cG9vbF9uYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkb2Vzbid0IG1hdGNo
      IGZyb20gdGhlIGRhdGEtcG9vbHMnIGxpc3QiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAg
      ICAgIFtzdHIoeCkgZm9yIHggaW4gbWF0Y2hpbmdfanNvbl9vdXRbJ2RhdGFfcG9vbHMnXV0pKQog
      ICAgICAgICAgICAjIGlmIGRhdGFfcG9vbCBuYW1lIGlzIG5vdCBwcm92aWRlZCwKICAgICAgICAg
      ICAgIyB0aGVuIHRyeSB0byBmaW5kIGEgZGVmYXVsdCBkYXRhIHBvb2wgbmFtZQogICAgICAgICAg
      ICBlbHNlOgogICAgICAgICAgICAgICAgIyBpZiBubyBkYXRhX3Bvb2xzIGV4aXN0LCBzaWxlbnRs
      eSByZXR1cm4KICAgICAgICAgICAgICAgIGlmIGxlbihtYXRjaGluZ19qc29uX291dFsnZGF0YV9w
      b29scyddKSA9PSAwOgogICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAg
      c2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZGF0YV9wb29sX25hbWUgPSBzdHIoCiAgICAgICAgICAg
      ICAgICAgICAgbWF0Y2hpbmdfanNvbl9vdXRbJ2RhdGFfcG9vbHMnXVswXSkKICAgICAgICAgICAg
      IyBpZiB0aGVyZSBhcmUgbW9yZSB0aGFuIG9uZSAnZGF0YV9wb29scycgZXhpc3QsCiAgICAgICAg
      ICAgICMgdGhlbiB3YXJuIHRoZSB1c2VyIHRoYXQgd2UgYXJlIHVzaW5nIHRoZSBzZWxlY3RlZCBu
      YW1lCiAgICAgICAgICAgIGlmIGxlbihtYXRjaGluZ19qc29uX291dFsnZGF0YV9wb29scyddKSA+
      IDE6CiAgICAgICAgICAgICAgICBwcmludCgie306IHt9XG57fTogJ3t9J1xuIi5mb3JtYXQoCiAg
      ICAgICAgICAgICAgICAgICAgIldBUk5JTkc6IE11bHRpcGxlIGRhdGEgcG9vbHMgZGV0ZWN0ZWQi
      LAogICAgICAgICAgICAgICAgICAgIFtzdHIoeCkgZm9yIHggaW4gbWF0Y2hpbmdfanNvbl9vdXRb
      J2RhdGFfcG9vbHMnXV0sCiAgICAgICAgICAgICAgICAgICAgIlVzaW5nIHRoZSBkYXRhLXBvb2wi
      LAogICAgICAgICAgICAgICAgICAgIHNlbGYuX2FyZ19wYXJzZXIuY2VwaGZzX2RhdGFfcG9vbF9u
      YW1lKSkKCiAgICBkZWYgY3JlYXRlX2NlcGhDU0lLZXlyaW5nX1JCRE5vZGUoc2VsZik6CiAgICAg
      ICAgY21kX2pzb24gPSB7InByZWZpeCI6ICJhdXRoIGdldC1vci1jcmVhdGUiLAogICAgICAgICAg
      ICAgICAgICAgICJlbnRpdHkiOiAiY2xpZW50LmNzaS1yYmQtbm9kZSIsCiAgICAgICAgICAgICAg
      ICAgICAgImNhcHMiOiBbIm1vbiIsICJwcm9maWxlIHJiZCIsCiAgICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgIm9zZCIsICJwcm9maWxlIHJiZCJdLAogICAgICAgICAgICAgICAgICAgICJmb3Jt
      YXQiOiAianNvbiJ9CiAgICAgICAgcmV0X3ZhbCwganNvbl9vdXQsIGVycl9tc2cgPSBzZWxmLl9j
      b21tb25fY21kX2pzb25fZ2VuKGNtZF9qc29uKQogICAgICAgICMgaWYgdGhlcmUgaXMgYW4gdW5z
      dWNjZXNzZnVsIGF0dGVtcHQsCiAgICAgICAgaWYgcmV0X3ZhbCAhPSAwIG9yIGxlbihqc29uX291
      dCkgPT0gMDoKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbigKICAg
      ICAgICAgICAgICAgICInYXV0aCBnZXQtb3ItY3JlYXRlIGNsaWVudC5jc2ktcmJkLW5vZGUnIGNv
      bW1hbmQgZmFpbGVkXG4iICsKICAgICAgICAgICAgICAgICJFcnJvcjoge30iLmZvcm1hdChlcnJf
      bXNnIGlmIHJldF92YWwgIT0gMCBlbHNlIHNlbGYuRU1QVFlfT1VUUFVUX0xJU1QpKQogICAgICAg
      IHJldHVybiBzdHIoanNvbl9vdXRbMF1bJ2tleSddKQoKICAgIGRlZiBjcmVhdGVfY2hlY2tlcktl
      eShzZWxmKToKICAgICAgICBjbWRfanNvbiA9IHsicHJlZml4IjogImF1dGggZ2V0LW9yLWNyZWF0
      ZSIsCiAgICAgICAgICAgICAgICAgICAgImVudGl0eSI6IHNlbGYucnVuX2FzX3VzZXIsCiAgICAg
      ICAgICAgICAgICAgICAgImNhcHMiOiBbIm1vbiIsICJhbGxvdyByLCBhbGxvdyBjb21tYW5kIHF1
      b3J1bV9zdGF0dXMsIGFsbG93IGNvbW1hbmQgdmVyc2lvbiIsCiAgICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgIm1nciIsICJhbGxvdyBjb21tYW5kIGNvbmZpZyIsCiAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgIm9zZCIsICgiYWxsb3cgcnd4IHBvb2w9ezB9LnJndy5tZXRhLCAiICsKICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhbGxvdyByIHBvb2w9LnJndy5yb290
      LCAiICsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJhbGxvdyBydyBwb29s
      PXswfS5yZ3cuY29udHJvbCwgIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
      ICAiYWxsb3cgcnggcG9vbD17MH0ucmd3LmxvZywgIiArCiAgICAgICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgICAiYWxsb3cgeCBwb29sPXswfS5yZ3cuYnVja2V0cy5pbmRleCIpLmZvcm1h
      dChzZWxmLl9hcmdfcGFyc2VyLnJnd19wb29sX3ByZWZpeCldLAogICAgICAgICAgICAgICAgICAg
      ICJmb3JtYXQiOiAianNvbiJ9CiAgICAgICAgcmV0X3ZhbCwganNvbl9vdXQsIGVycl9tc2cgPSBz
      ZWxmLl9jb21tb25fY21kX2pzb25fZ2VuKGNtZF9qc29uKQogICAgICAgICMgaWYgdGhlcmUgaXMg
      YW4gdW5zdWNjZXNzZnVsIGF0dGVtcHQsCiAgICAgICAgaWYgcmV0X3ZhbCAhPSAwIG9yIGxlbihq
      c29uX291dCkgPT0gMDoKICAgICAgICAgICAgcmFpc2UgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlv
      bigKICAgICAgICAgICAgICAgICInYXV0aCBnZXQtb3ItY3JlYXRlIHt9JyBjb21tYW5kIGZhaWxl
      ZFxuIi5mb3JtYXQoc2VsZi5ydW5fYXNfdXNlcikgKwogICAgICAgICAgICAgICAgIkVycm9yOiB7
      fSIuZm9ybWF0KGVycl9tc2cgaWYgcmV0X3ZhbCAhPSAwIGVsc2Ugc2VsZi5FTVBUWV9PVVRQVVRf
      TElTVCkpCiAgICAgICAgcmV0dXJuIHN0cihqc29uX291dFswXVsna2V5J10pCgogICAgZGVmIF9n
      ZW5fb3V0cHV0X21hcChzZWxmKToKICAgICAgICBpZiBzZWxmLm91dF9tYXA6CiAgICAgICAgICAg
      IHJldHVybgogICAgICAgIHBvb2xzX3RvX3ZhbGlkYXRlID0gW3NlbGYuX2FyZ19wYXJzZXIucmJk
      X2RhdGFfcG9vbF9uYW1lXQogICAgICAgICMgaWYgcmd3X2VuZHBvaW50IGlzIHByb3ZpZGVkLCB2
      YWxpZGF0ZSBpdAogICAgICAgIGlmIHNlbGYuX2FyZ19wYXJzZXIucmd3X2VuZHBvaW50OgogICAg
      ICAgICAgICBzZWxmLl9pbnZhbGlkX2VuZHBvaW50KHNlbGYuX2FyZ19wYXJzZXIucmd3X2VuZHBv
      aW50KQogICAgICAgICAgICBzZWxmLmVuZHBvaW50X2RpYWwoc2VsZi5fYXJnX3BhcnNlci5yZ3df
      ZW5kcG9pbnQpCiAgICAgICAgICAgIHJnd19wb29sX3RvX3ZhbGlkYXRlID0gWyJ7MH0ucmd3Lm1l
      dGEiLmZvcm1hdChzZWxmLl9hcmdfcGFyc2VyLnJnd19wb29sX3ByZWZpeCksCiAgICAgICAgICAg
      ICAgICAgICAgICAgICAgICAgICAgICAgICIucmd3LnJvb3QiLAogICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICAgICAgICAiezB9LnJndy5jb250cm9sIi5mb3JtYXQoCiAgICAgICAgICAgICAg
      ICBzZWxmLl9hcmdfcGFyc2VyLnJnd19wb29sX3ByZWZpeCksCiAgICAgICAgICAgICAgICAiezB9
      LnJndy5sb2ciLmZvcm1hdCgKICAgICAgICAgICAgICAgIHNlbGYuX2FyZ19wYXJzZXIucmd3X3Bv
      b2xfcHJlZml4KSwKICAgICAgICAgICAgICAgICJ7MH0ucmd3LmJ1Y2tldHMuaW5kZXgiLmZvcm1h
      dChzZWxmLl9hcmdfcGFyc2VyLnJnd19wb29sX3ByZWZpeCldCiAgICAgICAgICAgIHBvb2xzX3Rv
      X3ZhbGlkYXRlLmV4dGVuZChyZ3dfcG9vbF90b192YWxpZGF0ZSkKICAgICAgICBmb3IgcG9vbCBp
      biBwb29sc190b192YWxpZGF0ZToKICAgICAgICAgICAgaWYgbm90IHNlbGYuY2x1c3Rlci5wb29s
      X2V4aXN0cyhwb29sKToKICAgICAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNl
      cHRpb24oCiAgICAgICAgICAgICAgICAgICAgIlRoZSBwcm92aWRlZCBwb29sIHt9IGRvZXMgbm90
      IGV4aXN0Ii5mb3JtYXQocG9vbCkpCiAgICAgICAgc2VsZi5fZXhjbHVkZWRfa2V5cy5hZGQoJ0NM
      VVNURVJfTkFNRScpCiAgICAgICAgc2VsZi5nZXRfY2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxzKCkK
      ICAgICAgICBzZWxmLm91dF9tYXBbJ05BTUVTUEFDRSddID0gc2VsZi5fYXJnX3BhcnNlci5uYW1l
      c3BhY2UKICAgICAgICBzZWxmLm91dF9tYXBbJ0NMVVNURVJfTkFNRSddID0gc2VsZi5fYXJnX3Bh
      cnNlci5jbHVzdGVyX25hbWUKICAgICAgICBzZWxmLm91dF9tYXBbJ1JPT0tfRVhURVJOQUxfRlNJ
      RCddID0gc2VsZi5nZXRfZnNpZCgpCiAgICAgICAgc2VsZi5vdXRfbWFwWydST09LX0VYVEVSTkFM
      X1VTRVJOQU1FJ10gPSBzZWxmLnJ1bl9hc191c2VyCiAgICAgICAgc2VsZi5vdXRfbWFwWydST09L
      X0VYVEVSTkFMX0NFUEhfTU9OX0RBVEEnXSA9IHNlbGYuZ2V0X2NlcGhfZXh0ZXJuYWxfbW9uX2Rh
      dGEoKQogICAgICAgIHNlbGYub3V0X21hcFsnUk9PS19FWFRFUk5BTF9VU0VSX1NFQ1JFVCddID0g
      c2VsZi5jcmVhdGVfY2hlY2tlcktleSgpCiAgICAgICAgc2VsZi5vdXRfbWFwWydDU0lfUkJEX05P
      REVfU0VDUkVUX1NFQ1JFVCddID0gc2VsZi5jcmVhdGVfY2VwaENTSUtleXJpbmdfUkJETm9kZSgp
      CiAgICAgICAgc2VsZi5vdXRfbWFwWydDU0lfUkJEX1BST1ZJU0lPTkVSX1NFQ1JFVCddID0gc2Vs
      Zi5jcmVhdGVfY2VwaENTSUtleXJpbmdfUkJEUHJvdmlzaW9uZXIoKQogICAgICAgIHNlbGYub3V0
      X21hcFsnQ1NJX0NFUEhGU19OT0RFX1NFQ1JFVCddID0gc2VsZi5jcmVhdGVfY2VwaENTSUtleXJp
      bmdfY2VwaEZTTm9kZSgpCiAgICAgICAgc2VsZi5vdXRfbWFwWydDU0lfQ0VQSEZTX1BST1ZJU0lP
      TkVSX1NFQ1JFVCddID0gc2VsZi5jcmVhdGVfY2VwaENTSUtleXJpbmdfY2VwaEZTUHJvdmlzaW9u
      ZXIoKQogICAgICAgIHNlbGYub3V0X21hcFsnUkdXX0VORFBPSU5UJ10gPSBzZWxmLl9hcmdfcGFy
      c2VyLnJnd19lbmRwb2ludAogICAgICAgIHNlbGYub3V0X21hcFsnTU9OSVRPUklOR19FTkRQT0lO
      VCddID0gc2VsZi5nZXRfYWN0aXZlX2NlcGhfbWdyKCkuc3BsaXQoIjoiKVsKICAgICAgICAgICAg
      MF0KICAgICAgICBzZWxmLm91dF9tYXBbJ01PTklUT1JJTkdfRU5EUE9JTlRfUE9SVCddID0gc2Vs
      Zi5nZXRfYWN0aXZlX2NlcGhfbWdyKCkuc3BsaXQoIjoiKVsKICAgICAgICAgICAgMV0KICAgICAg
      ICBzZWxmLm91dF9tYXBbJ0NFUEhGU19QT09MX05BTUUnXSA9IHNlbGYuX2FyZ19wYXJzZXIuY2Vw
      aGZzX2RhdGFfcG9vbF9uYW1lCiAgICAgICAgc2VsZi5vdXRfbWFwWydDRVBIRlNfRlNfTkFNRSdd
      ID0gc2VsZi5fYXJnX3BhcnNlci5jZXBoZnNfZmlsZXN5c3RlbV9uYW1lCiAgICAgICAgc2VsZi5v
      dXRfbWFwWydSQkRfUE9PTF9OQU1FJ10gPSBzZWxmLl9hcmdfcGFyc2VyLnJiZF9kYXRhX3Bvb2xf
      bmFtZQogICAgICAgIHNlbGYub3V0X21hcFsnUkdXX1BPT0xfUFJFRklYJ10gPSBzZWxmLl9hcmdf
      cGFyc2VyLnJnd19wb29sX3ByZWZpeAoKICAgIGRlZiBnZW5fc2hlbGxfb3V0KHNlbGYpOgogICAg
      ICAgIHNlbGYuX2dlbl9vdXRwdXRfbWFwKCkKICAgICAgICBzaE91dElPID0gU3RyaW5nSU8oKQog
      ICAgICAgIGZvciBrLCB2IGluIHNlbGYub3V0X21hcC5pdGVtcygpOgogICAgICAgICAgICBpZiB2
      IGFuZCBrIG5vdCBpbiBzZWxmLl9leGNsdWRlZF9rZXlzOgogICAgICAgICAgICAgICAgc2hPdXRJ
      Ty53cml0ZSgnZXhwb3J0IHt9PXt9e30nLmZvcm1hdChrLCB2LCBMSU5FU0VQKSkKICAgICAgICBz
      aE91dCA9IHNoT3V0SU8uZ2V0dmFsdWUoKQogICAgICAgIHNoT3V0SU8uY2xvc2UoKQogICAgICAg
      IHJldHVybiBzaE91dAoKICAgIGRlZiBnZW5fanNvbl9vdXQoc2VsZik6CiAgICAgICAgc2VsZi5f
      Z2VuX291dHB1dF9tYXAoKQogICAgICAgIGpzb25fb3V0ID0gWwogICAgICAgICAgICB7CiAgICAg
      ICAgICAgICAgICAibmFtZSI6ICJyb29rLWNlcGgtbW9uLWVuZHBvaW50cyIsCiAgICAgICAgICAg
      ICAgICAia2luZCI6ICJDb25maWdNYXAiLAogICAgICAgICAgICAgICAgImRhdGEiOiB7CiAgICAg
      ICAgICAgICAgICAgICAgImRhdGEiOiBzZWxmLm91dF9tYXBbJ1JPT0tfRVhURVJOQUxfQ0VQSF9N
      T05fREFUQSddLAogICAgICAgICAgICAgICAgICAgICJtYXhNb25JZCI6ICIwIiwKICAgICAgICAg
      ICAgICAgICAgICAibWFwcGluZyI6ICJ7fSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAg
      fSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgIm5hbWUiOiAicm9vay1jZXBoLW1vbiIs
      CiAgICAgICAgICAgICAgICAia2luZCI6ICJTZWNyZXQiLAogICAgICAgICAgICAgICAgImRhdGEi
      OiB7CiAgICAgICAgICAgICAgICAgICAgImFkbWluLXNlY3JldCI6ICJhZG1pbi1zZWNyZXQiLAog
      ICAgICAgICAgICAgICAgICAgICJmc2lkIjogc2VsZi5vdXRfbWFwWydST09LX0VYVEVSTkFMX0ZT
      SUQnXSwKICAgICAgICAgICAgICAgICAgICAibW9uLXNlY3JldCI6ICJtb24tc2VjcmV0IgogICAg
      ICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAg
      ICAgIm5hbWUiOiAicm9vay1jZXBoLW9wZXJhdG9yLWNyZWRzIiwKICAgICAgICAgICAgICAgICJr
      aW5kIjogIlNlY3JldCIsCiAgICAgICAgICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgICAg
      ICAgICAidXNlcklEIjogc2VsZi5vdXRfbWFwWydST09LX0VYVEVSTkFMX1VTRVJOQU1FJ10sCiAg
      ICAgICAgICAgICAgICAgICAgInVzZXJLZXkiOiBzZWxmLm91dF9tYXBbJ1JPT0tfRVhURVJOQUxf
      VVNFUl9TRUNSRVQnXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAg
      ICB7CiAgICAgICAgICAgICAgICAibmFtZSI6ICJyb29rLWNzaS1yYmQtbm9kZSIsCiAgICAgICAg
      ICAgICAgICAia2luZCI6ICJTZWNyZXQiLAogICAgICAgICAgICAgICAgImRhdGEiOiB7CiAgICAg
      ICAgICAgICAgICAgICAgInVzZXJJRCI6ICdjc2ktcmJkLW5vZGUnLAogICAgICAgICAgICAgICAg
      ICAgICJ1c2VyS2V5Ijogc2VsZi5vdXRfbWFwWydDU0lfUkJEX05PREVfU0VDUkVUX1NFQ1JFVCdd
      CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAg
      ICAgICAgICJuYW1lIjogInJvb2stY3NpLXJiZC1wcm92aXNpb25lciIsCiAgICAgICAgICAgICAg
      ICAia2luZCI6ICJTZWNyZXQiLAogICAgICAgICAgICAgICAgImRhdGEiOiB7CiAgICAgICAgICAg
      ICAgICAgICAgInVzZXJJRCI6ICdjc2ktcmJkLXByb3Zpc2lvbmVyJywKICAgICAgICAgICAgICAg
      ICAgICAidXNlcktleSI6IHNlbGYub3V0X21hcFsnQ1NJX1JCRF9QUk9WSVNJT05FUl9TRUNSRVQn
      XQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAg
      ICAgICAgICAgIm5hbWUiOiAicm9vay1jc2ktY2VwaGZzLW5vZGUiLAogICAgICAgICAgICAgICAg
      ImtpbmQiOiAiU2VjcmV0IiwKICAgICAgICAgICAgICAgICJkYXRhIjogewogICAgICAgICAgICAg
      ICAgICAgICJhZG1pbklEIjogJ2NzaS1jZXBoZnMtbm9kZScsCiAgICAgICAgICAgICAgICAgICAg
      ImFkbWluS2V5Ijogc2VsZi5vdXRfbWFwWydDU0lfQ0VQSEZTX05PREVfU0VDUkVUJ10KICAgICAg
      ICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAg
      Im5hbWUiOiAicm9vay1jc2ktY2VwaGZzLXByb3Zpc2lvbmVyIiwKICAgICAgICAgICAgICAgICJr
      aW5kIjogIlNlY3JldCIsCiAgICAgICAgICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgICAg
      ICAgICAiYWRtaW5JRCI6ICdjc2ktY2VwaGZzLXByb3Zpc2lvbmVyJywKICAgICAgICAgICAgICAg
      ICAgICAiYWRtaW5LZXkiOiBzZWxmLm91dF9tYXBbJ0NTSV9DRVBIRlNfUFJPVklTSU9ORVJfU0VD
      UkVUJ10KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAg
      ICAgICAgICAgICAgICJuYW1lIjogImNlcGgtcmJkIiwKICAgICAgICAgICAgICAgICJraW5kIjog
      IlN0b3JhZ2VDbGFzcyIsCiAgICAgICAgICAgICAgICAiZGF0YSI6IHsKICAgICAgICAgICAgICAg
      ICAgICAicG9vbCI6IHNlbGYub3V0X21hcFsnUkJEX1BPT0xfTkFNRSddCiAgICAgICAgICAgICAg
      ICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJuYW1lIjog
      Im1vbml0b3JpbmctZW5kcG9pbnQiLAogICAgICAgICAgICAgICAgImtpbmQiOiAiQ2VwaENsdXN0
      ZXIiLAogICAgICAgICAgICAgICAgImRhdGEiOiB7CiAgICAgICAgICAgICAgICAgICAgIk1vbml0
      b3JpbmdFbmRwb2ludCI6IHNlbGYub3V0X21hcFsnTU9OSVRPUklOR19FTkRQT0lOVCddLAogICAg
      ICAgICAgICAgICAgICAgICJNb25pdG9yaW5nUG9ydCI6IHNlbGYub3V0X21hcFsnTU9OSVRPUklO
      R19FTkRQT0lOVF9QT1JUJ10KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAg
      IF0KICAgICAgICAjIGlmICdDRVBIRlNfRlNfTkFNRScgZXhpc3RzLCB0aGVuIG9ubHkgYWRkICdj
      ZXBoZnMnIFN0b3JhZ2VDbGFzcwogICAgICAgIGlmIHNlbGYub3V0X21hcFsnQ0VQSEZTX0ZTX05B
      TUUnXToKICAgICAgICAgICAganNvbl9vdXQuYXBwZW5kKAogICAgICAgICAgICAgICAgICAgIHsK
      ICAgICAgICAgICAgICAgICAgICAgICAgIm5hbWUiOiAiY2VwaGZzIiwKICAgICAgICAgICAgICAg
      ICAgICAgICAgImtpbmQiOiAiU3RvcmFnZUNsYXNzIiwKICAgICAgICAgICAgICAgICAgICAgICAg
      ImRhdGEiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZnNOYW1lIjogc2VsZi5vdXRf
      bWFwWydDRVBIRlNfRlNfTkFNRSddLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInBvb2wi
      OiBzZWxmLm91dF9tYXBbJ0NFUEhGU19QT09MX05BTUUnXQogICAgICAgICAgICAgICAgICAgICAg
      ICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgIyBpZiAnUkdXX0VORFBPSU5UJyBleGlzdHMsIHRo
      ZW4gb25seSBhZGQgJ2NlcGgtcmd3JyBTdG9yYWdlQ2xhc3MKICAgICAgICBpZiBzZWxmLm91dF9t
      YXBbJ1JHV19FTkRQT0lOVCddOgogICAgICAgICAgICBqc29uX291dC5hcHBlbmQoCiAgICAgICAg
      ICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAibmFtZSI6ICJjZXBoLXJndyIs
      CiAgICAgICAgICAgICAgICAgICAgICAgICJraW5kIjogIlN0b3JhZ2VDbGFzcyIsCiAgICAgICAg
      ICAgICAgICAgICAgICAgICJkYXRhIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgImVu
      ZHBvaW50Ijogc2VsZi5vdXRfbWFwWydSR1dfRU5EUE9JTlQnXSwKICAgICAgICAgICAgICAgICAg
      ICAgICAgICAgICJwb29sUHJlZml4Ijogc2VsZi5vdXRfbWFwWydSR1dfUE9PTF9QUkVGSVgnXQog
      ICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgcmV0dXJuIGpz
      b24uZHVtcHMoanNvbl9vdXQpK0xJTkVTRVAKCiAgICBkZWYgbWFpbihzZWxmKToKICAgICAgICBn
      ZW5lcmF0ZWRfb3V0cHV0ID0gJycKICAgICAgICBpZiBzZWxmLl9hcmdfcGFyc2VyLmZvcm1hdCA9
      PSAnanNvbic6CiAgICAgICAgICAgIGdlbmVyYXRlZF9vdXRwdXQgPSBzZWxmLmdlbl9qc29uX291
      dCgpCiAgICAgICAgZWxpZiBzZWxmLl9hcmdfcGFyc2VyLmZvcm1hdCA9PSAnYmFzaCc6CiAgICAg
      ICAgICAgIGdlbmVyYXRlZF9vdXRwdXQgPSBzZWxmLmdlbl9zaGVsbF9vdXQoKQogICAgICAgIGVs
      c2U6CiAgICAgICAgICAgIHJhaXNlIEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24oIlVuc3VwcG9y
      dGVkIGZvcm1hdDoge30iLmZvcm1hdCgKICAgICAgICAgICAgICAgIHNlbGYuX2FyZ19wYXJzZXIu
      Zm9ybWF0KSkKICAgICAgICBwcmludCgne30nLmZvcm1hdChnZW5lcmF0ZWRfb3V0cHV0KSkKICAg
      ICAgICBpZiBzZWxmLm91dHB1dF9maWxlIGFuZCBnZW5lcmF0ZWRfb3V0cHV0OgogICAgICAgICAg
      ICBmT3V0ID0gb3BlbihzZWxmLm91dHB1dF9maWxlLCAndycpCiAgICAgICAgICAgIGZPdXQud3Jp
      dGUoZ2VuZXJhdGVkX291dHB1dCkKICAgICAgICAgICAgZk91dC5jbG9zZSgpCgoKIyMjIyMjIyMj
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMjIyMjIyMjIyMjIyMjIyMj
      IyMjIyBNQUlOICMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIHJq
      T2JqID0gUmFkb3NKU09OKCkKICAgIHRyeToKICAgICAgICByak9iai5tYWluKCkKICAgIGV4Y2Vw
      dCBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uIGFzIGVycjoKICAgICAgICBwcmludCgiRXhjZWN1
      dGlvbiBGYWlsZWQ6IHt9Ii5mb3JtYXQoZXJyKSkKICAgIGV4Y2VwdCBLZXlFcnJvciBhcyBrRXJy
      OgogICAgICAgIHByaW50KCJLZXlFcnJvcjogJXMiLCBrRXJyKQogICAgZXhjZXB0IE9TRXJyb3Ig
      YXMgb3NFcnI6CiAgICAgICAgcHJpbnQoIkVycm9yIHdoaWxlIHRyeWluZyB0byBvdXRwdXQgdGhl
      IGRhdGE6IHt9Ii5mb3JtYXQob3NFcnIpKQogICAgZmluYWxseToKICAgICAgICByak9iai5zaHV0
      ZG93bigpCgoKIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
      CiMjIyMjIyMjIyMjIyMjIyMjIyMjIyBURVNUICMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIyMjIyMj
      IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyB0aGlzIGlzIG1haW5s
      eSBmb3IgdGVzdGluZyBhbmQgY291bGQgYmUgdXNlZCB3aGVyZSAncmFkb3MnIGlzIG5vdCBhdmFp
      bGFibGUKY2xhc3MgRHVtbXlSYWRvcyhvYmplY3QpOgogICAgZGVmIF9faW5pdF9fKHNlbGYpOgog
      ICAgICAgIHNlbGYucmV0dXJuX3ZhbCA9IDAKICAgICAgICBzZWxmLmVycl9tZXNzYWdlID0gJycK
      ICAgICAgICBzZWxmLnN0YXRlID0gJ2Nvbm5lY3RlZCcKICAgICAgICBzZWxmLmNtZF9vdXRwdXRf
      bWFwID0ge30KICAgICAgICBzZWxmLmNtZF9uYW1lcyA9IHt9CiAgICAgICAgc2VsZi5faW5pdF9j
      bWRfb3V0cHV0X21hcCgpCgogICAgZGVmIF9pbml0X2NtZF9vdXRwdXRfbWFwKHNlbGYpOgogICAg
      ICAgIHNlbGYuY21kX25hbWVzWydmcyBscyddID0gJycneyJmb3JtYXQiOiAianNvbiIsICJwcmVm
      aXgiOiAiZnMgbHMifScnJwogICAgICAgIHNlbGYuY21kX25hbWVzWydxdW9ydW1fc3RhdHVzJ10g
      PSAnJyd7ImZvcm1hdCI6ICJqc29uIiwgInByZWZpeCI6ICJxdW9ydW1fc3RhdHVzIn0nJycKICAg
      ICAgICAjIGFsbCB0aGUgY29tbWFuZHMgYW5kIHRoZWlyIG91dHB1dAogICAgICAgIHNlbGYuY21k
      X291dHB1dF9tYXBbc2VsZi5jbWRfbmFtZXNbJ2ZzIGxzJ10KICAgICAgICAgICAgICAgICAgICAg
      ICAgICAgIF0gPSAnJydbeyJuYW1lIjoibXlmcyIsIm1ldGFkYXRhX3Bvb2wiOiJteWZzLW1ldGFk
      YXRhIiwibWV0YWRhdGFfcG9vbF9pZCI6MiwiZGF0YV9wb29sX2lkcyI6WzNdLCJkYXRhX3Bvb2xz
      IjpbIm15ZnMtZGF0YTAiXX1dJycnCiAgICAgICAgc2VsZi5jbWRfb3V0cHV0X21hcFtzZWxmLmNt
      ZF9uYW1lc1sncXVvcnVtX3N0YXR1cyddXSA9ICcnJ3siZWxlY3Rpb25fZXBvY2giOjMsInF1b3J1
      bSI6WzBdLCJxdW9ydW1fbmFtZXMiOlsiYSJdLCJxdW9ydW1fbGVhZGVyX25hbWUiOiJhIiwicXVv
      cnVtX2FnZSI6MTQzODUsImZlYXR1cmVzIjp7InF1b3J1bV9jb24iOiI0NTQwMTM4MjkyODM2Njk2
      MDYzIiwicXVvcnVtX21vbiI6WyJrcmFrZW4iLCJsdW1pbm91cyIsIm1pbWljIiwib3NkbWFwLXBy
      dW5lIiwibmF1dGlsdXMiLCJvY3RvcHVzIl19LCJtb25tYXAiOnsiZXBvY2giOjEsImZzaWQiOiJh
      ZjRlMTY3My0wYjcyLTQwMmQtOTkwYS0yMmQyOTE5ZDBmMWMiLCJtb2RpZmllZCI6IjIwMjAtMDUt
      MDdUMDM6MzY6MzkuOTE4MDM1WiIsImNyZWF0ZWQiOiIyMDIwLTA1LTA3VDAzOjM2OjM5LjkxODAz
      NVoiLCJtaW5fbW9uX3JlbGVhc2UiOjE1LCJtaW5fbW9uX3JlbGVhc2VfbmFtZSI6Im9jdG9wdXMi
      LCJmZWF0dXJlcyI6eyJwZXJzaXN0ZW50IjpbImtyYWtlbiIsImx1bWlub3VzIiwibWltaWMiLCJv
      c2RtYXAtcHJ1bmUiLCJuYXV0aWx1cyIsIm9jdG9wdXMiXSwib3B0aW9uYWwiOltdfSwibW9ucyI6
      W3sicmFuayI6MCwibmFtZSI6ImEiLCJwdWJsaWNfYWRkcnMiOnsiYWRkcnZlYyI6W3sidHlwZSI6
      InYyIiwiYWRkciI6IjEwLjExMC4yMDUuMTc0OjMzMDAiLCJub25jZSI6MH0seyJ0eXBlIjoidjEi
      LCJhZGRyIjoiMTAuMTEwLjIwNS4xNzQ6Njc4OSIsIm5vbmNlIjowfV19LCJhZGRyIjoiMTAuMTEw
      LjIwNS4xNzQ6Njc4OS8wIiwicHVibGljX2FkZHIiOiIxMC4xMTAuMjA1LjE3NDo2Nzg5LzAiLCJw
      cmlvcml0eSI6MCwid2VpZ2h0IjowfV19fScnJwogICAgICAgIHNlbGYuY21kX291dHB1dF9tYXBb
      JycneyJjYXBzIjogWyJtb24iLCAiYWxsb3cgciwgYWxsb3cgY29tbWFuZCBxdW9ydW1fc3RhdHVz
      IiwgIm9zZCIsICJhbGxvdyByd3ggcG9vbD1kZWZhdWx0LnJndy5tZXRhLCBhbGxvdyByIHBvb2w9
      LnJndy5yb290LCBhbGxvdyBydyBwb29sPWRlZmF1bHQucmd3LmNvbnRyb2wsIGFsbG93IHggcG9v
      bD1kZWZhdWx0LnJndy5idWNrZXRzLmluZGV4Il0sICJlbnRpdHkiOiAiY2xpZW50LmhlYWx0aGNo
      ZWNrZXIiLCAiZm9ybWF0IjogImpzb24iLCAicHJlZml4IjogImF1dGggZ2V0LW9yLWNyZWF0ZSJ9
      JycnXSA9ICcnJ1t7ImVudGl0eSI6ImNsaWVudC5oZWFsdGhjaGVja2VyIiwia2V5IjoiQVFERmti
      TmVmdDViRlJBQVRuZExOVVNFS3J1b3p4aVppM2xyZEE9PSIsImNhcHMiOnsibW9uIjoiYWxsb3cg
      ciwgYWxsb3cgY29tbWFuZCBxdW9ydW1fc3RhdHVzIiwib3NkIjoiYWxsb3cgcnd4IHBvb2w9ZGVm
      YXVsdC5yZ3cubWV0YSwgYWxsb3cgciBwb29sPS5yZ3cucm9vdCwgYWxsb3cgcncgcG9vbD1kZWZh
      dWx0LnJndy5jb250cm9sLCBhbGxvdyB4IHBvb2w9ZGVmYXVsdC5yZ3cuYnVja2V0cy5pbmRleCJ9
      fV0nJycKICAgICAgICBzZWxmLmNtZF9vdXRwdXRfbWFwWycnJ3siY2FwcyI6IFsibW9uIiwgInBy
      b2ZpbGUgcmJkIiwgIm9zZCIsICJwcm9maWxlIHJiZCJdLCAiZW50aXR5IjogImNsaWVudC5jc2kt
      cmJkLW5vZGUiLCAiZm9ybWF0IjogImpzb24iLCAicHJlZml4IjogImF1dGggZ2V0LW9yLWNyZWF0
      ZSJ9JycnXSA9ICcnJ1t7ImVudGl0eSI6ImNsaWVudC5jc2ktcmJkLW5vZGUiLCJrZXkiOiJBUUJP
      Z3JOZUhiSzFBeEFBdWJZQmVWOFMxVS9HUHpxNVNWZXE2Zz09IiwiY2FwcyI6eyJtb24iOiJwcm9m
      aWxlIHJiZCIsIm9zZCI6InByb2ZpbGUgcmJkIn19XScnJwogICAgICAgIHNlbGYuY21kX291dHB1
      dF9tYXBbJycneyJjYXBzIjogWyJtb24iLCAicHJvZmlsZSByYmQiLCAibWdyIiwgImFsbG93IHJ3
      IiwgIm9zZCIsICJwcm9maWxlIHJiZCJdLCAiZW50aXR5IjogImNsaWVudC5jc2ktcmJkLXByb3Zp
      c2lvbmVyIiwgImZvcm1hdCI6ICJqc29uIiwgInByZWZpeCI6ICJhdXRoIGdldC1vci1jcmVhdGUi
      fScnJ10gPSAnJydbeyJlbnRpdHkiOiJjbGllbnQuY3NpLXJiZC1wcm92aXNpb25lciIsImtleSI6
      IkFRQk5nck5lMWdleUt4QUE4ZWtWaVJkRStoc3M1T3dlWUJrd05nPT0iLCJjYXBzIjp7Im1nciI6
      ImFsbG93IHJ3IiwibW9uIjoicHJvZmlsZSByYmQiLCJvc2QiOiJwcm9maWxlIHJiZCJ9fV0nJycK
      ICAgICAgICBzZWxmLmNtZF9vdXRwdXRfbWFwWycnJ3siY2FwcyI6IFsibW9uIiwgImFsbG93IHIi
      LCAibWdyIiwgImFsbG93IHJ3IiwgIm9zZCIsICJhbGxvdyBydyB0YWcgY2VwaGZzICo9KiIsICJt
      ZHMiLCAiYWxsb3cgcnciXSwgImVudGl0eSI6ICJjbGllbnQuY3NpLWNlcGhmcy1ub2RlIiwgImZv
      cm1hdCI6ICJqc29uIiwgInByZWZpeCI6ICJhdXRoIGdldC1vci1jcmVhdGUifScnJ10gPSAnJydb
      eyJlbnRpdHkiOiJjbGllbnQuY3NpLWNlcGhmcy1ub2RlIiwia2V5IjoiQVFCT2dyTmVFTnVuS3hB
      QVBDbWdFN1I2RzhEY1huYUoxRjMycWc9PSIsImNhcHMiOnsibWRzIjoiYWxsb3cgcnciLCJtZ3Ii
      OiJhbGxvdyBydyIsIm1vbiI6ImFsbG93IHIiLCJvc2QiOiJhbGxvdyBydyB0YWcgY2VwaGZzICo9
      KiJ9fV0nJycKICAgICAgICBzZWxmLmNtZF9vdXRwdXRfbWFwWycnJ3siY2FwcyI6IFsibW9uIiwg
      ImFsbG93IHIiLCAibWdyIiwgImFsbG93IHJ3IiwgIm9zZCIsICJhbGxvdyBydyB0YWcgY2VwaGZz
      IG1ldGFkYXRhPSoiXSwgImVudGl0eSI6ICJjbGllbnQuY3NpLWNlcGhmcy1wcm92aXNpb25lciIs
      ICJmb3JtYXQiOiAianNvbiIsICJwcmVmaXgiOiAiYXV0aCBnZXQtb3ItY3JlYXRlIn0nJyddID0g
      JycnW3siZW50aXR5IjoiY2xpZW50LmNzaS1jZXBoZnMtcHJvdmlzaW9uZXIiLCJrZXkiOiJBUUJP
      Z3JOZUFGZ2NHQkFBdkdxS09BRDBEM3h4bVZZMFI5MTJkZz09IiwiY2FwcyI6eyJtZ3IiOiJhbGxv
      dyBydyIsIm1vbiI6ImFsbG93IHIiLCJvc2QiOiJhbGxvdyBydyB0YWcgY2VwaGZzIG1ldGFkYXRh
      PSoifX1dJycnCgogICAgZGVmIHNodXRkb3duKHNlbGYpOgogICAgICAgIHBhc3MKCiAgICBkZWYg
      Z2V0X2ZzaWQoc2VsZik6CiAgICAgICAgcmV0dXJuICdhZjRlMTY3My0wYjcyLTQwMmQtOTkwYS0y
      MmQyOTE5ZDBmMWMnCgogICAgZGVmIGNvbmZfcmVhZF9maWxlKHNlbGYpOgogICAgICAgIHBhc3MK
      CiAgICBkZWYgY29ubmVjdChzZWxmKToKICAgICAgICBwYXNzCgogICAgZGVmIG1vbl9jb21tYW5k
      KHNlbGYsIGNtZCwgb3V0KToKICAgICAgICBqc29uX2NtZCA9IGpzb24ubG9hZHMoY21kKQogICAg
      ICAgIGpzb25fY21kX3N0ciA9IGpzb24uZHVtcHMoanNvbl9jbWQsIHNvcnRfa2V5cz1UcnVlKQog
      ICAgICAgIGNtZF9vdXRwdXQgPSBzZWxmLmNtZF9vdXRwdXRfbWFwW2pzb25fY21kX3N0cl0KICAg
      ICAgICByZXR1cm4gc2VsZi5yZXR1cm5fdmFsLCBcCiAgICAgICAgICAgIGNtZF9vdXRwdXQsIFwK
      ICAgICAgICAgICAgInt9Ii5mb3JtYXQoc2VsZi5lcnJfbWVzc2FnZSkuZW5jb2RlKCd1dGYtOCcp
      CgogICAgQGNsYXNzbWV0aG9kCiAgICBkZWYgUmFkb3MoY29uZmZpbGU9Tm9uZSk6CiAgICAgICAg
      cmV0dXJuIER1bW15UmFkb3MoKQoKCiMgaW5vcmRlciB0byB0ZXN0IHRoZSBwYWNrYWdlLAojIGNk
      IDxzY3JpcHRfZGlyZWN0b3J5PgojIHB5dGhvbiAtbSB1bml0dGVzdCAtLXZlcmJvc2UgPHNjcmlw
      dF9uYW1lX3dpdGhvdXRfZG90X3B5PgpjbGFzcyBUZXN0UmFkb3NKU09OKHVuaXR0ZXN0LlRlc3RD
      YXNlKToKICAgIGRlZiBzZXRVcChzZWxmKToKICAgICAgICBwcmludCgie30iLmZvcm1hdCgiSSBh
      bSBpbiBzZXR1cCIpKQogICAgICAgIHNlbGYucmpPYmogPSBSYWRvc0pTT04oWyctLXJiZC1kYXRh
      LXBvb2wtbmFtZT1hYmMnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICctLXJndy1l
      bmRwb2ludD0xMC4xMC4yMTIuMTIyOjkwMDAnLCAnLS1mb3JtYXQ9anNvbiddKQogICAgICAgICMg
      Zm9yIHRlc3RpbmcsIHdlIGFyZSB1c2luZyAnRHVtbXlSYWRvcycgb2JqZWN0CiAgICAgICAgc2Vs
      Zi5yak9iai5jbHVzdGVyID0gRHVtbXlSYWRvcy5SYWRvcygpCgogICAgZGVmIHRlYXJEb3duKHNl
      bGYpOgogICAgICAgIHByaW50KCJ7fSIuZm9ybWF0KCJJIGFtIHRlYXJpbmcgZG93biB0aGUgc2V0
      dXAiKSkKICAgICAgICBzZWxmLnJqT2JqLnNodXRkb3duKCkKCiAgICBkZWYgdGVzdF9tZXRob2Rf
      bWFpbl9vdXRwdXQoc2VsZik6CiAgICAgICAgcHJpbnQoIkpTT04gT3V0cHV0IikKICAgICAgICBz
      ZWxmLnJqT2JqLl9hcmdfcGFyc2VyLmZvcm1hdCA9ICJqc29uIgogICAgICAgIHNlbGYucmpPYmou
      bWFpbigpCiAgICAgICAgcHJpbnQoIlxuXG5TaGVsbCBPdXRwdXQiKQogICAgICAgIHNlbGYucmpP
      YmouX2FyZ19wYXJzZXIuZm9ybWF0ID0gImJhc2giCiAgICAgICAgc2VsZi5yak9iai5tYWluKCkK
      ICAgICAgICBwcmludCgiXG5cbk5vbiBjb21wYXRpYmxlIG91dHB1dCAoLS1hYmNkKSIpCiAgICAg
      ICAgdHJ5OgogICAgICAgICAgICBzZWxmLnJqT2JqLl9hcmdfcGFyc2VyLmZvcm1hdCA9ICdhYmNk
      JwogICAgICAgICAgICBzZWxmLnJqT2JqLm1haW4oKQogICAgICAgICAgICBzZWxmLmZhaWwoIkZ1
      bmN0aW9uIHNob3VsZCBoYXZlIHRocm93biBhbiBFeGNlcHRpb24iKQogICAgICAgIGV4Y2VwdCBF
      eGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uIGFzIGVycjoKICAgICAgICAgICAgcHJpbnQoIkV4Y2Vw
      dGlvbiB0aHJvd24gc3VjY2Vzc2Z1bGx5OiB7fSIuZm9ybWF0KGVycikpCgogICAgZGVmIHRlc3Rf
      bWV0aG9kX2NyZWF0ZV9jZXBoQ1NJS2V5cmluZ19jZXBoRlNQcm92aXNpb25lcihzZWxmKToKICAg
      ICAgICBjc2lLZXlyaW5nID0gc2VsZi5yak9iai5jcmVhdGVfY2VwaENTSUtleXJpbmdfY2VwaEZT
      UHJvdmlzaW9uZXIoKQogICAgICAgIHByaW50KCJ7fSIuZm9ybWF0KGNzaUtleXJpbmcpKQoKICAg
      IGRlZiB0ZXN0X25vbl96ZXJvX3JldHVybl9hbmRfZXJyb3Ioc2VsZik6CiAgICAgICAgc2VsZi5y
      ak9iai5jbHVzdGVyLnJldHVybl92YWwgPSAxCiAgICAgICAgc2VsZi5yak9iai5jbHVzdGVyLmVy
      cl9tZXNzYWdlID0gIkR1bW15IEVycm9yIgogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5y
      ak9iai5jcmVhdGVfY2hlY2tlcktleSgpCiAgICAgICAgICAgIHNlbGYuZmFpbCgiRmFpbGVkIHRv
      IHJhaXNlIGFuIGV4Y2VwdGlvbiwgJ0V4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24nIikKICAgICAg
      ICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAgICAgIHBy
      aW50KCJTdWNjZXNzZnVsbHkgdGhyb3duIGVycm9yLlxuRXJyb3I6IHt9Ii5mb3JtYXQoZXJyKSkK
      CiAgICBkZWYgdGVzdF9tdWx0aV9maWxlc3lzdGVtX3NjZW5hcmlvKHNlbGYpOgogICAgICAgIGNt
      ZF9rZXkgPSBzZWxmLnJqT2JqLmNsdXN0ZXIuY21kX25hbWVzWydmcyBscyddCiAgICAgICAgY21k
      X291dCA9IHNlbGYucmpPYmouY2x1c3Rlci5jbWRfb3V0cHV0X21hcFtjbWRfa2V5XQogICAgICAg
      IGNtZF9qc29uX291dCA9IGpzb24ubG9hZHMoY21kX291dCkKICAgICAgICBzZWNvbmRfZnNfZGV0
      YWlscyA9IGRpY3QoY21kX2pzb25fb3V0WzBdKQogICAgICAgIHNlY29uZF9mc19kZXRhaWxzWydu
      YW1lJ10gKz0gJy0yJwogICAgICAgIGNtZF9qc29uX291dC5hcHBlbmQoc2Vjb25kX2ZzX2RldGFp
      bHMpCiAgICAgICAgc2VsZi5yak9iai5jbHVzdGVyLmNtZF9vdXRwdXRfbWFwW2NtZF9rZXldID0g
      anNvbi5kdW1wcyhjbWRfanNvbl9vdXQpCiAgICAgICAgIyBtdWx0aXBsZSBmaWxlc3lzdGVtIHBy
      ZXNlbnQsCiAgICAgICAgIyBidXQgbm8gc3BlY2lmaWMgJy0tY2VwaGZzLWZpbGVzeXN0ZW0tbmFt
      ZScgYXJndW1lbnQgcHJvdmlkZWQKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYucmpPYmou
      Z2V0X2NlcGhmc19kYXRhX3Bvb2xfZGV0YWlscygpCiAgICAgICAgICAgIHNlbGYuZmFpbCgiQW4g
      RXhjZXB0aW9uIHdhcyBleHBlY3RlZCB0byBiZSB0aHJvd24iKQogICAgICAgIGV4Y2VwdCBFeGVj
      dXRpb25GYWlsdXJlRXhjZXB0aW9uIGFzIGVycjoKICAgICAgICAgICAgcHJpbnQoIlN1Y2Nlc3Nm
      dWxseSB0aHJvd24gZXJyb3I6IHt9Ii5mb3JtYXQoZXJyKSkKICAgICAgICAjIHBhc3MgYW4gZXhp
      c3RpbmcgZmlsZXN5c3RlbSBuYW1lCiAgICAgICAgdHJ5OgogICAgICAgICAgICBzZWxmLnJqT2Jq
      Ll9hcmdfcGFyc2VyLmNlcGhmc19maWxlc3lzdGVtX25hbWUgPSBzZWNvbmRfZnNfZGV0YWlsc1sn
      bmFtZSddCiAgICAgICAgICAgIHNlbGYucmpPYmouZ2V0X2NlcGhmc19kYXRhX3Bvb2xfZGV0YWls
      cygpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24gYXMgZXJyOgogICAg
      ICAgICAgICBzZWxmLmZhaWwoIlNob3VsZCBub3QgaGF2ZSB0aHJvd24gZXJyb3I6IHt9Ii5mb3Jt
      YXQoZXJyKSkKICAgICAgICAjIHBhc3MgYSBub24tZXhpc3RpbmcgZmlsZXN5c3RlbSBuYW1lCiAg
      ICAgICAgdHJ5OgogICAgICAgICAgICBzZWxmLnJqT2JqLl9hcmdfcGFyc2VyLmNlcGhmc19maWxl
      c3lzdGVtX25hbWUgKz0gIi1ub24tZXhpc3RpbmctZnMtbmFtZSIKICAgICAgICAgICAgc2VsZi5y
      ak9iai5nZXRfY2VwaGZzX2RhdGFfcG9vbF9kZXRhaWxzKCkKICAgICAgICAgICAgc2VsZi5mYWls
      KCJBbiBFeGNlcHRpb24gd2FzIGV4cGVjdGVkIHRvIGJlIHRocm93biIpCiAgICAgICAgZXhjZXB0
      IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24gYXMgZXJyOgogICAgICAgICAgICBwcmludCgiU3Vj
      Y2Vzc2Z1bGx5IHRocm93biBlcnJvcjoge30iLmZvcm1hdChlcnIpKQogICAgICAgICMgZW1wdHkg
      ZmlsZS1zeXN0ZW0gYXJyYXkKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYucmpPYmouY2x1
      c3Rlci5jbWRfb3V0cHV0X21hcFtjbWRfa2V5XSA9IGpzb24uZHVtcHMoW10pCiAgICAgICAgICAg
      IHNlbGYucmpPYmouZ2V0X2NlcGhmc19kYXRhX3Bvb2xfZGV0YWlscygpCiAgICAgICAgICAgIHNl
      bGYuZmFpbCgiQW4gRXhjZXB0aW9uIHdhcyBleHBlY3RlZCB0byBiZSB0aHJvd24iKQogICAgICAg
      IGV4Y2VwdCBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uIGFzIGVycjoKICAgICAgICAgICAgcHJp
      bnQoIlN1Y2Nlc3NmdWxseSB0aHJvd24gZXJyb3I6IHt9Ii5mb3JtYXQoZXJyKSkKCiAgICBkZWYg
      dGVzdF9tdWx0aV9kYXRhX3Bvb2xfc2NlbmFyaW8oc2VsZik6CiAgICAgICAgY21kX2tleSA9IHNl
      bGYucmpPYmouY2x1c3Rlci5jbWRfbmFtZXNbJ2ZzIGxzJ10KICAgICAgICBjbWRfb3V0ID0gc2Vs
      Zi5yak9iai5jbHVzdGVyLmNtZF9vdXRwdXRfbWFwW2NtZF9rZXldCiAgICAgICAgY21kX2pzb25f
      b3V0ID0ganNvbi5sb2FkcyhjbWRfb3V0KQogICAgICAgIGZpcnN0X2ZzX2RldGFpbHMgPSBjbWRf
      anNvbl9vdXRbMF0KICAgICAgICBuZXdfZGF0YV9wb29sX25hbWUgPSAnbXlmcy1kYXRhMScKICAg
      ICAgICBmaXJzdF9mc19kZXRhaWxzWydkYXRhX3Bvb2xzJ10uYXBwZW5kKG5ld19kYXRhX3Bvb2xf
      bmFtZSkKICAgICAgICBwcmludCgiTW9kaWZpZWQgSlNPTiBDbWQgT3V0OiB7fSIuZm9ybWF0KGNt
      ZF9qc29uX291dCkpCiAgICAgICAgc2VsZi5yak9iai5fYXJnX3BhcnNlci5jZXBoZnNfZGF0YV9w
      b29sX25hbWUgPSBuZXdfZGF0YV9wb29sX25hbWUKICAgICAgICBzZWxmLnJqT2JqLmNsdXN0ZXIu
      Y21kX291dHB1dF9tYXBbY21kX2tleV0gPSBqc29uLmR1bXBzKGNtZF9qc29uX291dCkKICAgICAg
      ICBzZWxmLnJqT2JqLmdldF9jZXBoZnNfZGF0YV9wb29sX2RldGFpbHMoKQogICAgICAgICMgdXNl
      IGEgbm9uLWV4aXN0aW5nIGRhdGEtcG9vbC1uYW1lCiAgICAgICAgYmFkX2RhdGFfcG9vbF9uYW1l
      ID0gJ215ZnMtZGF0YTMnCiAgICAgICAgc2VsZi5yak9iai5fYXJnX3BhcnNlci5jZXBoZnNfZGF0
      YV9wb29sX25hbWUgPSBiYWRfZGF0YV9wb29sX25hbWUKICAgICAgICB0cnk6CiAgICAgICAgICAg
      IHNlbGYucmpPYmouZ2V0X2NlcGhmc19kYXRhX3Bvb2xfZGV0YWlscygpCiAgICAgICAgICAgIHNl
      bGYuZmFpbCgiQW4gRXhjZXB0aW9uIHdhcyBleHBlY3RlZCB0byBiZSB0aHJvd24iKQogICAgICAg
      IGV4Y2VwdCBFeGVjdXRpb25GYWlsdXJlRXhjZXB0aW9uIGFzIGVycjoKICAgICAgICAgICAgcHJp
      bnQoIlN1Y2Nlc3NmdWxseSB0aHJvd24gZXJyb3I6IHt9Ii5mb3JtYXQoZXJyKSkKICAgICAgICAj
      IGVtcHR5IGRhdGEtcG9vbCBzY2VuYXJpbwogICAgICAgIGZpcnN0X2ZzX2RldGFpbHNbJ2RhdGFf
      cG9vbHMnXSA9IFtdCiAgICAgICAgc2VsZi5yak9iai5jbHVzdGVyLmNtZF9vdXRwdXRfbWFwW2Nt
      ZF9rZXldID0ganNvbi5kdW1wcyhjbWRfanNvbl9vdXQpCiAgICAgICAgdHJ5OgogICAgICAgICAg
      ICBzZWxmLnJqT2JqLmdldF9jZXBoZnNfZGF0YV9wb29sX2RldGFpbHMoKQogICAgICAgICAgICBz
      ZWxmLmZhaWwoIkFuIEV4Y2VwdGlvbiB3YXMgZXhwZWN0ZWQgdG8gYmUgdGhyb3duIikKICAgICAg
      ICBleGNlcHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAgICAgIHBy
      aW50KCJTdWNjZXNzZnVsbHkgdGhyb3duIGVycm9yOiB7fSIuZm9ybWF0KGVycikpCgogICAgZGVm
      IHRlc3RfdmFsaWRfcmd3X2VuZHBvaW50KHNlbGYpOgogICAgICAgIHNlbGYucmpPYmouX2ludmFs
      aWRfZW5kcG9pbnQoIjEwLjEwLjIxMi4xMzM6ODAwMCIpCiAgICAgICAgIyBpbnZhbGlkIHBvcnQK
      ICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYucmpPYmouX2ludmFsaWRfZW5kcG9pbnQoIjEw
      LjEwLjIxMi4xMzM6MjM4MDAwIikKICAgICAgICAgICAgc2VsZi5mYWlsKCJBbiBFeGNlcHRpb24g
      d2FzIGV4cGVjdGVkIHRvIGJlIHRocm93biIpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1
      cmVFeGNlcHRpb24gYXMgZXJyOgogICAgICAgICAgICBwcmludCgiU3VjY2Vzc2Z1bGx5IHRocm93
      biBlcnJvcjoge30iLmZvcm1hdChlcnIpKQogICAgICAgICMgb3V0IG9mIHJhbmdlIElQCiAgICAg
      ICAgdHJ5OgogICAgICAgICAgICBzZWxmLnJqT2JqLl9pbnZhbGlkX2VuZHBvaW50KCIxMC4xMDMz
      LjIxMi4xMzM6ODAwMCIpCiAgICAgICAgICAgIHNlbGYuZmFpbCgiQW4gRXhjZXB0aW9uIHdhcyBl
      eHBlY3RlZCB0byBiZSB0aHJvd24iKQogICAgICAgIGV4Y2VwdCBFeGVjdXRpb25GYWlsdXJlRXhj
      ZXB0aW9uIGFzIGVycjoKICAgICAgICAgICAgcHJpbnQoIlN1Y2Nlc3NmdWxseSB0aHJvd24gZXJy
      b3I6IHt9Ii5mb3JtYXQoZXJyKSkKICAgICAgICAjIG1hbCBmb3JtYXR0ZWQgSVAKICAgICAgICB0
      cnk6CiAgICAgICAgICAgIHNlbGYucmpPYmouX2ludmFsaWRfZW5kcG9pbnQoIjEwLjEwMy4uMjEy
      LjEzMzo4MDAwIikKICAgICAgICAgICAgc2VsZi5mYWlsKCJBbiBFeGNlcHRpb24gd2FzIGV4cGVj
      dGVkIHRvIGJlIHRocm93biIpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRp
      b24gYXMgZXJyOgogICAgICAgICAgICBwcmludCgiU3VjY2Vzc2Z1bGx5IHRocm93biBlcnJvcjog
      e30iLmZvcm1hdChlcnIpKQogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5yak9iai5faW52
      YWxpZF9lbmRwb2ludCgiMTAuMTAzLjIxMi4xMzM6OjgwMDAiKQogICAgICAgICAgICBzZWxmLmZh
      aWwoIkFuIEV4Y2VwdGlvbiB3YXMgZXhwZWN0ZWQgdG8gYmUgdGhyb3duIikKICAgICAgICBleGNl
      cHQgRXhlY3V0aW9uRmFpbHVyZUV4Y2VwdGlvbiBhcyBlcnI6CiAgICAgICAgICAgIHByaW50KCJT
      dWNjZXNzZnVsbHkgdGhyb3duIGVycm9yOiB7fSIuZm9ybWF0KGVycikpCiAgICAgICAgdHJ5Ogog
      ICAgICAgICAgICBzZWxmLnJqT2JqLl9pbnZhbGlkX2VuZHBvaW50KCIxMC4xMC4xMDMuMjEyLjEz
      Mzo4MDAwIikKICAgICAgICAgICAgc2VsZi5mYWlsKCJBbiBFeGNlcHRpb24gd2FzIGV4cGVjdGVk
      IHRvIGJlIHRocm93biIpCiAgICAgICAgZXhjZXB0IEV4ZWN1dGlvbkZhaWx1cmVFeGNlcHRpb24g
      YXMgZXJyOgogICAgICAgICAgICBwcmludCgiU3VjY2Vzc2Z1bGx5IHRocm93biBlcnJvcjoge30i
      LmZvcm1hdChlcnIpKQo=
    external.features.ocs.openshift.io/validation: '{"secrets":["rook-ceph-operator-creds",
      "rook-csi-rbd-node", "rook-csi-rbd-provisioner", "rook-csi-cephfs-node", "rook-csi-cephfs-provisioner"],
      "configMaps": ["rook-ceph-mon-endpoints", "rook-ceph-mon"], "storageClasses":
      ["ceph-rbd"]}'
    features.ocs.openshift.io/enabled: '["external"]'
    olm.skipRange: '>=0.0.1 <4.6.0'
    operatorframework.io/cluster-monitoring: "true"
    operatorframework.io/suggested-namespace: openshift-storage
    operators.operatorframework.io/internal-objects: '["cephclusters.ceph.rook.io",
      "cephblockpools.ceph.rook.io", "cephobjectstores.ceph.rook.io", "cephobjectstoreusers.ceph.rook.io",
      "cephnfses.ceph.rook.io","cephclients.ceph.rook.io", "noobaas.noobaa.io", "objectbuckets.objectbucket.io","objectbucketclaims.objectbucket.io","ocsinitializations.ocs.openshift.io",
      "storageclusterinitializations.ocs.openshift.io", "cephfilesystems.ceph.rook.io"]'
    repository: https://github.com/openshift/ocs-operator
    support: Red Hat
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.ppc64le: supported
    operatorframework.io/arch.s390x: supported
  name: ocs-operator.v4.6.0
  namespace: placeholder
  labels:
    "operatorframework.io/arch.amd64": supported
    "operatorframework.io/arch.ppc64le": supported
    "operatorframework.io/arch.s390x": supported
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: OCS Initialization represents the initial data to be created when
        the OCS operator is installed.
      displayName: OCS Initialization
      kind: OCSInitialization
      name: ocsinitializations.ocs.openshift.io
      version: v1
    - description: StorageCluster Initialization represents a set of tasks the OCS
        operator wants to implement for every StorageCluster it encounters.
      displayName: StorageCluster Initialization
      kind: StorageClusterInitialization
      name: storageclusterinitializations.ocs.openshift.io
      version: v1
    - description: Storage Cluster represents a OpenShift Container Storage Cluster
        including Ceph Cluster, NooBaa and all the storage and compute resources required.
      displayName: Storage Cluster
      kind: StorageCluster
      name: storageclusters.ocs.openshift.io
      resources:
      - kind: CephCluster
        name: cephclusters.ceph.rook.io
        version: v1
      - kind: NooBaa
        name: noobaas.noobaa.io
        version: v1alpha1
      version: v1
    - description: Represents a Ceph cluster.
      displayName: Ceph Cluster
      kind: CephCluster
      name: cephclusters.ceph.rook.io
      version: v1
    - description: Represents a Ceph Block Pool.
      displayName: Ceph Block Pool
      kind: CephBlockPool
      name: cephblockpools.ceph.rook.io
      version: v1
    - description: Represents a Ceph Object Store.
      displayName: Ceph Object Store
      kind: CephObjectStore
      name: cephobjectstores.ceph.rook.io
      specDescriptors:
      - description: Coding Chunks
        displayName: Coding Chunks
        path: dataPool.erasureCoded.codingChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Data Chunks
        displayName: Data Chunks
        path: dataPool.erasureCoded.dataChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: failureDomain
        displayName: failureDomain
        path: dataPool.failureDomain
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Size
        displayName: Size
        path: dataPool.replicated.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:dataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Annotations
        displayName: Annotations
        path: gateway.annotations
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:annotations
      - description: Instances
        displayName: Instances
        path: gateway.instances
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Resources
        displayName: Resources
        path: gateway.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: placement
        displayName: placement
        path: gateway.placement
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:placement
      - description: securePort
        displayName: securePort
        path: gateway.securePort
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:securePort
      - description: sslCertificateRef
        displayName: sslCertificateRef
        path: gateway.sslCertificateRef
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:io.kubernetes:sslCertificateRef
      - description: Type
        displayName: Type
        path: gateway.type
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:gateway
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Coding Chunks
        displayName: Coding Chunks
        path: metadataPool.erasureCoded.codingChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: Data Chunks
        displayName: Data Chunks
        path: metadataPool.erasureCoded.dataChunks
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: failureDomain
        displayName: failureDomain
        path: metadataPool.failureDomain
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Size
        displayName: Size
        path: metadataPool.replicated.size
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:metadataPool
        - urn:alm:descriptor:com.tectonic.ui:number
      version: v1
    - description: Represents a Ceph Object Store User.
      displayName: Ceph Object Store User
      kind: CephObjectStoreUser
      name: cephobjectstoreusers.ceph.rook.io
      version: v1
    - description: Represents a cluster of Ceph NFS ganesha gateways.
      displayName: Ceph NFS
      kind: CephNFS
      name: cephnfses.ceph.rook.io
      version: v1
    - description: Represents a Ceph User.
      displayName: Ceph Client
      kind: CephClient
      name: cephclients.ceph.rook.io
      version: v1
    - description: Represents a Ceph Filesystem.
      displayName: Ceph Filesystem
      kind: CephFilesystem
      name: cephfilesystems.ceph.rook.io
      version: v1
    - description: Represents a Ceph RBD Mirror.
      displayName: Ceph RBD Mirror
      kind: CephRBDMirror
      name: cephrbdmirrors.ceph.rook.io
      version: v1
    - description: A NooBaa system - Create this to start
      displayName: NooBaa
      kind: NooBaa
      name: noobaas.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: DBImage (optional) overrides the default image for the db container.
        displayName: DB Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Image (optional) overrides the default image for the server container.
        displayName: Image
        path: dbImage
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: CoreResources (optional) overrides the default resource requirements
          for the server container.
        displayName: Core Resources
        path: coreResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: DBResources (optional) overrides the default resource requirements
          for the db container.
        displayName: DB Resources
        path: dbResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: 'DBVolumeResources (optional) overrides the default PVC resource
          requirements for the database volume. For the time being this field is immutable
          and can only be set on system creation. This is because volume size updates
          are only supported for increasing the size, and only if the storage class
          specifies `allowVolumeExpansion: true`, +immutable.'
        displayName: Image
        path: dbVolumeResources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: DBStorageClass (optional) overrides the default cluster StorageClass
          for the database volume. For the time being this field is immutable and
          can only be set on system creation. This affects where the system stores
          its database which contains system config, buckets, objects meta-data and
          mapping file parts to storage locations. +immutable.
        displayName: DB StorageClass
        path: dbStorageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: PVPoolDefaultStorageClass (optional) overrides the default cluster
          StorageClass for the pv-pool volumes. This affects where the system stores
          data chunks (encrypted). Updates to this field will only affect new pv-pools,
          but updates to existing pools are not supported by the operator.
        displayName: PV Pool DefaultStorageClass
        path: pvPoolDefaultStorageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: ImagePullSecret (optional) sets a pull secret for the system
          image.
        displayName: Image Pull Secret
        path: imagePullSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      version: v1alpha1
    - description: Storage target spec such as aws-s3, s3-compatible, ibm-cos, PV's
        and more. Used in BacketClass to construct data placement policies.
      displayName: Backing Store
      kind: BackingStore
      name: backingstores.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: Region is the AWS region.
        displayName: Region
        path: awsS3.region
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The
          secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: awsS3.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SSLDisabled allows to disable SSL and use plain http.
        displayName: SSL Disabled
        path: awsS3.sslDisabled
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: awsS3.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:awsS3
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: |2-
           Secret refers to a secret that provides the credentials. The secret should define AccountName and AccountKey as provided
          by Azure Blob.
        displayName: Secret
        path: azureBlob.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:azureBlob
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: TargetBlobContainer is the name of the target Azure Blob container.
        displayName: Target Blob Container
        path: azureBlob.targetBlobContainer
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:azureBlob
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: |-
          Secret refers to a secret that provides the credentials. The secret should define GoogleServiceAccountPrivateKeyJson containing
          the entire json string as provided by Google.
        displayName: Secret
        path: googleCloudStorage.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:googleCloudStorage
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: googleCloudStorage.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:googleCloudStorage
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: NumVolumes is the number of volumes to allocate.
        displayName: Num Volumes
        path: pvPool.numVolumes
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:pvPool
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: VolumeResources represents the minimum resources each volume
          should have.
        displayName: Resources
        path: pvPool.resources
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:pvPool
        - urn:alm:descriptor:com.tectonic.ui:resourceRequirements
      - description: StorageClass is the name of the storage class to use for the
          PV's.
        displayName: Storage Class
        path: pvPool.storageClass
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:pvPool
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Endpoint is the S3 compatible endpoint: http(s)://host:port.'
        displayName: End Point
        path: s3Compatible.endpoint
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The
          secret should define AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: s3Compatible.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SignatureVersion specifies the client signature version to use
          when signing requests.
        displayName: Signature Version
        path: s3Compatible.signatureVersion
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: TargetBucket is the name of the target S3 bucket.
        displayName: Target Bucket
        path: s3Compatible.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:s3Compatible
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: 'Endpoint is the IBM COS endpoint: http(s)://host:port.'
        displayName: End Point
        path: IBMCos.endpoint
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Secret refers to a secret that provides the credentials. The
          secret should define IBM_COS_ACCESS_KEY_ID and IBM_COS_SECRET_ACCESS_KEY.
        displayName: Secret
        path: IBMCos.secret.name
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: SignatureVersion specifies the client signature version to use
          when signing requests.
        displayName: Signature Version
        path: IBMCos.signatureVersion
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:number
      - description: TargetBucket is the name of the target IBM COS bucket.
        displayName: Target Bucket
        path: IBMCos.targetBucket
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:ibmCos
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: Storage policy spec  tiering, mirroring, spreading. Combines BackingStores.
        Referenced by ObjectBucketClaims.
      displayName: Bucket Class
      kind: BucketClass
      name: bucketclasses.noobaa.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      specDescriptors:
      - description: BackingStores is an unordered list of backing store names. The
          meaning of the list depends on the placement.
        displayName: Backing Stores
        path: placementPolicy.tiers[0].backingStores[0]
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:placementPolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: Placement specifies the type of placement for the tier If empty
          it should have a single backing store.
        displayName: Placement
        path: placementPolicy.tiers[0].placement
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:fieldGroup:placementPolicy
        - urn:alm:descriptor:com.tectonic.ui:text
      version: v1alpha1
    - description: Claim a bucket just like claiming a PV. Automate you app bucket
        provisioning by creating OBC with your app deployment. A secret and configmap
        (name=claim) will be created with access details for the app pods.
      displayName: Object Bucket Claim
      kind: ObjectBucketClaim
      name: objectbucketclaims.objectbucket.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      version: v1alpha1
    - description: Used under-the-hood. Created per ObjectBucketClaim and keeps provisioning
        information.
      displayName: Object Bucket
      kind: ObjectBucket
      name: objectbuckets.objectbucket.io
      resources:
      - kind: Service
        name: services
        version: v1
      - kind: Secret
        name: secrets
        version: v1
      - kind: ConfigMap
        name: configmaps
        version: v1
      - kind: StatefulSet
        name: statefulsets.apps
        version: v1
      version: v1alpha1
  description: |2

    **Red Hat OpenShift Container Storage** deploys three operators.

    ### OpenShift Container Storage operator

    The OpenShift Container Storage operator is the primary operator for OpenShift Container Storage. It serves to facilitate the other operators in OpenShift Container Storage by performing administrative tasks outside their scope as well as watching and configuring their CustomResources.

    ### Rook

    [Rook][1] deploys and manages Ceph on OpenShift, which provides block and file storage.

    ### NooBaa operator

    The NooBaa operator deploys and manages the [NooBaa][2] Multi-Cloud Gateway on OpenShift, which provides object storage.

    # Core Capabilities

    * **Self-managing service:** No matter which supported storage technologies you choose, OpenShift Container Storage ensures that resources can be deployed and managed automatically.

    * **Hyper-scale or hyper-converged:** With OpenShift Container Storage you can either build dedicated storage clusters or hyper-converged clusters where your apps run alongside storage.

    * **File, Block, and Object provided by OpenShift Container Storage:** OpenShift Container Storage integrates Ceph with multiple storage presentations including object storage (compatible with S3), block storage, and POSIX-compliant shared file system.

    * **Your data, protected:** OpenShift Container Storage efficiently distributes and replicates your data across your cluster to minimize the risk of data loss. With snapshots, cloning, and versioning, no more losing sleep over your data.

    * **Elastic storage in your datacenter:** Scale is now possible in your datacenter. Get started with a few terabytes, and easily scale up.

    * **Simplified data management:** Easily create hybrid and multi-cloud data storage for your workloads, using a single namespace.

    [1]: https://rook.io
    [2]: https://noobaa.io
  displayName: OpenShift Container Storage
  icon:
  - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxOTIgMTQ1Ij48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2UwMDt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPlJlZEhhdC1Mb2dvLUhhdC1Db2xvcjwvdGl0bGU+PHBhdGggZD0iTTE1Ny43Nyw2Mi42MWExNCwxNCwwLDAsMSwuMzEsMy40MmMwLDE0Ljg4LTE4LjEsMTcuNDYtMzAuNjEsMTcuNDZDNzguODMsODMuNDksNDIuNTMsNTMuMjYsNDIuNTMsNDRhNi40Myw2LjQzLDAsMCwxLC4yMi0xLjk0bC0zLjY2LDkuMDZhMTguNDUsMTguNDUsMCwwLDAtMS41MSw3LjMzYzAsMTguMTEsNDEsNDUuNDgsODcuNzQsNDUuNDgsMjAuNjksMCwzNi40My03Ljc2LDM2LjQzLTIxLjc3LDAtMS4wOCwwLTEuOTQtMS43My0xMC4xM1oiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMjcuNDcsODMuNDljMTIuNTEsMCwzMC42MS0yLjU4LDMwLjYxLTE3LjQ2YTE0LDE0LDAsMCwwLS4zMS0zLjQybC03LjQ1LTMyLjM2Yy0xLjcyLTcuMTItMy4yMy0xMC4zNS0xNS43My0xNi42QzEyNC44OSw4LjY5LDEwMy43Ni41LDk3LjUxLjUsOTEuNjkuNSw5MCw4LDgzLjA2LDhjLTYuNjgsMC0xMS42NC01LjYtMTcuODktNS42LTYsMC05LjkxLDQuMDktMTIuOTMsMTIuNSwwLDAtOC40MSwyMy43Mi05LjQ5LDI3LjE2QTYuNDMsNi40MywwLDAsMCw0Mi41Myw0NGMwLDkuMjIsMzYuMywzOS40NSw4NC45NCwzOS40NU0xNjAsNzIuMDdjMS43Myw4LjE5LDEuNzMsOS4wNSwxLjczLDEwLjEzLDAsMTQtMTUuNzQsMjEuNzctMzYuNDMsMjEuNzdDNzguNTQsMTA0LDM3LjU4LDc2LjYsMzcuNTgsNTguNDlhMTguNDUsMTguNDUsMCwwLDEsMS41MS03LjMzQzIyLjI3LDUyLC41LDU1LC41LDc0LjIyYzAsMzEuNDgsNzQuNTksNzAuMjgsMTMzLjY1LDcwLjI4LDQ1LjI4LDAsNTYuNy0yMC40OCw1Ni43LTM2LjY1LDAtMTIuNzItMTEtMjcuMTYtMzAuODMtMzUuNzgiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - nodes
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - list
          - watch
          - create
        - apiGroups:
          - ocs.openshift.io
          resources:
          - '*'
          - storageclusters
          - ocsinitialization
          - storageclusterinitializations
          verbs:
          - '*'
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephclusters
          - cephblockpools
          - cephfilesystems
          - cephobjectstores
          - cephobjectstoreusers
          verbs:
          - '*'
        - apiGroups:
          - noobaa.io
          resources:
          - noobaas
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - security.openshift.io
          resources:
          - securitycontextconstraints
          verbs:
          - get
          - create
          - update
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - get
          - create
          - update
        - apiGroups:
          - template.openshift.io
          resources:
          - templates
          verbs:
          - '*'
        serviceAccountName: ocs-operator
      - rules:
        - apiGroups:
          - ceph.rook.io
          resources:
          - '*'
          verbs:
          - get
          - watch
          - list
        serviceAccountName: rook-ceph-admission-controller-role
      - rules:
        - apiGroups:
          - ""
          - apps
          - extensions
          resources:
          - secrets
          - pods
          - pods/log
          - services
          - configmaps
          - deployments
          - daemonsets
          verbs:
          - get
          - list
          - watch
          - patch
          - create
          - update
          - delete
        serviceAccountName: rook-ceph-cluster-mgmt
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - nodes
          - nodes/proxy
          - services
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          - persistentvolumes
          - persistentvolumeclaims
          - endpoints
          verbs:
          - get
          - list
          - watch
          - patch
          - create
          - update
          - delete
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ceph.rook.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - rook.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - policy
          - apps
          - extensions
          resources:
          - poddisruptionbudgets
          - deployments
          - replicasets
          verbs:
          - '*'
        - apiGroups:
          - healthchecking.openshift.io
          resources:
          - machinedisruptionbudgets
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - machine.openshift.io
          resources:
          - machines
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - storage.k8s.io
          resources:
          - csidrivers
          verbs:
          - create
          - delete
        serviceAccountName: rook-ceph-global
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - nodes
          - nodes/proxy
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
          - list
          - get
          - watch
        serviceAccountName: rook-ceph-mgr-cluster
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          verbs:
          - '*'
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - objectbucket.io
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
        serviceAccountName: rook-ceph-osd
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
        serviceAccountName: rook-ceph-mgr-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
        serviceAccountName: cephfs-csi-nodeplugin
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - list
          - watch
          - create
          - update
          - patch
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims/status
          verbs:
          - update
          - patch
        serviceAccountName: cephfs-external-provisioner-runner
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - update
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
        serviceAccountName: rbd-csi-nodeplugin
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
        - apiGroups:
          - ""
          resources:
          - persistentvolumes
          verbs:
          - get
          - list
          - watch
          - create
          - delete
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - get
          - list
          - watch
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - list
          - watch
          - create
          - update
          - patch
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshots
          verbs:
          - get
          - list
          - watch
          - update
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotcontents
          verbs:
          - create
          - get
          - list
          - watch
          - update
          - delete
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotcontents/status
          verbs:
          - update
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - list
          - watch
          - delete
          - get
          - update
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshots/status
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims/status
          verbs:
          - update
          - patch
        serviceAccountName: rbd-external-provisioner-runner
      - rules:
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - use
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - noobaa.io
          resources:
          - '*'
          - noobaas
          - backingstores
          - bucketclasses
          - noobaas/finalizers
          - backingstores/finalizers
          - bucketclasses/finalizers
          verbs:
          - '*'
        - apiGroups:
          - objectbucket.io
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          - persistentvolumes
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
          - create
          - update
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: noobaa
      deployments:
      - name: ocs-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: ocs-operator
          strategy:
            type: Recreate
          template:
            metadata:
              labels:
                name: ocs-operator
            spec:
              containers:
              - command:
                - ocs-operator
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: ocs-operator
                - name: ROOK_CEPH_IMAGE
                  value: rook/ceph:v1.4.0-28.g3c00330
                - name: CEPH_IMAGE
                  value: ceph/ceph:v14.2
                - name: NOOBAA_CORE_IMAGE
                  value: noobaa/noobaa-core:5.5.0
                - name: NOOBAA_DB_IMAGE
                  value: centos/mongodb-36-centos7
                image: quay.io/ocs-dev/ocs-operator:latest
                imagePullPolicy: Always
                name: ocs-operator
                ports:
                - containerPort: 60000
                  name: metrics
                readinessProbe:
                  exec:
                    command:
                    - stat
                    - /tmp/operator-sdk-ready
                  failureThreshold: 1
                  initialDelaySeconds: 4
                  periodSeconds: 10
                resources: {}
              serviceAccountName: ocs-operator
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
      - name: rook-ceph-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: rook-ceph-operator
          strategy: {}
          template:
            metadata:
              labels:
                app: rook-ceph-operator
            spec:
              containers:
              - args:
                - ceph
                - operator
                env:
                - name: ROOK_CURRENT_NAMESPACE_ONLY
                  value: "true"
                - name: ROOK_ALLOW_MULTIPLE_FILESYSTEMS
                  value: "false"
                - name: ROOK_LOG_LEVEL
                  value: INFO
                - name: ROOK_CEPH_STATUS_CHECK_INTERVAL
                  value: 60s
                - name: ROOK_MON_HEALTHCHECK_INTERVAL
                  value: 45s
                - name: ROOK_MON_OUT_TIMEOUT
                  value: 600s
                - name: ROOK_DISCOVER_DEVICES_INTERVAL
                  value: 60m
                - name: ROOK_HOSTPATH_REQUIRES_PRIVILEGED
                  value: "true"
                - name: ROOK_ENABLE_SELINUX_RELABELING
                  value: "true"
                - name: ROOK_ENABLE_FSGROUP
                  value: "true"
                - name: ROOK_ENABLE_FLEX_DRIVER
                  value: "false"
                - name: ROOK_ENABLE_DISCOVERY_DAEMON
                  value: "false"
                - name: ROOK_ENABLE_MACHINE_DISRUPTION_BUDGET
                  value: "false"
                - name: ROOK_DISABLE_DEVICE_HOTPLUG
                  value: "true"
                - name: ROOK_CSI_ALLOW_UNSUPPORTED_VERSION
                  value: "true"
                - name: CSI_PROVISIONER_TOLERATIONS
                  value: |2-

                    - key: node.ocs.openshift.io/storage
                      operator: Equal
                      value: "true"
                      effect: NoSchedule
                - name: CSI_PLUGIN_TOLERATIONS
                  value: |2-

                    - key: node.ocs.openshift.io/storage
                      operator: Equal
                      value: "true"
                      effect: NoSchedule
                - name: NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: CSI_ENABLE_SNAPSHOTTER
                  value: "false"
                - name: ROOK_OBC_WATCH_OPERATOR_NAMESPACE
                  value: "true"
                image: rook/ceph:v1.4.0-28.g3c00330
                name: rook-ceph-operator
                resources: {}
                volumeMounts:
                - mountPath: /var/lib/rook
                  name: rook-config
                - mountPath: /etc/ceph
                  name: default-config-dir
              serviceAccountName: rook-ceph-system
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
              volumes:
              - emptyDir: {}
                name: rook-config
              - emptyDir: {}
                name: default-config-dir
      - name: noobaa-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              noobaa-operator: deployment
          strategy: {}
          template:
            metadata:
              labels:
                app: noobaa
                noobaa-operator: deployment
            spec:
              containers:
              - env:
                - name: OPERATOR_NAME
                  value: noobaa-operator
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: NOOBAA_CORE_IMAGE
                  value: noobaa/noobaa-core:5.5.0
                - name: NOOBAA_DB_IMAGE
                  value: centos/mongodb-36-centos7
                image: noobaa/noobaa-operator:2.3.0
                name: noobaa-operator
                resources:
                  limits:
                    cpu: 250m
                    memory: 512Mi
              serviceAccountName: noobaa
              tolerations:
              - effect: NoSchedule
                key: node.ocs.openshift.io/storage
                operator: Equal
                value: "true"
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - configmaps
          - services
          verbs:
          - get
          - list
          - watch
          - patch
          - create
          - update
          - delete
        - apiGroups:
          - apps
          - extensions
          resources:
          - daemonsets
          - statefulsets
          - deployments
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - k8s.cni.cncf.io
          resources:
          - network-attachment-definitions
          verbs:
          - get
        serviceAccountName: rook-ceph-system
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephclusters
          - cephclusters/finalizers
          verbs:
          - get
          - list
          - create
          - update
          - delete
        serviceAccountName: rook-ceph-osd
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - pods/log
          verbs:
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        - apiGroups:
          - ceph.rook.io
          resources:
          - '*'
          verbs:
          - '*'
        serviceAccountName: rook-ceph-mgr
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - create
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        serviceAccountName: rook-csi-cephfs-provisioner-sa
      - rules:
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - watch
          - list
          - delete
          - update
          - create
        serviceAccountName: rook-csi-rbd-provisioner-sa
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
        serviceAccountName: rook-ceph-cmd-reporter
      - rules:
        - apiGroups:
          - noobaa.io
          resources:
          - '*'
          - noobaas
          - backingstores
          - bucketclasses
          - noobaas/finalizers
          - backingstores/finalizers
          - bucketclasses/finalizers
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          - prometheusrules
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services/finalizers
          verbs:
          - update
        - apiGroups:
          - apps
          resourceNames:
          - noobaa-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - cloudcredential.openshift.io
          resources:
          - credentialsrequests
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephobjectstores
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ceph.rook.io
          resources:
          - cephobjectstoreusers
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - get
          - create
          - update
          - list
          - watch
        - apiGroups:
          - autoscaling
          resources:
          - horizontalpodautoscalers
          verbs:
          - get
          - create
          - update
          - patch
          - list
          - watch
        serviceAccountName: noobaa
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - storage
  - rook
  - ceph
  - noobaa
  - block storage
  - shared filesystem
  - object storage
  links:
  - name: Source Code
    url: https://github.com/openshift/ocs-operator
  maintainers:
  - email: ocs-support@redhat.com
    name: Red Hat Support
  maturity: alpha
  provider:
    name: Red Hat
  relatedImages:
  - image: rook/ceph:v1.4.0-28.g3c00330
    name: rook-container
  - image: ceph/ceph:v14.2
    name: ceph-container
  - image: noobaa/noobaa-operator:2.3.0
    name: noobaa-operator
  - image: noobaa/noobaa-core:5.5.0
    name: noobaa-core
  - image: centos/mongodb-36-centos7
    name: noobaa-db
  - image: quay.io/ocs-dev/ocs-must-gather:latest
    name: ocs-must-gather
  version: 4.6.0
